/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package movimentoView;

import dao.CaixaDAO;
import dao.PedidoCrediarioDAO;
import dao.PedidoDAO;
import dao.PessoaDAO;
import java.awt.Color;
import java.awt.Component;

import java.text.DecimalFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import model.Caixa;
import model.Pedido;
import model.PedidoCrediario;
import model.PedidoItens;
import model.Pessoa;
import model.PessoaContato;

import static movimentoView.PedidoView.pessoaDAO;
import util.JTableFonteColunaDireitaAzul;
import util.JTableFonteColunaDireitaVermelha;


/**
 *
 * @author danel
 */
public class PedidoRecebeCrediarioView extends javax.swing.JInternalFrame {

    /**
     * Creates new form PedidoRecebeFiadoView
     */
    //Pedido pedido = new Pedido();
    List<PedidoCrediario> listaPedido = new ArrayList<>();
    public static List<PedidoCrediario> listaPedidoPagamentoMultiplo = new ArrayList<>();
    List<PedidoItens> listaItensPedido = new ArrayList<>();
    PedidoCrediarioDAO pedidoCrediarioDAO = new PedidoCrediarioDAO();
    public static PedidoCrediario pedidoCrediario = new PedidoCrediario();
    SimpleDateFormat formatadorHD = new SimpleDateFormat("dd/MM/yyyy' - 'HH':'mm");
    SimpleDateFormat formatadorD = new SimpleDateFormat("dd/MM/yyyy");
    public static String vlTotalStr = null;
    String numPedido = null;
    public static Caixa caixa;
    public static CaixaDAO caixaDAO;
    public static Pessoa colaborador;
    Pessoa cliente ;
    List<Pessoa> listaCliente = new ArrayList<>();
    PedidoCrediarioDAO pCredDao = new PedidoCrediarioDAO();
    Date dataVencimento = new Date();
    Date dataHoje = new Date();
    public static int indexJtable1;
    public static boolean btPagamentoMultiplo = false;
    public PedidoRecebeCrediarioView() {
        initComponents();
        jrbTodos.setSelected(true);
        carregaTable();
        jTabbedPane1.setEnabledAt(0, true);
        jTabbedPane1.setEnabledAt(1, false);
        jTabbedPane1.setEnabledAt(2, false);
//        jcbCliente.setVisible(false);
        jLabel2.setVisible(false);
        jLabel3.setVisible(false);
        jLabel4.setVisible(false);
        jdcIni.setVisible(false);
        jdcFim.setVisible(false);
        indexJtable1 = 0;
        jtfPesquisa.setVisible(false);
        jbtPesquisa.setVisible(false);
        
        
       // carregaCombobox();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        buttonGroup1 = new javax.swing.ButtonGroup();
        rowSorterToStringConverter1 = new converter.RowSorterToStringConverter();
        jPanel1 = new javax.swing.JPanel();
        jrbCliente = new javax.swing.JRadioButton();
        jrbTodos = new javax.swing.JRadioButton();
        jrbPeriodo = new javax.swing.JRadioButton();
        jPanel2 = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jtfTotal = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable3 = new javax.swing.JTable();
        jPanel6 = new javax.swing.JPanel();
        jbtSair = new javax.swing.JButton();
        jbtPagamento = new javax.swing.JButton();
        jbtPagamentoMultiplo = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jtfPesquisa = new javax.swing.JTextField();
        jdcIni = new com.toedter.calendar.JDateChooser();
        jdcFim = new com.toedter.calendar.JDateChooser();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jbtPesquisa = new javax.swing.JButton();

        rowSorterToStringConverter1.setTable(jTable1);

        setClosable(true);
        setMaximizable(true);
        setResizable(true);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("TIPO DE PESQUISA"));

        buttonGroup1.add(jrbCliente);
        jrbCliente.setText("Por Cliente");
        jrbCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrbClienteActionPerformed(evt);
            }
        });

        buttonGroup1.add(jrbTodos);
        jrbTodos.setText("Todos");
        jrbTodos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrbTodosActionPerformed(evt);
            }
        });

        buttonGroup1.add(jrbPeriodo);
        jrbPeriodo.setText("Por Período");
        jrbPeriodo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrbPeriodoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jrbTodos, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 75, Short.MAX_VALUE)
                        .addComponent(jrbCliente))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jrbPeriodo)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jrbTodos)
                    .addComponent(jrbCliente))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jrbPeriodo)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Vendas e Serviços à Receber"));

        jTable1.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "CÓD. VENDA", "CLIENTE", "DATA / HORA - VENDA", "VENCIMENTO", "PARCELA", "R$ VALOR TOTAL", "SELECIONADO", "IDCrediario"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Boolean.class, java.lang.Long.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, true, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setPreferredWidth(100);
            jTable1.getColumnModel().getColumn(1).setPreferredWidth(300);
            jTable1.getColumnModel().getColumn(2).setPreferredWidth(120);
            jTable1.getColumnModel().getColumn(3).setPreferredWidth(120);
            jTable1.getColumnModel().getColumn(4).setPreferredWidth(75);
            jTable1.getColumnModel().getColumn(5).setPreferredWidth(125);
            jTable1.getColumnModel().getColumn(6).setPreferredWidth(50);
            jTable1.getColumnModel().getColumn(7).setPreferredWidth(80);
        }

        jLabel1.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jLabel1.setText("TOTAL À RECEBER:");

        jtfTotal.setEditable(false);
        jtfTotal.setBackground(java.awt.Color.yellow);
        jtfTotal.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jtfTotal.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jtfTotal.setFocusable(false);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap(590, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jtfTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addComponent(jScrollPane1)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 296, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtfTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)))
        );

        jTabbedPane1.addTab("VENDAS", jPanel3);

        jTable2.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "CÓD. PRODUTO", "QTD.", "DESCRIÇÃO", "R$ UNITÁRIO", "R$ SUBTOTAL"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable2.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jScrollPane2.setViewportView(jTable2);
        if (jTable2.getColumnModel().getColumnCount() > 0) {
            jTable2.getColumnModel().getColumn(0).setPreferredWidth(100);
            jTable2.getColumnModel().getColumn(1).setPreferredWidth(100);
            jTable2.getColumnModel().getColumn(2).setPreferredWidth(280);
            jTable2.getColumnModel().getColumn(3).setPreferredWidth(120);
            jTable2.getColumnModel().getColumn(4).setPreferredWidth(120);
        }

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 896, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 327, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("ITENS DA VENDA", jPanel4);

        jTable3.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        jTable3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "DESCRIÇÃO", "DDD", "NÚMERO"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable3.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jScrollPane3.setViewportView(jTable3);
        if (jTable3.getColumnModel().getColumnCount() > 0) {
            jTable3.getColumnModel().getColumn(0).setPreferredWidth(300);
            jTable3.getColumnModel().getColumn(1).setPreferredWidth(120);
            jTable3.getColumnModel().getColumn(2).setPreferredWidth(200);
        }

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 896, Short.MAX_VALUE)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 327, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("CONTATO CLIENTE", jPanel5);

        jPanel6.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jbtSair.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/exit_1.png"))); // NOI18N
        jbtSair.setText("Sair");
        jbtSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtSairActionPerformed(evt);
            }
        });

        jbtPagamento.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/Calculator.png"))); // NOI18N
        jbtPagamento.setText("Pagamento Único");
        jbtPagamento.setEnabled(false);
        jbtPagamento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtPagamentoActionPerformed(evt);
            }
        });
        jbtPagamento.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jbtPagamentoKeyPressed(evt);
            }
        });

        jbtPagamentoMultiplo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/botaoGaveta.png"))); // NOI18N
        jbtPagamentoMultiplo.setText("Pagamento Múltiplo");
        jbtPagamentoMultiplo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtPagamentoMultiploActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jbtPagamentoMultiplo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jbtPagamento, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jbtSair, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jbtSair, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jbtPagamento)
                .addComponent(jbtPagamentoMultiplo))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addComponent(jTabbedPane1)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 365, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder("DADOS COMPLEMENTARES"));

        jLabel2.setText("jLabel2");

        org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, jTable1, org.jdesktop.beansbinding.ELProperty.create("${rowSorter}"), jtfPesquisa, org.jdesktop.beansbinding.BeanProperty.create("text"));
        binding.setConverter(rowSorterToStringConverter1);
        bindingGroup.addBinding(binding);

        jLabel3.setText("jLabel3");

        jLabel4.setText("jLabel4");

        jbtPesquisa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/search.png"))); // NOI18N
        jbtPesquisa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtPesquisaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jtfPesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jdcIni, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jdcFim, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jbtPesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jbtPesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jtfPesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jdcIni, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jdcFim, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        bindingGroup.bind();

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbtSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtSairActionPerformed
        dispose();
    }//GEN-LAST:event_jbtSairActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
       DefaultTableModel amodelItens = (DefaultTableModel) jTable2.getModel();
       amodelItens.setNumRows(0);
       DefaultTableModel amodelContato = (DefaultTableModel) jTable3.getModel();
       amodelContato.setNumRows(0);
       cliente = new Pessoa() {};
       pessoaDAO = new PessoaDAO();
       Long id = Long.parseLong(jTable1.getValueAt(jTable1.getSelectedRow(), 7).toString());
       pedidoCrediario = pCredDao.pedidoCrediarioId(id);
        
       for (PedidoItens itens : pedidoCrediario.getIdPedido().getListaItens()){                   
                   amodelItens.addRow(new Object[]{itens.getProduto().getId(), itens.getQuantidade(), itens.getDescricao(), itens.getVlUnit(), itens.getVlSubtotal()});
        }
        
        cliente = pessoaDAO.pessoa(pedidoCrediario.getIdPedido().getCliente().getId());   
        
        for (PessoaContato contato : cliente.getListaContato()){
            amodelContato.addRow(new Object[]{contato.getDescricao(), contato.getDdd(), contato.getNumero()});
        }   
        
      

        
       jTable2.getColumnModel().getColumn(3).setCellRenderer(new JTableFonteColunaDireitaAzul());
       jTable2.getColumnModel().getColumn(4).setCellRenderer(new JTableFonteColunaDireitaAzul());
       //Muda cor da Linha Selecionada na Jtable1.
       jTable2.setSelectionBackground( new Color(255,230,22) );
       //Altera cor da Fonte na linha selecionada.          
       jTable2.setSelectionForeground(Color.BLACK);
       jbtPagamento.setEnabled(true);
       vlTotalStr = jTable1.getValueAt(jTable1.getSelectedRow(), 5).toString();        
       numPedido = jTable1.getValueAt(jTable1.getSelectedRow(), 0).toString();
       this.setTitle("Contas à Receber (Crediário) - Cliente : "+cliente.getNome());
       jTabbedPane1.setEnabledAt(1, true);
       jTabbedPane1.setEnabledAt(2, true);
       
        
       
       
      // jbtPagamento.requestFocus();
        
        
    }//GEN-LAST:event_jTable1MouseClicked

    private void jbtPagamentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtPagamentoActionPerformed
        btPagamentoMultiplo = false;
        caixa = new Caixa();
        caixaDAO = new CaixaDAO();
        colaborador = new Pessoa() {};
        pessoaDAO = new PessoaDAO();
        
        
        Long idPessoa = Long.parseLong(menuView.Menu.idColaborador);
        colaborador = pessoaDAO.pessoa(idPessoa);
        
        try{
            
            
           caixa = caixaDAO.carregaCaixa(colaborador);
           float subtotal = 0;
           vlTotalStr = vlTotalStr.replace(".", "");
           vlTotalStr = vlTotalStr.replace(",", ".");
           subtotal = Float.parseFloat(vlTotalStr);          
           vlTotalStr = new DecimalFormat("#,##0.00").format(subtotal);
           PedidoPagamentoCrediarioView p = new PedidoPagamentoCrediarioView(new java.awt.Frame(), true);
           p.setTitle("Recebimento de Crediário - Cód. Venda: "+numPedido);
           p.setLocationRelativeTo(null); // centraliza a tela
           p.setVisible(true);  
           jTabbedPane1.setEnabledAt(1, false);
           jTabbedPane1.setEnabledAt(2, false);
           this.setTitle("Contas à Receber (CREDIÁRIO)");
           jbtPagamento.setEnabled(false);
       //    jrbTodos.doClick();
           // System.out.println("vltotal ="+vlTotalStr);
           jrbTodos.requestFocus();
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, "CAIXA FECHADO !!!");
        }
        
        
        
    }//GEN-LAST:event_jbtPagamentoActionPerformed

    private void jrbTodosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrbTodosActionPerformed
        
        jtfPesquisa.setText("");
        carregaTable();
        jLabel2.setVisible(false);
   //     jcbCliente.setVisible(false);
        jLabel3.setVisible(false);
        jLabel4.setVisible(false);
        jdcIni.setVisible(false);
        jdcFim.setVisible(false);
        jtfPesquisa.setVisible(false);
        jbtPesquisa.setVisible(false);
    }//GEN-LAST:event_jrbTodosActionPerformed

    private void jrbClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrbClienteActionPerformed
        jLabel2.setVisible(true);
        jLabel2.setText("Digite o Nome do Cliente");
        jLabel3.setVisible(false);
        jLabel4.setVisible(false);
    //    jcbCliente.setVisible(false);
       // carregaCombobox();
         jtfPesquisa.setVisible(true); 
         jdcIni.setVisible(false);
         jdcFim.setVisible(false);
         jbtPesquisa.setVisible(false);
         carregaTable();
        jtfPesquisa.requestFocus();
    }//GEN-LAST:event_jrbClienteActionPerformed

    private void jrbPeriodoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrbPeriodoActionPerformed
        jrbTodos.doClick();
        
        jLabel2.setVisible(false);
        jtfPesquisa.setVisible(false);        
        jLabel4.setVisible(true);
        jLabel3.setVisible(true);
        jLabel3.setText("Data Inicial");
        jLabel4.setText("Data Final");
        
        jbtPesquisa.setVisible(true);
        jdcIni.setDate(null);
        jdcFim.setDate(null);
        
        jdcIni.setVisible(true);
        jdcFim.setVisible(true);
        jrbPeriodo.setSelected(true);
        jdcIni.requestFocus();
                
         
    }//GEN-LAST:event_jrbPeriodoActionPerformed

    private void jbtPesquisaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtPesquisaActionPerformed

        carregaTable();
    }//GEN-LAST:event_jbtPesquisaActionPerformed

    private void jbtPagamentoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jbtPagamentoKeyPressed
        if (evt.getKeyCode() == evt.VK_ENTER){
            String op = System.getProperty("os.name");
            if (!"Linux".equals(op))
                jbtPagamentoActionPerformed(null);
        } 
        
    }//GEN-LAST:event_jbtPagamentoKeyPressed

    private void jbtPagamentoMultiploActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtPagamentoMultiploActionPerformed
       
        PedidoCrediario pCrediario = null;
        btPagamentoMultiplo = true; 
        caixa = new Caixa();
        caixaDAO = new CaixaDAO();
        colaborador = new Pessoa() {};
        pessoaDAO = new PessoaDAO();
               
        Long idPessoa = Long.parseLong(menuView.Menu.idColaborador);
        colaborador = pessoaDAO.pessoa(idPessoa);
        
        try{
          float vltotal = 0; 
          vlTotalStr = null;
          
          listaPedidoPagamentoMultiplo.clear();
          int numVenda = 0;
          for (int i = 0; i < jTable1.getRowCount(); i++){
             if (jTable1.getValueAt(i, 6).equals(true)){
                 pCrediario = new PedidoCrediario();
                 Long idPedidoCrediario = Long.parseLong(jTable1.getValueAt(i, 7).toString());
                 pCrediario =  pedidoCrediarioDAO.pedidoCrediarioId(idPedidoCrediario);
                 
                 if (i == 0){
                     numVenda = pCrediario.getIdPedido().getId();
                 }
                 
                 
                 if (pCrediario.getIdPedidoPagamento() != null){
                     JOptionPane.showMessageDialog(null, "O Crediário da Venda Nº"+pCrediario.getIdPedido().getId()+" está com Abatimento");
                     return;
                 }
                 
                 
                 listaPedidoPagamentoMultiplo.add(pCrediario);
                 
//                 if (numVenda == pCrediario.getIdPedido().getId()){
//                 
//                    listaPedidoPagamentoMultiplo.add(pCrediario);    
//                 }else{
//                     JOptionPane.showMessageDialog(null, "Para fazer Recebimento Múltiplo, \n"
//                             + " Os Crediários precisam ser da mesma Venda");
//                     return;
//                 }
             }
           }
           
           if (listaPedidoPagamentoMultiplo.size() == 0){
               JOptionPane.showMessageDialog(null, "Nenhum Crediário Selecionado");
               return;
           }
            
            System.out.println("listaPedidoPgMult ="+listaPedidoPagamentoMultiplo.size());           
          for (PedidoCrediario pc : listaPedidoPagamentoMultiplo){
              vltotal = (vltotal + Float.parseFloat(pc.getVlParcela().toString()));                     
          }
                 
            
         
          
//            
           caixa = caixaDAO.carregaCaixa(colaborador);
           vlTotalStr = new DecimalFormat("#,##0.00").format(vltotal);
           
           PedidoPagamentoCrediarioView p = new PedidoPagamentoCrediarioView(new java.awt.Frame(), true);
           p.setTitle("Recebimento de Crediário - Múltiplo");
           p.setLocationRelativeTo(null); // centraliza a tela
           p.setVisible(true);  
           
           //Formulario de Recebimento de Crediario.
//           jTabbedPane1.setEnabledAt(1, false);
//           jTabbedPane1.setEnabledAt(2, false);
//           this.setTitle("Contas à Receber (CREDIÁRIO)");
//           jbtPagamento.setEnabled(false);
//           jrbTodos.doClick();
           
           jrbTodos.requestFocus();
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, "CAIXA FECHADO !!!");
        }
          
   
        
        
        
       
    }//GEN-LAST:event_jbtPagamentoMultiploActionPerformed

    private  void carregaTable(){
        DefaultTableModel amodel1 = (DefaultTableModel) jTable1.getModel();
         amodel1.setNumRows(0);
        float total = 0, totalGeral = 0;
        String totalStr = null;
        
        Date dataNow = new Date();
            
        if (jrbTodos.isSelected() || jrbCliente.isSelected()){
           listaPedido = pedidoCrediarioDAO.listaPedidoCrediarioTodos();                 
       }else
           if (jrbPeriodo.isSelected()){                   
              //listaPedidoCred = pedidoCredDAO.listaPedidoCrediarioPorCliente(listaCliente.get(jcbCliente.getSelectedIndex()));
              listaPedido = pedidoCrediarioDAO.listaPorPeriodo(jdcIni.getDate(), jdcFim.getDate());
           }
                    
       for (PedidoCrediario p : listaPedido){
           total = 0;
          
           totalStr = null;
           String vlParcelaStr = null;
//           for(PedidoItens itens : p.getIdPedido().getListaItens()) {
//              totalStr = itens.getVlSubtotal().toString();
//              total = (total + Float.parseFloat(totalStr));                 
//           } 
           total = Float.parseFloat(p.getVlParcela().toString());
           totalStr = new DecimalFormat("#,##0.00").format(total);
           totalStr = totalStr.replace(",", ".");
           vlParcelaStr = new DecimalFormat("#,##0.00").format(p.getVlParcela());
           amodel1.addRow(new Object[]{p.getIdPedido().getId(), p.getIdPedido().getCliente().getNome(), formatadorHD.format(p.getIdPedido().getDtCad()), 
               formatadorD.format(p.getDtVencimento()),p.getNumParcela(), vlParcelaStr, false, p.getId()});                   
           totalGeral = totalGeral + total;
           
                     
        }
        
        //criando o render
        DefaultTableCellRenderer dtcr
                = new DefaultTableCellRenderer() {
                    public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
                        Component comp = super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);
                       
                        try {
                            dataVencimento = formatadorD.parse(jTable1.getValueAt(row, 3).toString());
                        } catch (ParseException ex) {
                            Logger.getLogger(PedidoRecebeCrediarioView.class.getName()).log(Level.SEVERE, null, ex);
                        }
                                
                        
                                              
                        if (verificavencimento(dataHoje, dataVencimento) == false) {
                         //   comp.setBackground(Color.yellow);
                            comp.setForeground(Color.RED);
                        } else
                            comp.setForeground(Color.BLACK);
                                
//                        else {
//                            comp.setBackground(Color.WHITE);
//                            comp.setForeground(Color.BLACK);
//                        }
                        return comp;
                    }
        };
        
        jTable1.setDefaultRenderer(Object.class, dtcr);
        jTable1.setSelectionBackground( new Color(255,230,22) );
               
       
       
       
       
        jTable1.getColumnModel().getColumn(5).setCellRenderer(new JTableFonteColunaDireitaAzul());
//        //Muda cor da Linha Selecionada na Jtable1.
        jTable1.setSelectionBackground( new Color(255,230,22) );
//        //Altera cor da Fonte na linha selecionada.          
//        jTable1.setSelectionForeground(Color.BLACK);
//         
        jtfTotal.setText(new DecimalFormat("#,##0.00").format(totalGeral));
           
        jTabbedPane1.setEnabledAt(1, false);
        jTabbedPane1.setEnabledAt(2, false);
        this.setTitle("Contas à Receber");
            
                
      
    }  
    
     
    public boolean verificavencimento(Date hoje, Date vencimento){
	boolean data;
	if (hoje.before(vencimento)){
            
	   data = true;
	}
	else if (hoje.after(vencimento)){
	           
                 data = false;
        }else
		data = true;
	return data;
    }
    
    
    
    
    
//     private void carregaCombobox(){
//        
//        pessoaDAO = new PessoaDAO();
//        listaCliente = pessoaDAO.listaClienteALL();
//        
//        jcbCliente.removeAllItems();
//        for(Pessoa p : listaCliente){
//            
//           if (p.getNome().equals("ADMIN"))       
//               jcbCliente.addItem("COSUMIDOR");
//           else
//               jcbCliente.addItem(p.getNome()+" - "+p.getId());
//        }
//                
//       
//        
//    }
//        
    
    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTabbedPane jTabbedPane1;
    public static javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTable jTable3;
    private javax.swing.JButton jbtPagamento;
    private javax.swing.JButton jbtPagamentoMultiplo;
    private javax.swing.JButton jbtPesquisa;
    private javax.swing.JButton jbtSair;
    private com.toedter.calendar.JDateChooser jdcFim;
    private com.toedter.calendar.JDateChooser jdcIni;
    private javax.swing.JRadioButton jrbCliente;
    private javax.swing.JRadioButton jrbPeriodo;
    public static javax.swing.JRadioButton jrbTodos;
    private javax.swing.JTextField jtfPesquisa;
    private javax.swing.JTextField jtfTotal;
    private converter.RowSorterToStringConverter rowSorterToStringConverter1;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables
}
