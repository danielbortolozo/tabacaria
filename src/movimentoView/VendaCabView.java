/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package movimentoView;


import dao.ClienteDAO;
import dao.ColaboradorDAO;
import dao.OrcamentoCabDAO;
import dao.ProdutoDAO;
import dao.VendaCabDAO;
import dao.VendaRecebimentoDAO;
import java.text.DecimalFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import menuView.Menu;
import model.Pessoa;
import model.VendaCab;
import model.VendaDet;
import model.VendaRecebimento;
import relatoriosView.ImprimeRelatorio;





/**
 *
 * @author del
 */
public class VendaCabView extends javax.swing.JInternalFrame {

    /**
     * Creates new form VendaCabView
     */
    List<Pessoa> listaCliente;
    List<VendaDet> listaVendaDet;
    public static String operacao;
    public static Long idOrcamento;
   // float vltotal, subtotal, porcentagem = 0;
    String vltotalStr, subtotalStr;
    public static String recebidoStr, trocoStr, tipoPagto;
    public static VendaCab vendaCab;
    private VendaDetView vendaDetView;
    public static float vltotal, porcentagem, subtotal, vltotalDesc;
    public static int contItem;
    public VendaCabView() {
        initComponents();
        carregaCombobox();
       // jrbVarejo.setSelected(true);
        habilitar(false);
        jlCodVenda.setText("0");
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jcbCliente = new javax.swing.JComboBox();
        jtfData = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jtfValorTotal = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jtfOperador = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jtfSubTotal = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jtfDesconto = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jcbTipoVenda = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jtfParcelas = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jtfVencimento = new javax.swing.JTextField();
        try{
            javax.swing.text.MaskFormatter data= new javax.swing.text.MaskFormatter("##/##/####");
            jtfVencimento = new javax.swing.JFormattedTextField(data);
        }
        catch (Exception e){
        }
        jLabel11 = new javax.swing.JLabel();
        jlCodVenda = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel4 = new javax.swing.JPanel();
        jbtNovo = new javax.swing.JButton();
        jbtExcluir = new javax.swing.JButton();
        jbtCancelar = new javax.swing.JButton();
        jbtSalvar = new javax.swing.JButton();
        jbtSair = new javax.swing.JButton();
        jbtProduto = new javax.swing.JButton();
        jbtImprimir = new javax.swing.JButton();

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Dados da Venda"));

        jLabel2.setText("CLIENTE");

        jcbCliente.setEnabled(false);
        jcbCliente.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jcbClienteKeyPressed(evt);
            }
        });

        jtfData.setEditable(false);
        jtfData.setEnabled(false);

        jLabel3.setText("DATA VENDA");

        jLabel4.setText("R$ TOTAL");

        jtfValorTotal.setEditable(false);
        jtfValorTotal.setBackground(new java.awt.Color(248, 241, 120));
        jtfValorTotal.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jtfValorTotal.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jtfValorTotal.setEnabled(false);

        jLabel5.setText("VENDEDOR");

        jtfOperador.setEditable(false);
        jtfOperador.setEnabled(false);

        jLabel6.setText("R$ SUB TOTAL");

        jtfSubTotal.setEditable(false);
        jtfSubTotal.setBackground(new java.awt.Color(248, 241, 190));
        jtfSubTotal.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jtfSubTotal.setEnabled(false);

        jLabel7.setText("DESCONTO ");

        jtfDesconto.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jtfDesconto.setEnabled(false);
        jtfDesconto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtfDescontoKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtfDescontoKeyTyped(evt);
            }
        });

        jLabel8.setText("TIPO VENDA");

        jcbTipoVenda.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "A VISTA", "A PRAZO" }));
        jcbTipoVenda.setEnabled(false);
        jcbTipoVenda.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jcbTipoVendaKeyPressed(evt);
            }
        });

        jLabel1.setText("NÂº PARCELAS");

        jLabel9.setText("%");

        jtfParcelas.setEnabled(false);
        jtfParcelas.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtfParcelasKeyPressed(evt);
            }
        });

        jLabel10.setText("VENCIMENTO");

        jtfVencimento.setEnabled(false);
        jtfVencimento.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtfVencimentoKeyPressed(evt);
            }
        });

        jLabel11.setText("COD. VENDA");

        jlCodVenda.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jlCodVenda.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlCodVenda.setText("jLabel12");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jcbTipoVenda, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel8))
                                .addGap(17, 17, 17)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(jLabel1)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel10))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(jtfParcelas, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jtfVencimento, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addComponent(jLabel5)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jcbCliente, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jtfOperador, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 369, Short.MAX_VALUE)))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel11, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jtfDesconto, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel7))
                            .addComponent(jlCodVenda, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel9)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 137, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel4)
                    .addComponent(jLabel3)
                    .addComponent(jLabel6)
                    .addComponent(jtfSubTotal, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtfValorTotal)
                    .addComponent(jtfData, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel3)
                    .addComponent(jLabel11))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtfOperador, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtfData, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jlCodVenda))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jcbCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtfSubTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel8)
                    .addComponent(jLabel1)
                    .addComponent(jLabel7)
                    .addComponent(jLabel10))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jtfValorTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jcbTipoVenda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jtfParcelas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jtfVencimento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jtfDesconto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel9)))
                .addContainerGap())
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Itens da Venda"));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ITENS", "CÃD. PRODUTO", "DESCRIÃÃO", "QTDE", "UND.", "R$ UNIT.", "DESC. %", "R$ TOTAL"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                true, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jTable1.getTableHeader().setReorderingAllowed(false);
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setPreferredWidth(50);
            jTable1.getColumnModel().getColumn(1).setPreferredWidth(80);
            jTable1.getColumnModel().getColumn(2).setPreferredWidth(280);
            jTable1.getColumnModel().getColumn(3).setPreferredWidth(50);
            jTable1.getColumnModel().getColumn(4).setPreferredWidth(50);
            jTable1.getColumnModel().getColumn(5).setPreferredWidth(110);
            jTable1.getColumnModel().getColumn(6).setPreferredWidth(70);
            jTable1.getColumnModel().getColumn(7).setPreferredWidth(110);
        }

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 224, Short.MAX_VALUE)
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jbtNovo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/add.png"))); // NOI18N
        jbtNovo.setToolTipText("Adicionar Novo");
        jbtNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtNovoActionPerformed(evt);
            }
        });

        jbtExcluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/delete.png"))); // NOI18N
        jbtExcluir.setToolTipText("Excluir OrÃ§amento");
        jbtExcluir.setEnabled(false);
        jbtExcluir.setFocusCycleRoot(true);
        jbtExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtExcluirActionPerformed(evt);
            }
        });

        jbtCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/cancel.png"))); // NOI18N
        jbtCancelar.setToolTipText("Cancelar OrÃ§amento");
        jbtCancelar.setEnabled(false);
        jbtCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtCancelarActionPerformed(evt);
            }
        });

        jbtSalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/ok.png"))); // NOI18N
        jbtSalvar.setText("Finalizar ");
        jbtSalvar.setToolTipText("Finalizar Venda");
        jbtSalvar.setEnabled(false);
        jbtSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtSalvarActionPerformed(evt);
            }
        });

        jbtSair.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/exit_1.png"))); // NOI18N
        jbtSair.setToolTipText("Fechar OrÃ§amento");
        jbtSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtSairActionPerformed(evt);
            }
        });

        jbtProduto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/Load.png"))); // NOI18N
        jbtProduto.setToolTipText("Importar Produto");
        jbtProduto.setEnabled(false);
        jbtProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtProdutoActionPerformed(evt);
            }
        });
        jbtProduto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jbtProdutoKeyPressed(evt);
            }
        });

        jbtImprimir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/print-icon.png"))); // NOI18N
        jbtImprimir.setToolTipText("Imprimir OrÃ§amento");
        jbtImprimir.setEnabled(false);
        jbtImprimir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtImprimirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jbtNovo, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jbtImprimir, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jbtProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jbtCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jbtExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jbtSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jbtSair, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jbtProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
            .addComponent(jbtCancelar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jbtExcluir, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jbtSalvar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jbtNovo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jbtSair))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jbtImprimir, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jcbClienteKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jcbClienteKeyPressed
        if (evt.getKeyCode() == evt.VK_ENTER){
            if (jcbCliente.getSelectedIndex() < 0){
                JOptionPane.showMessageDialog(null, "Digite o Nome do Cliente");
                jcbCliente.requestFocus();
            }else{
                jcbTipoVenda.setEnabled(true);
                jcbTipoVenda.requestFocus();
            }
        }
    }//GEN-LAST:event_jcbClienteKeyPressed

    private void jtfDescontoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfDescontoKeyPressed
        if (evt.getKeyCode() == evt.VK_ENTER){
//            // subtotal = vltotal;
            String subtotalStr;
            subtotalStr = jtfSubTotal.getText();
            subtotalStr = subtotalStr.replace(".", "");
            subtotalStr = subtotalStr.replace(",", ".");
            
            subtotal= Float.parseFloat(subtotalStr);
            if (jtfDesconto.getText().equals("") || (jtfDesconto.getText().equals("0")
               || (jtfDesconto.getText().equals("0.0")))){
                jtfDesconto.setText("");
                jtfDesconto.setText("0.0");
               // vltotal = subtotal;
                jtfValorTotal.setText(new DecimalFormat("#,##0.00").format(vltotal));
                System.out.println("Valor total vltotal ="+vltotal);

            }else{
                porcentagem = Float.parseFloat(jtfDesconto.getText());
                vltotalDesc = (subtotal -(subtotal*porcentagem/100));
                jtfValorTotal.setText("");
                jtfValorTotal.setText(new DecimalFormat("#,##0.00").format(vltotalDesc));
            }
            jbtSalvar.setEnabled(true);
            jbtSalvar.requestFocus();
        }
    }//GEN-LAST:event_jtfDescontoKeyPressed

    private void jtfDescontoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfDescontoKeyTyped
        String caracteres="0987654321.";
        if (!caracteres.contains(evt.getKeyChar()+"")){
            evt.consume();
        }
    }//GEN-LAST:event_jtfDescontoKeyTyped

    private void jbtNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtNovoActionPerformed
        operacao = "salvar";
//        vltotal = 0;
//        contItem = 0;
//        subtotal = 0;
        vendaCab = new VendaCab();
        DefaultTableModel amodel = (DefaultTableModel) jTable1.getModel();
        amodel.setNumRows(0);
        Date dataSis = new Date();
        SimpleDateFormat formato = new SimpleDateFormat("dd/MM/yyyy");
        jtfData.setText(formato.format(dataSis));
        jtfData.setEnabled(true);
        jtfOperador.setEnabled(true);
//        jtfOperador.setText(menuView.Menu.nomeUsuario);
        carregaCombobox();
        jtfOperador.setText(Menu.nomeUsuario);
        //
        jcbCliente.setEnabled(true);
        jbtCancelar.setEnabled(true);
        jbtNovo.setEnabled(false);
        jtfSubTotal.setText("0");
        idOrcamento = 0L;
        
        
        
//        jtfPesquisa.setEnabled(false);
        jcbCliente.requestFocus();
    }//GEN-LAST:event_jbtNovoActionPerformed

    private void jbtExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtExcluirActionPerformed
        //        if (javax.swing.JOptionPane.showConfirmDialog(null, "Deseja Realmente Excluir esta Unidade de Produto?", "ATENÃÃO ", javax.swing.JOptionPane.YES_NO_OPTION) == 0) {
            //
            //            UnidadeProdutoDAO unidadeDAO = new UnidadeProdutoDAO();
            //            unidadeDAO.excluir(carregaObjeto());
            //            JOptionPane.showMessageDialog(null, "Unidade ExcluÃ­da com Sucesso !!!");
            //            jbtCancelarActionPerformed(evt);
            //        }
    }//GEN-LAST:event_jbtExcluirActionPerformed

    private void jbtCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtCancelarActionPerformed
        DefaultTableModel amodel1;
        amodel1 = (DefaultTableModel) jTable1.getModel();
        amodel1.setNumRows(0);
        habilitar(false);
        limpar();
        jbtCancelar.setEnabled(false);
        jbtProduto.setEnabled(false);
        jbtNovo.setEnabled(true);
        jbtSalvar.setEnabled(false);
        jbtNovo.requestFocus();
    }//GEN-LAST:event_jbtCancelarActionPerformed

    private void jbtSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtSalvarActionPerformed
        OrcamentoCabDAO daoOrc = new OrcamentoCabDAO();
        VendaRecebimentoView vendaRecebimentoView;
        Calendar calendar = Calendar.getInstance(); 
        
        if (operacao == "salvar") {           
            //ValidaÃ§Ã£o dos Campos Parcelas e Vencimento.
            if (jtfParcelas.getText().equals("")) {
                JOptionPane.showMessageDialog(null, "Digite o NÃºmeros de Parcelas");
                jtfParcelas.requestFocus();
                return;
            }
            if (jtfVencimento.getText().equals("  /  /    ")) {
                JOptionPane.showMessageDialog(null, "Digite a Data de Vencimento.");
                jtfVencimento.requestFocus();
                return;
            }
            if (jtfSubTotal.getText().equals("")){
                JOptionPane.showMessageDialog(null, "NÃ£o existem itens de venda.");
                return;
            }
            if (jtfSubTotal.getText().equals("0,00") || jtfSubTotal.getText().equals("0")){
                JOptionPane.showMessageDialog(null, "NÃ£o exitem itens de venda.");
                jtfVencimento.requestFocus();
                return;
            }
            //Fim da ValidaÃ§Ã£o.
            
            VendaCabDAO daoVendaCab = new VendaCabDAO();

            //Salvar Venda, e retorna a venda salva.
            try {              
                if (vendaCab.getId() == null) {                    
                    vendaCab = daoVendaCab.salvar(carregaVendaCab()); 
                    jlCodVenda.setText(vendaCab.getId().toString());
                    vltotal = 0; //finalizando a soma de venda.
                }                
                if (idOrcamento > 0) {
                    daoOrc.alteraStatusOrcamento(idOrcamento, "FECHADO");
                }
                
            } catch (ParseException ex) {
                JOptionPane.showMessageDialog(null, "Problemas ao Carregar Objeto de Venda. Error: " + ex.getMessage());
            }

            //Se a Venda for A Vista, entÃ£o chama o formulario de Forma de Pagamento.
            if (jcbTipoVenda.getSelectedIndex() == 0) {
                vendaRecebimentoView = new VendaRecebimentoView(new java.awt.Frame(), true);
                vendaRecebimentoView.setTitle("Forma de Pagamento Ã Vista");
                vendaRecebimentoView.jtfSubTotal.setText(jtfSubTotal.getText());
                vendaRecebimentoView.jtfTotal.setText(jtfValorTotal.getText());
               // if (jtfDesconto.getText().equals(""))
                vendaRecebimentoView.jtfDesconto.setText(jtfDesconto.getText());
           //     vendaRecebimentoView.jtfJuros.setEnabled(false);
           //     vendaRecebimentoView.jtfJuros.setText("0.0");
                vendaRecebimentoView.jtfDesconto.setEnabled(true);
                vendaRecebimentoView.jtfDesconto.setEditable(false);
                vendaRecebimentoView.jtfDesconto.setText(jtfDesconto.getText());
//                vendaRecebimentoView.jLabel14.setVisible(false);
//                vendaRecebimentoView.jLabel15.setVisible(false);
//                vendaRecebimentoView.jlParcela.setVisible(false);
//                vendaRecebimentoView.jlVencimento.setVisible(false);
                vendaRecebimentoView.tipoVenda = jcbTipoVenda.getSelectedIndex();
//                vendaRecebimentoView.jlParcela.setText("1");
                vendaRecebimentoView.venda = vendaCab;
                vendaRecebimentoView.setLocationRelativeTo(null); // centraliza a tela 
                vendaRecebimentoView.setVisible(true);
                vendaRecebimentoView.jcbTipoPagto.requestFocus();
                              
                if (vendaRecebimentoView.transacao == "yes") {
                    vendaCab.setStatus("FECHADO");
                    daoVendaCab.alterar(vendaCab);                                  
                    JOptionPane.showMessageDialog(null, "Venda Finalizada com Sucesso.");
                }
                
                try {
                ImprimeRelatorio recibo = new ImprimeRelatorio();
                    System.out.println("imprimir recibo a vista");
                recebidoStr = (new DecimalFormat("#,##0.00").format(Float.parseFloat(recebidoStr)));            
                recibo.reciboVendaAVista(vendaCab, jcbCliente.getSelectedItem().toString(), jtfOperador.getText(), recebidoStr, trocoStr, tipoPagto);
                } catch (Exception ex) {
                    Logger.getLogger(VendaCabView.class.getName()).log(Level.SEVERE, null, ex);
                }
            }else{               //Fim Venda A Vista.
                VendaRecebimentoDAO venReciboDao = new VendaRecebimentoDAO();
                int parcelas =0;
                List<VendaRecebimento> listaVendaRecibo = new ArrayList<VendaRecebimento>();
                parcelas = Integer.parseInt(jtfParcelas.getText());
                calendar.setTime(vendaCab.getVencimento());
                if (parcelas > 0){
                
                    for (int i = 1; i<=parcelas; i++){
                        VendaRecebimento vendaRecibo = new VendaRecebimento();
                        vendaRecibo.setVenda(vendaCab);
                        vendaRecibo.setTipoPagamento(null);
                        vendaRecibo.setDtPagamento(null);
                        vendaRecibo.setParcela(i);
                        vendaRecibo.setJuro(0);
                        vendaRecibo.setDesconto(0);
                        vendaRecibo.setVl_recebido(0);
                        vendaRecibo.setVl_total(0);
                        vendaRecibo.setVl_subtotal(vltotal/parcelas);
                        vendaRecibo.setMulta(0);
                        vendaRecibo.setDtVencimento(calendar.getTime());                   
                        calendar.add(Calendar.MONTH, 1);
                        
                        listaVendaRecibo.add(vendaRecibo);
                        
                    }   
                    venReciboDao.salvar(listaVendaRecibo);
                   // System.out.println("passei for no for da vendacabview");
                }
                JOptionPane.showMessageDialog(null, "Venda Finalizada com Sucesso.");
                try {
                ImprimeRelatorio recibo = new ImprimeRelatorio();
               // recebidoStr = (new DecimalFormat("#,##0.00").format(Float.parseFloat(recebidoStr)));            
                recibo.reciboVendaAPrazo(vendaCab, jcbCliente.getSelectedItem().toString(), jtfOperador.getText());
                } catch (Exception ex) {
                    Logger.getLogger(VendaCabView.class.getName()).log(Level.SEVERE, null, ex);
                }     
               
            }           
            jbtCancelarActionPerformed(evt);                        
        }      
    }//GEN-LAST:event_jbtSalvarActionPerformed

    private void jbtSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtSairActionPerformed
        // TODO add your handling code here:
        dispose();
        vltotal = 0;
        subtotal = 0;
 //       menuView.Menu.jbtVenda.setEnabled(true);
        menuView.Menu.jmenuVenda.setEnabled(true);
    }//GEN-LAST:event_jbtSairActionPerformed

    private void jbtProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtProdutoActionPerformed
//        jTable2.setEnabled(true);
       // if (jtfSubTotal.getText().equals(""))
        jbtProduto.setEnabled(false);
        jbtSalvar.setEnabled(false);
      //  jbtProduto.setEnabled(false);
        subtotalStr = jtfSubTotal.getText();
        subtotalStr = subtotalStr.replace(".", "");
        subtotalStr = subtotalStr.replace(",", ".");
        jtfValorTotal.setEnabled(true);
        jtfSubTotal.setEnabled(true);
        subtotal = Float.parseFloat(subtotalStr);
//        jtfDesconto.setEnabled(true);
        vendaDetView = new VendaDetView(new java.awt.Frame(), true);
        vendaDetView.setTitle("Venda para Cliente");
        vendaDetView.setLocationRelativeTo(null); // centraliza a tela
        vendaDetView.setVisible(true);
        vendaDetView.jtfCodProd.setEnabled(true);
       
        

    }//GEN-LAST:event_jbtProdutoActionPerformed

    public void habilitar(boolean habilita){
       
        jtfOperador.setEnabled(habilita);
        jtfData.setEnabled(habilita);
        jtfValorTotal.setEnabled(habilita);
        jcbCliente.setEnabled(habilita);
        jcbTipoVenda.setEnabled(habilita);
        jtfSubTotal.setEnabled(habilita);
        jtfDesconto.setEnabled(habilita);
     //   jTable1.setEnabled(habilita);
        jbtImprimir.setEnabled(habilita);
        jtfVencimento.setEnabled(habilita);
        jtfParcelas.setEnabled(habilita);
       
        
    }
    
    
    
    private void jbtProdutoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jbtProdutoKeyPressed
//        if (evt.getKeyCode() == evt.VK_ENTER){
//            jbtProdutoActionPerformed(null);
//        }
            
    }//GEN-LAST:event_jbtProdutoKeyPressed

    private void jbtImprimirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtImprimirActionPerformed
       // imprimir();
    }//GEN-LAST:event_jbtImprimirActionPerformed

    private void jcbTipoVendaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jcbTipoVendaKeyPressed
        if (evt.getKeyCode() == evt.VK_ENTER){
            if (jcbTipoVenda.getSelectedIndex() == -1){
                JOptionPane.showMessageDialog(null, "Escolha um Tipo de Venda");
                return;
            }
            
            if (jcbTipoVenda.getSelectedIndex() == 0){
                Date y = new Date();
                jtfVencimento.setText("");
                SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
                jtfVencimento.setText(sdf.format(y));
              //  jtfVencimento.setEnabled(true);
              //  jtfParcelas.setEnabled(true);
                jtfParcelas.setText("0");                
                jbtProduto.setEnabled(true);
                jbtProduto.requestFocus();
                
            }else{
                jtfParcelas.setText("");                
                jtfVencimento.setText("");
                jtfVencimento.setText("  /  /    ");  
                jtfDesconto.setEnabled(true);
                jtfDesconto.setText("0.0");
                jtfParcelas.setEnabled(true);
                jtfParcelas.requestFocus();
            }
            
        }
    }//GEN-LAST:event_jcbTipoVendaKeyPressed

    private void jtfParcelasKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfParcelasKeyPressed
        if (evt.getKeyCode() == evt.VK_ENTER){
            if (jtfParcelas.getText().equals("") && (jcbTipoVenda.getSelectedIndex()== 0))
               jtfParcelas.setText("1");
            if (jtfParcelas.getText().equals("") && (jcbTipoVenda.getSelectedIndex()== 1))
                jtfParcelas.setText("0");
            
            jtfVencimento.setEnabled(true);
            jtfVencimento.requestFocus();
            
        }
    }//GEN-LAST:event_jtfParcelasKeyPressed

    private void jtfVencimentoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfVencimentoKeyPressed
        SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
        if (evt.getKeyCode() == evt.VK_ENTER){
            Date dtAtual = new Date();
            String dtAtual_str = sdf.format(dtAtual);
                        
            Date dtVencimento = null;
            try {
                dtAtual = sdf.parse(dtAtual_str);
                dtVencimento = sdf.parse(jtfVencimento.getText()) ;
                if(dtAtual.after(dtVencimento)){
                       JOptionPane.showMessageDialog(null, "Data de Vencimento InvÃ¡lida!!!");
                       return;
                }                    
                jbtProduto.setEnabled(true);
                jbtProduto.requestFocus();  
                
            } catch (ParseException ex) {
                JOptionPane.showMessageDialog(null, "Erro de Data de Vencimento. Error: "+ex.getMessage());
                return;
            }            
        }
    }//GEN-LAST:event_jtfVencimentoKeyPressed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        if(javax.swing.JOptionPane.showConfirmDialog(null, "Deseja Realmente Excluir este Produto do OrÃ§amento?", "ATENÃÃO ", javax.swing.JOptionPane.YES_NO_OPTION) == 0) {                     
            try{                            
               
               //Subtraindo o SubTotal 
               float qtd=0, vlUnitario=0, somaSubEx;
               qtd = Float.parseFloat(jTable1.getValueAt(jTable1.getSelectedRow(), 3).toString());
               //ConverÃ§Ã£o.
               String vlUnitStr = (jTable1.getValueAt(jTable1.getSelectedRow(), 5).toString());
               vlUnitStr = vlUnitStr.replace(".", "");
               vlUnitStr = vlUnitStr.replace(",", ".");
               vlUnitario = Float.parseFloat(vlUnitStr);
               somaSubEx = (qtd * vlUnitario);
               subtotal = (subtotal - somaSubEx);
               jtfSubTotal.setText(new DecimalFormat("#,##0.00").format(subtotal));
               
               //Subtraindo o Total.
               //ConverÃ§Ã£o.
               String valorEx = jTable1.getValueAt(jTable1.getSelectedRow(), 7).toString();               
               valorEx = valorEx.replace(".", "");
               valorEx = valorEx.replace(",", ".");               
               float vlTotEx =  Float.parseFloat(valorEx);           //Float.parseFloat(jTable2.getValueAt(jTable2.getSelectedRow(), 5).toString());
               
                System.out.println("VltotEx ="+vlTotEx);

               // vltotal = (vltotal - vlTotEx);
               
               vltotal = (vltotal - vlTotEx); 
              // jtfValorTotal.setText(new DecimalFormat("#,##0.00").format(vltotal));
               jtfValorTotal.setText("");
               jtfDesconto.setText("");
               
                            
               
               ((DefaultTableModel) jTable1.getModel()).removeRow(jTable1.getSelectedRow());
                    
               contItem = 0;
               for (int i=0; i < jTable1.getRowCount(); i++ ){
                   contItem = contItem +1;
                   jTable1.setValueAt(String.valueOf(contItem),i, 0);                   
               }                                 
                jtfDesconto.requestFocus();
            }catch (Exception ex){
                JOptionPane.showMessageDialog(null, "Problemas ao Excluir Produto Da Venda :"+ex.getMessage());
                ex.printStackTrace();
            }
         }  




//        String valorExStr;
//        float valorEx;
//        if(javax.swing.JOptionPane.showConfirmDialog(null, "Deseja Realmente Excluir este Produto da Venda?", "ATENÃÃO ", javax.swing.JOptionPane.YES_NO_OPTION) == 0) {                     
//            subtotal = 0;
//            subtotalStr = jtfSubTotal.getText();
//            subtotalStr = subtotalStr.replace(".", "");
//            subtotalStr = subtotalStr.replace(",", ".");
//            subtotal = Float.parseFloat(subtotalStr);
//            valorExStr = jTable1.getValueAt(jTable1.getSelectedRow(), 7).toString();
//            valorExStr = valorExStr.replace(".", "");
//            valorExStr = valorExStr.replace(",", ".");
//            valorEx = Float.parseFloat(valorExStr);
//            subtotal = (subtotal - valorEx);
//            jtfSubTotal.setText(new DecimalFormat("#,##0.00").format(subtotal));
//            jtfValorTotal.setText("");
//           // ((DefaultTableModel) jTable1.getModel()).removeRow(jTable1.getSelectedRow());
//            jTable1.remove(jTable1.getSelectedRow());
//            jtfDesconto.requestFocus();
//            
//            
//        }    
          
        
    }//GEN-LAST:event_jTable1MouseClicked

    private void carregaCombobox(){
        ClienteDAO daoCli = new ClienteDAO();
         //fornecedorDAO = new FornecedorDAO();
        listaCliente = new ArrayList<Pessoa>();
        
        listaCliente = daoCli.listaCliente();
        jcbCliente.removeAllItems();       

        for (Pessoa cli : listaCliente){
            jcbCliente.addItem(cli.getNome());           
        }
        jcbCliente.setSelectedIndex(-1);
       
       
    }
    public VendaCab carregaVendaCab() throws ParseException{
        
        Pessoa colaborador = new Pessoa() {};       
        VendaCab vendaCab = new VendaCab();
        VendaDet vendaDet = new VendaDet();
        ProdutoDAO daoProd = new ProdutoDAO();
        String vlUnitProd, vlTotalProd;
        listaVendaDet = new ArrayList<VendaDet>();
        ColaboradorDAO daoColaborador = new ColaboradorDAO();
        
        Long idColaborador = Long.parseLong(menuView.Menu.idColaborador);
        
        colaborador = daoColaborador.colaboradorIDPessoa(idColaborador);
        int indexComboBox = jcbCliente.getSelectedIndex();
        
        vendaCab.setCliente((Pessoa) listaCliente.get(indexComboBox));
        
       // System.out.println("Cliente ="+vendaCab.getCliente().getPessoa().getNome()+ " ID Vendedor ="+idColaborador);
        subtotalStr = jtfSubTotal.getText();
        subtotalStr = subtotalStr.replace(".", "");
        subtotalStr = subtotalStr.replace(",", ".");
       
        vltotalStr = jtfValorTotal.getText();
        vltotalStr = vltotalStr.replace(".", "");
        vltotalStr = vltotalStr.replace(",", ".");
       // System.out.println("Subtotal ="+subtotalStr);       
        vendaCab.setDesconto(Float.parseFloat(jtfDesconto.getText()));
        vendaCab.setTipoVenda(jcbTipoVenda.getSelectedItem().toString());
        vendaCab.setSubtotal(Float.parseFloat(subtotalStr));
        vendaCab.setTotal(Float.parseFloat(vltotalStr));
        vendaCab.setColaborador(colaborador);        
        vendaCab.setStatus("ABERTO");
        vendaCab.setParcelas(Integer.parseInt(jtfParcelas.getText()));
        
                
        SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
        Date data = new Date(sdf.parse(jtfVencimento.getText()).getTime());
        vendaCab.setVencimento(data);    
   
        for (int i = 0; i < jTable1.getRowCount(); i++){
            
            vlUnitProd = jTable1.getValueAt(i, 5).toString();
            vlTotalProd = jTable1.getValueAt(i, 7).toString();
            vlUnitProd = vlUnitProd.replace(".", "");
            vlUnitProd = vlUnitProd.replace(",", ".");
            vlTotalProd = vlTotalProd.replace(".", "");
            vlTotalProd = vlTotalProd.replace(",", ".");
            
            vendaDet.setProduto(daoProd.produtoId(Long.parseLong(jTable1.getValueAt(i, 1).toString())));
            
            vendaDet.setVl_unitario(Float.parseFloat(vlUnitProd));
            vendaDet.setVl_total(Float.parseFloat(vlTotalProd));
            vendaDet.setQuantidade(Float.parseFloat(jTable1.getValueAt(i, 3).toString()));
            vendaDet.setDesconto(Float.parseFloat(jTable1.getValueAt(i, 6).toString()));
            
            listaVendaDet.add(new VendaDet(null,vendaDet.getProduto(), vendaDet.getVl_unitario(), vendaDet.getVl_total(), vendaDet.getQuantidade(), vendaDet.getDesconto()));       
        }
       
        vendaCab.setListaItens(listaVendaDet);
        
        return  vendaCab;
        
    }
    public void limpar(){
        jtfData.setText("");
        jtfOperador.setText("");
        jcbCliente.setSelectedIndex(-1);
        jcbTipoVenda.setSelectedIndex(-1);
        jtfParcelas.setText("");
        jtfSubTotal.setText("");
        jtfValorTotal.setText("");
        jtfDesconto.setText("");
        jtfVencimento.setText("");
        jlCodVenda.setText("0");
       
        
    }
    
    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    public static javax.swing.JTable jTable1;
    public static javax.swing.JButton jbtCancelar;
    private javax.swing.JButton jbtExcluir;
    private javax.swing.JButton jbtImprimir;
    public static javax.swing.JButton jbtNovo;
    public static javax.swing.JButton jbtProduto;
    private javax.swing.JButton jbtSair;
    public static javax.swing.JButton jbtSalvar;
    public static javax.swing.JComboBox jcbCliente;
    public static javax.swing.JComboBox jcbTipoVenda;
    private javax.swing.JLabel jlCodVenda;
    public static javax.swing.JTextField jtfData;
    public static javax.swing.JTextField jtfDesconto;
    public static javax.swing.JTextField jtfOperador;
    private javax.swing.JTextField jtfParcelas;
    public static javax.swing.JTextField jtfSubTotal;
    public static javax.swing.JTextField jtfValorTotal;
    private javax.swing.JTextField jtfVencimento;
    // End of variables declaration//GEN-END:variables
}





