/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package movimentoView;

import impressao.MenuImpressao;

import dao.ClienteDAO;
import dao.ColaboradorDAO;
import dao.MarcaProdutoDAO;

import dao.OrcamentoCabDAO;
import dao.OrcamentoDetDAO;

import dao.ProdutoDAO;
import java.awt.AWTEvent;
import java.awt.Color;
import java.awt.Component;
import java.awt.EventQueue;
import java.awt.Toolkit;
import java.math.BigDecimal;

import java.text.DecimalFormat;

import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import menuView.Menu;

import model.MarcaProduto;

import model.OrcamentoCab;
import model.OrcamentoDet;
import model.PedidoItens;
import model.Pessoa;



/**
 *
 * @author daniel
 */
public class OrcamentoCabView extends javax.swing.JFrame {

    /**
     * Creates new form OrcamentoCabView
     */
    List<OrcamentoCab> listaOrcamentoCab;
    List<Pessoa> listaCliente;
    List<OrcamentoDet> listOrcamentoDet;
    List<MarcaProduto> listMarca;
    List<PedidoItens> listaItens;
    Pessoa cliente;
    String operacao;
    int excluirItem = 0;
    Date dataSis = new Date();
    SimpleDateFormat formato = new SimpleDateFormat("dd/MM/yyyy");
    private OrcamentoDetView orcamentoDetView;
    public static float vltotal, porcentagem, subtotal;
    public static int contItem;
    OrcamentoCabDAO daoOrc = new OrcamentoCabDAO();
    OrcamentoCab orcamentoCab = new OrcamentoCab();
    MarcaProdutoDAO marcaDAO;
    public OrcamentoCabView() {
        initComponents();
        habilitar(false);
        limpar();
        jbtNovo.setEnabled(true);
        jtfPesquisa.setEnabled(true);        
        carregaTable();
        carregaCombobox();
        jtfCodigo.setVisible(false);
//        jcbMarca.setSelectedIndex(-1);
        
        jTable1.setEnabled(true);
        jtfPesquisa.requestFocus();
        
              
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        rowSorterToStringConverter1 = new converter.RowSorterToStringConverter();
        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jtfPesquisa = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jtfCodigo = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jcbCliente = new javax.swing.JComboBox();
        jtfData = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jtfValorTotal = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jtfOperador = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jtfSubTotal = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jtfDesconto = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jcbStatus = new javax.swing.JComboBox<>();
        jLabel11 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jtaObs = new javax.swing.JTextArea();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jPanel4 = new javax.swing.JPanel();
        jbtNovo = new javax.swing.JButton();
        jbtExcluir = new javax.swing.JButton();
        jbtCancelar = new javax.swing.JButton();
        jbtSalvar = new javax.swing.JButton();
        jbtSair = new javax.swing.JButton();
        jbtProduto = new javax.swing.JButton();
        jbtImprimir = new javax.swing.JButton();
        jbtVenda = new javax.swing.JButton();

        rowSorterToStringConverter1.setTable(jTable1);

        setTitle("Condicional");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Pesquisa Condicional"));

        jtfPesquisa.setNextFocusableComponent(jbtNovo);

        org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, jTable1, org.jdesktop.beansbinding.ELProperty.create("${rowSorter}"), jtfPesquisa, org.jdesktop.beansbinding.BeanProperty.create("text"));
        binding.setConverter(rowSorterToStringConverter1);
        bindingGroup.addBinding(binding);

        jtfPesquisa.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtfPesquisaKeyPressed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "CLIENTE", "TOTAL", "DATA", "STATUS", "CÓD.ORÇAMENTO"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Float.class, java.lang.String.class, java.lang.String.class, java.lang.Long.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jTable1.getTableHeader().setReorderingAllowed(false);
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jTable1MouseEntered(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setPreferredWidth(310);
            jTable1.getColumnModel().getColumn(1).setPreferredWidth(100);
            jTable1.getColumnModel().getColumn(2).setPreferredWidth(130);
            jTable1.getColumnModel().getColumn(3).setPreferredWidth(130);
            jTable1.getColumnModel().getColumn(4).setPreferredWidth(70);
        }

        jtfCodigo.setEditable(false);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jtfPesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, 412, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(212, 212, 212)
                        .addComponent(jtfCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 769, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtfPesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtfCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 91, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Dados do Orçamento"));

        jLabel2.setFont(new java.awt.Font("Ubuntu", 0, 15)); // NOI18N
        jLabel2.setText("CLIENTE");

        jcbCliente.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jcbClienteKeyPressed(evt);
            }
        });

        jtfData.setEditable(false);

        jLabel3.setFont(new java.awt.Font("Ubuntu", 0, 15)); // NOI18N
        jLabel3.setText("DATA");

        jLabel4.setFont(new java.awt.Font("Ubuntu", 0, 15)); // NOI18N
        jLabel4.setText("R$ TOTAL");

        jtfValorTotal.setBackground(new java.awt.Color(248, 241, 120));
        jtfValorTotal.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jtfValorTotal.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

        jLabel5.setFont(new java.awt.Font("Ubuntu", 0, 15)); // NOI18N
        jLabel5.setText("VENDEDOR");

        jtfOperador.setEditable(false);

        jLabel6.setFont(new java.awt.Font("Ubuntu", 0, 15)); // NOI18N
        jLabel6.setText("R$ SUB TOTAL");

        jtfSubTotal.setBackground(new java.awt.Color(248, 241, 190));
        jtfSubTotal.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

        jLabel7.setFont(new java.awt.Font("Ubuntu", 0, 15)); // NOI18N
        jLabel7.setText("DESC. %");

        jtfDesconto.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jtfDesconto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtfDescontoKeyTyped(evt);
            }
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtfDescontoKeyPressed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Ubuntu", 0, 15)); // NOI18N
        jLabel10.setText("STATUS");

        jcbStatus.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "ABERTO", "PENDENTE", "FECHADO", " ", " " }));

        jLabel11.setFont(new java.awt.Font("Ubuntu", 0, 15)); // NOI18N
        jLabel11.setText("OBSERVAÇÕES");

        jtaObs.setColumns(15);
        jtaObs.setLineWrap(true);
        jtaObs.setRows(5);
        jtaObs.setAutoscrolls(false);
        jtaObs.setNextFocusableComponent(jbtSalvar);
        jScrollPane3.setViewportView(jtaObs);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jcbCliente, javax.swing.GroupLayout.Alignment.LEADING, 0, 352, Short.MAX_VALUE)
                    .addComponent(jtfOperador, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel11))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel10)
                            .addComponent(jcbStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 268, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jtfData, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jtfDesconto, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jtfSubTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addGap(57, 57, 57)
                                .addComponent(jLabel6)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jtfValorTotal)))
                    .addComponent(jScrollPane3))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel3)
                    .addComponent(jLabel10))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtfOperador, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtfData, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jcbStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jcbCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtfSubTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtfDesconto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtfValorTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addContainerGap(39, Short.MAX_VALUE))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Produtos"));

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ITENS", "CÓD. PRODUTO", "DESCRIÇÃO", "QTD", "UND.", "R$ UNITÁRIO", "DESC.%", "R$ TOTAL", "VENDA"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                true, false, false, false, false, false, false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable2.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jTable2.getTableHeader().setReorderingAllowed(false);
        jTable2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable2MouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTable2);
        if (jTable2.getColumnModel().getColumnCount() > 0) {
            jTable2.getColumnModel().getColumn(0).setPreferredWidth(50);
            jTable2.getColumnModel().getColumn(1).setPreferredWidth(60);
            jTable2.getColumnModel().getColumn(2).setPreferredWidth(230);
            jTable2.getColumnModel().getColumn(3).setPreferredWidth(50);
            jTable2.getColumnModel().getColumn(4).setPreferredWidth(50);
            jTable2.getColumnModel().getColumn(5).setPreferredWidth(100);
            jTable2.getColumnModel().getColumn(6).setPreferredWidth(70);
            jTable2.getColumnModel().getColumn(7).setPreferredWidth(100);
        }

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 183, Short.MAX_VALUE)
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jbtNovo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/Add.png"))); // NOI18N
        jbtNovo.setText("Novo");
        jbtNovo.setToolTipText("Adicionar Novo Orçamento");
        jbtNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtNovoActionPerformed(evt);
            }
        });
        jbtNovo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jbtNovoKeyPressed(evt);
            }
        });

        jbtExcluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/delete.png"))); // NOI18N
        jbtExcluir.setText("Excluir");
        jbtExcluir.setToolTipText("Excluir Orçamento");
        jbtExcluir.setEnabled(false);
        jbtExcluir.setFocusCycleRoot(true);
        jbtExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtExcluirActionPerformed(evt);
            }
        });
        jbtExcluir.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jbtExcluirKeyPressed(evt);
            }
        });

        jbtCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/cancel.png"))); // NOI18N
        jbtCancelar.setText("Cancelar");
        jbtCancelar.setToolTipText("Cancelar Orçamento");
        jbtCancelar.setEnabled(false);
        jbtCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtCancelarActionPerformed(evt);
            }
        });
        jbtCancelar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jbtCancelarKeyPressed(evt);
            }
        });

        jbtSalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/save.png"))); // NOI18N
        jbtSalvar.setText("Salvar");
        jbtSalvar.setToolTipText("Salvar Orçamento");
        jbtSalvar.setEnabled(false);
        jbtSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtSalvarActionPerformed(evt);
            }
        });
        jbtSalvar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jbtSalvarKeyPressed(evt);
            }
        });

        jbtSair.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/exit_1.png"))); // NOI18N
        jbtSair.setText("Sair");
        jbtSair.setToolTipText("Fechar Orçamento");
        jbtSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtSairActionPerformed(evt);
            }
        });
        jbtSair.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jbtSairKeyPressed(evt);
            }
        });

        jbtProduto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/Load.png"))); // NOI18N
        jbtProduto.setText("Buscar Produto");
        jbtProduto.setToolTipText("Importar Produto");
        jbtProduto.setEnabled(false);
        jbtProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtProdutoActionPerformed(evt);
            }
        });
        jbtProduto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jbtProdutoKeyPressed(evt);
            }
        });

        jbtImprimir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/print-icon.png"))); // NOI18N
        jbtImprimir.setText("Imprimir");
        jbtImprimir.setToolTipText("Imprimir Orçamento");
        jbtImprimir.setEnabled(false);
        jbtImprimir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtImprimirActionPerformed(evt);
            }
        });
        jbtImprimir.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jbtImprimirKeyPressed(evt);
            }
        });

        jbtVenda.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/Sync.png"))); // NOI18N
        jbtVenda.setText("Transferir p/ Venda");
        jbtVenda.setToolTipText("Importar p/ Venda");
        jbtVenda.setEnabled(false);
        jbtVenda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtVendaActionPerformed(evt);
            }
        });
        jbtVenda.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jbtVendaKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jbtNovo, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jbtVenda, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jbtImprimir, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jbtProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jbtCancelar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jbtExcluir)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jbtSalvar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jbtSair, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jbtNovo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jbtSair)
                .addComponent(jbtVenda, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(jbtImprimir, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(jbtCancelar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jbtProduto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jbtExcluir, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jbtSalvar))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel1.getAccessibleContext().setAccessibleName("Pesquisa ");

        bindingGroup.bind();

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbtNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtNovoActionPerformed
        operacao = "salvar";
        
        vltotal = 0;
        contItem = 0;
        subtotal = 0;
        DefaultTableModel amodel = (DefaultTableModel) jTable1.getModel();
        amodel.setNumRows(0);
       
        jtfData.setText(formato.format(dataSis));
        jtfData.setEnabled(true);
        jtfOperador.setEnabled(true);
        jtfOperador.setText(menuView.Menu.nomeUsuario);
        carregaCombobox();
        
//    
        jcbCliente.setEnabled(true);
        jbtCancelar.setEnabled(true);
        jbtNovo.setEnabled(false);
        jtfPesquisa.setEnabled(false);
        jcbStatus.setSelectedIndex(0);
        jcbCliente.requestFocus();
    }//GEN-LAST:event_jbtNovoActionPerformed
    private void carregaCombobox(){
        ClienteDAO daoCli = new ClienteDAO();
        marcaDAO = new MarcaProdutoDAO();
        listaCliente = new ArrayList<Pessoa>();
        listMarca = new ArrayList<MarcaProduto>();
        
        
        listaCliente = daoCli.listaCliente();
        jcbCliente.removeAllItems();        
        for (Pessoa cli : listaCliente){
            jcbCliente.addItem(cli.getNome()+" - "+cli.getId());
           
        }
        jcbCliente.setSelectedIndex(-1);              
         
        listMarca = marcaDAO.getMarca();
         
//        jcbMarca.removeAllItems();
//        for(MarcaProduto marcaProd : listMarca){
//           jcbMarca.addItem(marcaProd.getDescricao());
//        }
//        
//         jcbMarca.setSelectedIndex(-1);       
    }
    
    
    
    
    
    private void jbtExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtExcluirActionPerformed
          
   
        if (javax.swing.JOptionPane.showConfirmDialog(null, "Deseja Realmente Excluir esta Unidade de Produto?", "ATENÇÂO ", javax.swing.JOptionPane.YES_NO_OPTION) == 0) {
                OrcamentoCabDAO daoOrca = new OrcamentoCabDAO();
                daoOrca.excluirOrcamento(Long.parseLong(jTable1.getValueAt(jTable1.getSelectedRow(), 4).toString()));
                
                JOptionPane.showMessageDialog(null, "Orçamento Excluído com Sucesso !!!");
                excluirItem = 0;
                jbtCancelarActionPerformed(evt);
        }
   
    }//GEN-LAST:event_jbtExcluirActionPerformed

    private void jbtCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtCancelarActionPerformed
        if (excluirItem == 1){
            JOptionPane.showMessageDialog(null, "Você Excluiu um Item do Orçamento, precisa Calcular o Total \n"
                    + "para cancelar o Orçamento");
            jtfDesconto.requestFocus();
            return;
        }
        
        DefaultTableModel amodel1, amodel2; 
        amodel1 = (DefaultTableModel) jTable1.getModel();
        amodel2 = (DefaultTableModel) jTable2.getModel();
        amodel1.setNumRows(0);
        amodel2.setNumRows(0);
        habilitar(false);
        carregaTable();
        limpar();
        jTable1.setEnabled(true);
        jbtProduto.setEnabled(false);
        jbtCancelar.setEnabled(false);
        jbtNovo.setEnabled(true);
        jbtSalvar.setEnabled(false);
        jtfPesquisa.setEnabled(true);
        jbtExcluir.setEnabled(false);        
        jtfPesquisa.requestFocus();
    }//GEN-LAST:event_jbtCancelarActionPerformed

    private void jbtSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtSalvarActionPerformed
              
        //Salvar Orcamento.
        OrcamentoCabDAO daoOrcCab = new OrcamentoCabDAO();   
        if (jtfSubTotal.getText().equals("0,00")){
            JOptionPane.showMessageDialog(null, "O Orçamento está sem Itens");
            return;
        } 
//        if (jcbMarca.getSelectedIndex() == -1){
//            JOptionPane.showMessageDialog(null, "Selecione uma Marca");
//            jcbMarca.requestFocus();
//            return;
//        }
        
        if (operacao == "salvar"){          
           daoOrcCab.salvar(carregaObjeto());
           JOptionPane.showMessageDialog(null, "Orçamento Salvo com Sucesso.");

        }
        else
        if (operacao == "alterar"){
           // OrcamentoCab orcCab = new OrcamentoCab();
           // orcCab = daoOrcCab.orcamentoCab(Long.parseLong(jTable1.getValueAt(jTable1.getSelectedRow(), 3).toString()));     //.setId();
            daoOrcCab.alterarOrcamento(carregaObjeto());
                   JOptionPane.showMessageDialog(null, "Orçamento Alterado com Sucesso !!!");
        }
        //jbtSalvar.setEnabled(false);
        excluirItem = 0;
        jbtCancelarActionPerformed(evt);
        jbtImprimir.setEnabled(true);
    }//GEN-LAST:event_jbtSalvarActionPerformed

    private void jbtSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtSairActionPerformed
        // TODO add your handling code here:
        dispose();
        Menu.jmenuOrcamento.setEnabled(true);
 //       Menu.jbtOrcamento.setEnabled(true);
        
            

        //  Principal.mecadoriaMenuItem.setEnabled(true);
    }//GEN-LAST:event_jbtSairActionPerformed

    private void jbtProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtProdutoActionPerformed
        jTable2.setEnabled(true);
        jtfValorTotal.setEnabled(true);
        jtfSubTotal.setEnabled(true);
        jtfDesconto.setEnabled(true);
        orcamentoDetView = new OrcamentoDetView(new java.awt.Frame(), true);
        orcamentoDetView.setTitle("Orçamento para Cliente");
        orcamentoDetView.setLocationRelativeTo(null); // centraliza a tela 
        orcamentoDetView.setVisible(true);
        orcamentoDetView.jtfCodProd.setEnabled(true);       
        jtfValorTotal.setText("");
       
    }//GEN-LAST:event_jbtProdutoActionPerformed

    private void jbtProdutoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jbtProdutoKeyPressed
        if (evt.getKeyCode() == evt.VK_ENTER){
            String op = System.getProperty("os.name");
            if (!"Linux".equals(op))            
                jbtProdutoActionPerformed(null);
           
        }
    }//GEN-LAST:event_jbtProdutoKeyPressed

    private void jtfPesquisaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfPesquisaKeyPressed
        if (evt.getKeyCode() == evt.VK_ENTER){
            if (jtfPesquisa.getText().equals("")){
                jbtNovo.requestFocus();
            }
        }
    }//GEN-LAST:event_jtfPesquisaKeyPressed

    private void jcbClienteKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jcbClienteKeyPressed
        if (evt.getKeyCode() == evt.VK_ENTER){
           if (jcbCliente.getSelectedItem().equals("")){
              JOptionPane.showMessageDialog(null, "Digite o Nome do Cliente");
              jcbCliente.requestFocus();            
           }else{
               jbtProduto.setEnabled(true);
               jbtProduto.requestFocus();
            }                      
        }
    }//GEN-LAST:event_jcbClienteKeyPressed

    private void jTable2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable2MouseClicked
        if(javax.swing.JOptionPane.showConfirmDialog(null, "Deseja Realmente Excluir este Produto do Orçamento?", "ATENÇÂO ", javax.swing.JOptionPane.YES_NO_OPTION) == 0) {                     
            try{
              // excluirItem = 1; 
               int idProduto;
               Long idOrcamento = 0L;
               
               String valorEx = jTable2.getValueAt(jTable2.getSelectedRow(), 7).toString();
               valorEx = valorEx.replace(".", "");
               valorEx = valorEx.replace(",", ".");
               float vlTotEx =  Float.parseFloat(valorEx);           //Float.parseFloat(jTable2.getValueAt(jTable2.getSelectedRow(), 5).toString());
              // vltotal = (vltotal - vlTotEx);
               subtotal = (subtotal - vlTotEx);
                
              // jtfValorTotal.setText(new DecimalFormat("#,##0.00").format(vltotal));
               jtfValorTotal.setText("");
               jtfDesconto.setText("");
               jtfSubTotal.setText(new DecimalFormat("#,##0.00").format(subtotal));
               
                             
              
               
               
                //Excluindo itens do Orçamento do Banco de Dados. 
                if (operacao == "alterar"){                    
                    idProduto = Integer.parseInt(jTable2.getValueAt(jTable2.getSelectedRow(), 1).toString());
                    ((DefaultTableModel) jTable2.getModel()).removeRow(jTable2.getSelectedRow());
                    
                    contItem = 0;
                    for (int i=0; i < jTable2.getRowCount(); i++ ){
                        contItem = contItem +1;
                        jTable2.setValueAt(String.valueOf(contItem),i, 0);                   
                    }                                 
                    idOrcamento = (orcamentoCab.getId());
                                 
                    OrcamentoDetDAO daoOrcDet = new OrcamentoDetDAO();
                    daoOrcDet.excluir(idOrcamento, idProduto);                   
                }                             
                jtfDesconto.requestFocus();
            }catch (Exception ex){
                JOptionPane.showMessageDialog(null, "Problemas ao Excluir Produto na tabela Detalhe do Orçamento :"+ex.getMessage());
                ex.printStackTrace();
            }
         }   
    }//GEN-LAST:event_jTable2MouseClicked

    private void jtfDescontoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfDescontoKeyPressed
        if (evt.getKeyCode() == evt.VK_ENTER){
           // subtotal = vltotal;
            if (jtfDesconto.getText().equals("") || (jtfDesconto.getText().equals("0"))){
                jtfDesconto.setText("");
                jtfDesconto.setText("0");
                vltotal = subtotal;
                jtaObs.setEnabled(true);
                jtfValorTotal.setText(new DecimalFormat("#,##0.00").format(vltotal));
                
            }else{
                  porcentagem = Float.parseFloat(jtfDesconto.getText());
                  vltotal = (subtotal -(subtotal*porcentagem/100));
                  jtfValorTotal.setText("");
                  jtfValorTotal.setText(new DecimalFormat("#,##0.00").format(vltotal));
            }
            jbtSalvar.setEnabled(true);
            jtaObs.requestFocus();
                   
        }
    }//GEN-LAST:event_jtfDescontoKeyPressed

    private void jtfDescontoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfDescontoKeyTyped
        String caracteres="0987654321.";
        if (!caracteres.contains(evt.getKeyChar()+"")){
           evt.consume();
        }
    }//GEN-LAST:event_jtfDescontoKeyTyped

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        
        operacao = "alterar";
        habilitar(true);
        jbtNovo.setEnabled(false);
        jtfPesquisa.setEnabled(false);
        jbtCancelar.setEnabled(true);
        jbtSair.setEnabled(true);
        jbtImprimir.setEnabled(true);
        jbtExcluir.setEnabled(true);
        jbtProduto.setEnabled(true);
        carregaCombobox();  
        
        orcamentoCab = daoOrc.orcamentoCab((Long) jTable1.getValueAt(jTable1.getSelectedRow(), 4));
        vltotal = orcamentoCab.getVl_total();
        subtotal = orcamentoCab.getSubtotal();
        jtfCodigo.setText(orcamentoCab.getId().toString());
        jtfOperador.setText(orcamentoCab.getColaborador().getNome());  

        Date t = orcamentoCab.getData_orc();
        SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
        String formattedDate = sdf.format(new Date(t.getTime()));    
        
        jtfData.setText(formattedDate);       
        
        jtfDesconto.setText(String.valueOf(orcamentoCab.getDesconto()));
               
        jtfValorTotal.setText(new DecimalFormat("#,##0.00").format(orcamentoCab.getVl_total()));
        jtfSubTotal.setText(new DecimalFormat("#,##0.00").format(orcamentoCab.getSubtotal()));
        
        jcbCliente.setSelectedItem(orcamentoCab.getCliente().getNome()+" - "+ orcamentoCab.getCliente().getId());
        //jcbCliente.setEditable(false);
        
     //   jcbMarca.setSelectedItem(orcamentoCab.getMarca().getDescricao());
        jcbStatus.setSelectedItem(orcamentoCab.getStatus());
    //    jtfModelo.setText(orcamentoCab.getModelo());
        jtaObs.setText(orcamentoCab.getObs());
        
        //Carregar Itens da Venda.
        DefaultTableModel amodel = (DefaultTableModel) jTable2.getModel();        
        amodel.setNumRows(0);
        int cont = 0; 
        String vlTotalProd, vlUnitProd;
        for (OrcamentoDet orcDet : orcamentoCab.getListOrcamentoDet()){
            cont = cont +1;
            vlTotalProd = new DecimalFormat("#,##0.00").format(orcDet.getVl_total());
            vlUnitProd = new DecimalFormat("#,##0.00000").format(orcDet.getVl_unitario());
            amodel.addRow(new Object[]{cont, orcDet.getProduto().getId(), orcDet.getProduto().getDescricao(), orcDet.getQuantidade(),orcDet.getProduto().getUnidade().getSigla() ,vlUnitProd,orcDet.getDesconto(), vlTotalProd, orcDet.getTipoVenda()});                  
        }     
       
        DefaultTableCellRenderer direita = new DefaultTableCellRenderer();
        DefaultTableCellRenderer centro = new DefaultTableCellRenderer();
//        
        direita.setHorizontalAlignment(SwingConstants.RIGHT);
        centro.setHorizontalAlignment(SwingConstants.CENTER);
        jTable2.getColumnModel().getColumn(0).setCellRenderer(centro);
        jTable2.getColumnModel().getColumn(5).setCellRenderer(direita);
        jTable2.getColumnModel().getColumn(6).setCellRenderer(direita);
        
        jbtSalvar.setEnabled(true);
        
              
    }//GEN-LAST:event_jTable1MouseClicked

    private void jbtImprimirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtImprimirActionPerformed
        MenuImpressao menuImpressao = new MenuImpressao(new java.awt.Frame(), true);
                  
        //menuImpressao = new MenuImpressao(new java.awt.Frame(), true);
        menuImpressao = new MenuImpressao(new java.awt.Frame(), false);
        menuImpressao.setTitle("Menu de Impressoras");
        menuImpressao.setLocationRelativeTo(null); // centraliza a tela 
        menuImpressao.tipoForm = "OrcamentoCabView";
        menuImpressao.orcCab = orcamentoCab;
       
       // menuImpressao.setListaCliente(listaCliente);                       //listaCliente = (List<Pessoa>) jcbCliente.getSelectedItem();
        menuImpressao.index = jcbCliente.getSelectedIndex();
        menuImpressao.cliente = jcbCliente.getSelectedItem().toString();
        menuImpressao.operador = jtfOperador.getText();
        
        
        menuImpressao.setVisible(true);
        
        
        
    }//GEN-LAST:event_jbtImprimirActionPerformed

    private void jbtVendaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtVendaActionPerformed
//        Produto produto = new Produto();
//        ProdutoDAO daoProduto = new ProdutoDAO();
//        VendaCabView vendaCabView = new VendaCabView();
//        desktopPane.add(vendaCabView);
//        vendaCabView.vendaCab = new VendaCab();
//        vendaCabView.setTitle("Venda");
//        vendaCabView.jtfOperador.setText(jtfOperador.getText());
//        vendaCabView.jcbCliente.setSelectedIndex(jcbCliente.getSelectedIndex());
//        vendaCabView.jtfDesconto.setText(jtfDesconto.getText());
//        vendaCabView.jtfValorTotal.setText(jtfValorTotal.getText());
//        vendaCabView.jtfSubTotal.setText(jtfSubTotal.getText());
//        vendaCabView.jtfData.setText(formato.format(dataSis));
//        vendaCabView.operacao = "salvar";
//        vendaCabView.jbtNovo.setEnabled(false);
//        //vendaCabView.jbtSalvar.setEnabled(true);
//        vendaCabView.idOrcamento = ((Long) jTable1.getValueAt(jTable1.getSelectedRow(), 3));
//        vendaCabView.jtfOperador.setEditable(false);
//        vendaCabView.jcbCliente.setEditable(false);
//        vendaCabView.jbtCancelar.setEnabled(true);        



//        
        Pessoa cliente = listaCliente.get(jcbCliente.getSelectedIndex());
        listaItens = new ArrayList<>();
        String vlTotalProd, vlUnitProd, quantidadeStr;
        
        for (OrcamentoDet orcDet : orcamentoCab.getListOrcamentoDet()) {                   
            
//            if (orcDet.getQuantidade() <= orcDet.getProduto().getEstoque()){
               
//                vlTotalProd = new DecimalFormat("#,##0.00").format(orcDet.getVl_total());
//                vlUnitProd = new DecimalFormat("#,##0.00").format(orcDet.getVl_unitario());

                PedidoItens itens = new PedidoItens();
                
                
                
//                
                itens.setQuantidade(new BigDecimal(orcDet.getQuantidade()));
                itens.setProduto(orcDet.getProduto());
                itens.setVlUnit(new BigDecimal(orcDet.getVl_unitario()));
                itens.setVlSubtotal(new BigDecimal(orcDet.getVl_total()));
                itens.setTipoVenda(orcDet.getTipoVenda());
                itens.setDescricao(orcDet.getProduto().getDescricao());
                
               // itens.set
                listaItens.add(itens);
//            }else{
//                JOptionPane.showMessageDialog(null, "Produto :"+orcDet.getProduto().getId()+" - "+orcDet.getProduto().getDescricao()+"\n"+ 
//                        " Estoque ="+orcDet.getProduto().getEstoque() +"\n Quantidade no Orçamento ="+orcDet.getQuantidade());
//                return;
//            }
        }
        
        
        
        

        PedidoView pedido = new PedidoView(new java.awt.Frame(), true, listaItens, cliente);
        pedido.setTitle("Caixa : " + menuView.Menu.nomeUsuario);
        pedido.setLocationRelativeTo(null); // centraliza a tela
        pedido.setVisible(true);  
                
        
//        pedido.jcbCliente.setSelectedItem(this.jcbCliente.getSelectedItem().toString());
//        
//        DefaultTableModel amodel = (DefaultTableModel) pedido.jTable1.getModel();
//
//        amodel.setNumRows(0);
//        int cont = 0;
//        String vlTotalProd, vlUnitProd;
//        for (OrcamentoDet orcDet : orcamentoCab.getListOrcamentoDet()) {                   
//            
//            if (orcDet.getQuantidade() <= orcDet.getProduto().getEstoque()){
//                cont = cont + 1;
//                vlTotalProd = new DecimalFormat("#,##0.00").format(orcDet.getVl_total());
//                vlUnitProd = new DecimalFormat("#,##0.00").format(orcDet.getVl_unitario());
//                amodel.addRow(new Object[]{orcDet.getQuantidade(), orcDet.getProduto().getDescricao(), orcDet.getVl_unitario()});
//            }else{
//                JOptionPane.showMessageDialog(null, "Produto :"+orcDet.getProduto().getId()+" - "+orcDet.getProduto().getDescricao()+"\n"+ 
//                        " Estoque ="+orcDet.getProduto().getEstoque() +"\n Quantidade no Orçamento ="+orcDet.getQuantidade());
//                return;
//            }
//        }
  //      vendaCabView.setVisible(true);
  //      vendaCabView.habilitar(true);
  //      vendaCabView.jcbTipoVenda.requestFocus();
    //    jbtSairActionPerformed(null);

    }//GEN-LAST:event_jbtVendaActionPerformed

    private void jTable1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_jTable1MouseEntered

    private void jbtCancelarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jbtCancelarKeyPressed

        if (evt.getKeyCode() == evt.VK_ENTER){
            String op = System.getProperty("os.name");
            if (!"Linux".equals(op))            
                jbtCancelarActionPerformed(null);
           
        }
    }//GEN-LAST:event_jbtCancelarKeyPressed

    private void jbtSalvarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jbtSalvarKeyPressed

        if (evt.getKeyCode() == evt.VK_ENTER){
            String op = System.getProperty("os.name");
            if (!"Linux".equals(op))            
                jbtSalvarActionPerformed(null);
           
        }
    }//GEN-LAST:event_jbtSalvarKeyPressed

    private void jbtExcluirKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jbtExcluirKeyPressed

        if (evt.getKeyCode() == evt.VK_ENTER){
            String op = System.getProperty("os.name");
            if (!"Linux".equals(op))            
                jbtExcluirActionPerformed(null);
           
        }
    }//GEN-LAST:event_jbtExcluirKeyPressed

    private void jbtNovoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jbtNovoKeyPressed

        if (evt.getKeyCode() == evt.VK_ENTER){
            String op = System.getProperty("os.name");
            if (!"Linux".equals(op))
               jbtNovoActionPerformed(null);
        }  
    }//GEN-LAST:event_jbtNovoKeyPressed

    private void jbtVendaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jbtVendaKeyPressed

        if (evt.getKeyCode() == evt.VK_ENTER){
            String op = System.getProperty("os.name");
            if (!"Linux".equals(op))
               jbtVendaActionPerformed(null);
        }  
    }//GEN-LAST:event_jbtVendaKeyPressed

    private void jbtImprimirKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jbtImprimirKeyPressed

        if (evt.getKeyCode() == evt.VK_ENTER){
            String op = System.getProperty("os.name");
            if (!"Linux".equals(op))
               jbtImprimirActionPerformed(null);
        }  
    }//GEN-LAST:event_jbtImprimirKeyPressed

    private void jbtSairKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jbtSairKeyPressed

        if (evt.getKeyCode() == evt.VK_ENTER){
            String op = System.getProperty("os.name");
            if (!"Linux".equals(op))
                jbtSairActionPerformed(null);
        }  
    }//GEN-LAST:event_jbtSairKeyPressed

    public void habilitar(boolean habilita){
        jtfPesquisa.setEnabled(habilita);
        jtfCodigo.setEnabled(habilita);
        jtfOperador.setEnabled(habilita);
        jtfData.setEnabled(habilita);
        jtfValorTotal.setEnabled(habilita);
        jcbCliente.setEnabled(habilita);
        jtfSubTotal.setEnabled(habilita);
        jtfDesconto.setEnabled(habilita);
        jTable1.setEnabled(habilita);
        jTable2.setEnabled(habilita);
        jbtImprimir.setEnabled(habilita);
        jbtVenda.setEnabled(habilita);
//        jtfModelo.setEnabled(habilita);
//        jcbMarca.setEnabled(habilita);
        jtaObs.setEnabled(habilita);
        jcbStatus.setEnabled(habilita);
        
    }
    public void limpar(){
        jtfPesquisa.setText("");
        jtfCodigo.setText("");
        jtfOperador.setText("");
        jtfData.setText("");
        jtfValorTotal.setText("");
        jtfSubTotal.setText("");
        jtfDesconto.setText("");
        jcbCliente.setSelectedIndex(-1); 
     //   jcbMarca.setSelectedIndex(-1);
     //   jtfModelo.setText("");
        jtaObs.setText("");
        jcbStatus.setSelectedIndex(-1);
       
    }
    private void carregaTable(){
        
        DefaultTableModel amodel = (DefaultTableModel) jTable1.getModel();
        
        amodel.setNumRows(0);
        OrcamentoCabDAO daoOrcCab = new OrcamentoCabDAO();
        listaOrcamentoCab = null;
        listaOrcamentoCab = daoOrcCab.listaOrcCabAberto();   
        SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy HH:mm");
        String data_orc;
        for (OrcamentoCab orc : listaOrcamentoCab){
            data_orc = (sdf.format(orc.getData_orc()));
            amodel.addRow(new Object[]{orc.getCliente().getNome(), orc.getVl_total(), data_orc,orc.getStatus(), orc.getId()});                  
        }
        
        
        
        //criando o render
        DefaultTableCellRenderer dtcr
                = new DefaultTableCellRenderer() {
                    public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
                        Component comp = super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);
                        String result = (String) table.getValueAt(row, 3);                        
                        if ("PENDENTE".equals(result)) {
                         //   comp.setBackground(Color.yellow);
                            comp.setForeground(Color.RED);
                        } else
                              if ("FECHADO".equals(result)){
                                      comp.setForeground(Color.blue);
                              }else{
                                   //  comp.setBackground(Color.LIGHT_GRAY);
                                    comp.setForeground(Color.BLACK);
                                }
//                        else {
//                            comp.setBackground(Color.WHITE);
//                            comp.setForeground(Color.BLACK);
//                        }
                        return comp;
                    }
        };
        
        jTable1.setDefaultRenderer(Object.class, dtcr);
        jTable1.setSelectionBackground( new Color(255,230,22) );
        
        
        
    }
    
    public OrcamentoCab carregaObjeto(){
        ColaboradorDAO daoColab = new ColaboradorDAO();
        OrcamentoDetDAO daoOrcDet = new OrcamentoDetDAO();
        ProdutoDAO daoProd = new ProdutoDAO();
        OrcamentoCab orcamentoCab = new OrcamentoCab();
        listOrcamentoDet = new ArrayList<OrcamentoDet>();
       
        Long idColab = Long.parseLong(menuView.Menu.idColaborador);
        
        if (operacao == "alterar")
            orcamentoCab.setId(Long.parseLong(jTable1.getValueAt(jTable1.getSelectedRow(), 4).toString()));
        orcamentoCab.setCliente((Pessoa) listaCliente.get(jcbCliente.getSelectedIndex()));
        orcamentoCab.setColaborador(daoColab.colaboradorIDPessoa(idColab));       
        orcamentoCab.setVl_total(vltotal);
        orcamentoCab.setSubtotal(subtotal);       
        orcamentoCab.setDesconto(Float.parseFloat(jtfDesconto.getText()));
        orcamentoCab.setStatus(jcbStatus.getSelectedItem().toString());
        Date data = new Date();       
        orcamentoCab.setData_orc(data);
        
//        orcamentoCab.setMarca(listMarca.get(jcbMarca.getSelectedIndex()));
 //       orcamentoCab.setModelo(jtfModelo.getText());
        orcamentoCab.setObs(jtaObs.getText());
        
        
        String vlUnitProd = null, vlTotalProd = null;
        OrcamentoDet orcDet = new OrcamentoDet();
        for (int i = 0; i < jTable2.getRowCount(); i++){            
            vlUnitProd = jTable2.getValueAt(i, 5).toString();
            vlTotalProd = jTable2.getValueAt(i, 7).toString();           
            vlUnitProd = vlUnitProd.replace(".", "");
            vlUnitProd = vlUnitProd.replace(",", ".");
            vlTotalProd = vlTotalProd.replace(".", "");
            vlTotalProd = vlTotalProd.replace(",", ".");            
            orcDet.setProduto(daoProd.produtoId(Long.parseLong(jTable2.getValueAt(i, 1).toString())));
            orcDet.setVl_unitario(Float.parseFloat(vlUnitProd));
            orcDet.setVl_total(Float.parseFloat(vlTotalProd));
            orcDet.setQuantidade(Float.parseFloat(jTable2.getValueAt(i, 3).toString()));          
            orcDet.setDesconto(Float.parseFloat(jTable2.getValueAt(i, 6).toString().replace(",", ".")));
            
            orcDet.setTipoVenda(jTable2.getValueAt(i, 8).toString());
            
            if (operacao == "alterar"){
                Long idItem = null;
                idItem = daoOrcDet.ID_ItemOrcamenot(orcamentoCab.getId().intValue(), Integer.parseInt(jTable2.getValueAt(i, 1).toString()));
                if (idItem == 0L)
                   listOrcamentoDet.add(new OrcamentoDet(null,orcamentoCab,orcDet.getProduto(), orcDet.getVl_unitario(), orcDet.getVl_total(), orcDet.getQuantidade(), orcDet.getDesconto(), orcDet.getTipoVenda()));   
            }else            
               listOrcamentoDet.add(new OrcamentoDet(null,orcDet.getProduto(), orcDet.getVl_unitario(), orcDet.getVl_total(), orcDet.getQuantidade(), orcDet.getDesconto(), orcDet.getTipoVenda()));
            
        }        
        orcamentoCab.setListOrcamentoDet(listOrcamentoDet);     
         
         return orcamentoCab;
    }

    
    
   
    
    

   
    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable1;
    public static javax.swing.JTable jTable2;
    private javax.swing.JButton jbtCancelar;
    private javax.swing.JButton jbtExcluir;
    private javax.swing.JButton jbtImprimir;
    private javax.swing.JButton jbtNovo;
    public static javax.swing.JButton jbtProduto;
    private javax.swing.JButton jbtSair;
    public static javax.swing.JButton jbtSalvar;
    private javax.swing.JButton jbtVenda;
    private javax.swing.JComboBox jcbCliente;
    private javax.swing.JComboBox<String> jcbStatus;
    private javax.swing.JTextArea jtaObs;
    private javax.swing.JTextField jtfCodigo;
    private javax.swing.JTextField jtfData;
    public static javax.swing.JTextField jtfDesconto;
    private javax.swing.JTextField jtfOperador;
    private javax.swing.JTextField jtfPesquisa;
    public static javax.swing.JTextField jtfSubTotal;
    public static javax.swing.JTextField jtfValorTotal;
    private converter.RowSorterToStringConverter rowSorterToStringConverter1;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables
}
