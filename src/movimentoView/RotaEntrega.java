/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package movimentoView;

import java.awt.Dimension;
import java.awt.Image;
import java.awt.geom.Point2D;
import java.io.UnsupportedEncodingException;
import java.net.MalformedURLException;
import java.text.DecimalFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.ListSelectionModel;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import maps.java.Geocoding;
import maps.java.Route;
import maps.java.StaticMaps;
import maps.java.StreetView;
import org.jsoup.Jsoup;
import util.Localizacao;

/**
 *
 * @author daniel
 */
public class RotaEntrega extends javax.swing.JDialog {

    /**
     * Creates new form RotaEntrega
     */
   private String direccionLlegada;
   private String direccionSalida;
   private Route.mode modoRuta=Route.mode.driving;
   private double fov=0.0;
   private Boolean flagVolver;
   Route ObjRuta=new Route();
   String[][] resultadoRuta;
   int tamanhoTabela;
    
    public RotaEntrega(java.awt.Frame parent, boolean modal, String direccion) {
        super(parent, modal);
        initComponents();
        
        Localizacao local = new Localizacao();
        direccionLlegada=direccion;
        direccionSalida = local.getDireccion();
        jLabel1.setText("");
        jLabel2.setText("");
        jlDestino.setText("Entrega :"+direccion);
        try{
            this.calcularRuta();
            try {
                this.dibujarMapa(ObjRuta.getGeneralPolyline());
            } catch (Exception ex) {
            }           
        }catch(Exception ex){
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jlTempoTotal = new javax.swing.JLabel();
        jlDistancia = new javax.swing.JLabel();
        jbtPrevious = new javax.swing.JButton();
        jbtNext = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jbtSair = new javax.swing.JButton();
        jlDestino = new javax.swing.JLabel();
        jbtMapa = new javax.swing.JButton();
        jbtImagemDestino = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Tempo", "DistÃ¢ncia", "Indicadores"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jTable1.getTableHeader().setReorderingAllowed(false);
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jTable1MousePressed(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setPreferredWidth(80);
            jTable1.getColumnModel().getColumn(1).setPreferredWidth(100);
            jTable1.getColumnModel().getColumn(2).setPreferredWidth(700);
        }

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel1.setText("jLabel1");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 381, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel2.setText("jLabel2");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 451, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 333, Short.MAX_VALUE)
                .addContainerGap())
        );

        jlTempoTotal.setText("jLabel3");
        jlTempoTotal.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jlDistancia.setText("jLabel3");
        jlDistancia.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jbtPrevious.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/Previous.png"))); // NOI18N
        jbtPrevious.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtPreviousActionPerformed(evt);
            }
        });

        jbtNext.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/Next.png"))); // NOI18N
        jbtNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtNextActionPerformed(evt);
            }
        });

        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jbtSair.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/exit_1.png"))); // NOI18N
        jbtSair.setText("Sair");
        jbtSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtSairActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jbtSair, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jbtSair, javax.swing.GroupLayout.DEFAULT_SIZE, 41, Short.MAX_VALUE)
        );

        jlDestino.setText("jLabel3");
        jlDestino.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jbtMapa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/edit.png"))); // NOI18N
        jbtMapa.setText("Mapa");
        jbtMapa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtMapaActionPerformed(evt);
            }
        });

        jbtImagemDestino.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/img.png"))); // NOI18N
        jbtImagemDestino.setText("Imagem Destino");
        jbtImagemDestino.setEnabled(false);
        jbtImagemDestino.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtImagemDestinoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jbtPrevious)
                                .addGap(73, 73, 73)
                                .addComponent(jbtImagemDestino, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jbtNext)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 100, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jbtMapa, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jlTempoTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jlDistancia, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jlDestino, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jbtMapa))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jbtPrevious, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jbtNext, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jbtImagemDestino, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(10, 10, 10)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlTempoTotal)
                    .addComponent(jlDistancia)
                    .addComponent(jlDestino))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTable1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MousePressed

        
        tamanhoTabela = jTable1.getRowCount() - 1;
        
        if (jTable1.getSelectedRow() == tamanhoTabela)
            jbtImagemDestino.setEnabled(true);
        else
            jbtImagemDestino.setEnabled(false);
        
        try {
           this.dibujarMapa(ObjRuta.getPolilines().get(this.jTable1.getSelectedRow()));
                    
           this.dibujarStreetView(Double.valueOf(resultadoRuta[this.jTable1.getSelectedRow()][3]), 
                   Double.valueOf(resultadoRuta[this.jTable1.getSelectedRow()][4]));
       } catch (Exception ex) {
       }
    }//GEN-LAST:event_jTable1MousePressed

    private void jbtPreviousActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtPreviousActionPerformed

       sumaAnguloFOV(-45);
       try {
           
           this.dibujarStreetView(Double.valueOf(resultadoRuta[this.jTable1.getSelectedRow()][3]),
                      Double.valueOf(resultadoRuta[this.jTable1.getSelectedRow()][4]));
       } catch (Exception ex) {
       }
    }//GEN-LAST:event_jbtPreviousActionPerformed

    private void jbtNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtNextActionPerformed

       sumaAnguloFOV(45);
       try {
           this.dibujarStreetView(Double.valueOf(resultadoRuta[this.jTable1.getSelectedRow()][3]),
                      Double.valueOf(resultadoRuta[this.jTable1.getSelectedRow()][4]));
       } catch (Exception ex) {
       }
    }//GEN-LAST:event_jbtNextActionPerformed

    private void jbtMapaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtMapaActionPerformed

        try {
           this.dibujarMapa(ObjRuta.getGeneralPolyline());
       } catch (Exception ex) {
       }
    }//GEN-LAST:event_jbtMapaActionPerformed

    private void jbtSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtSairActionPerformed

        dispose();
    }//GEN-LAST:event_jbtSairActionPerformed

    private void jbtImagemDestinoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtImagemDestinoActionPerformed

        Point2D.Double resultado = null;
        Geocoding ObjGeocoding=new Geocoding();
        
//        System.out.println("Destino = "+direccionLlegada);
         try {
                resultado = ObjGeocoding.getCoordinates(direccionLlegada);
            } catch (UnsupportedEncodingException ex) {
                Logger.getLogger(PedidoDeliveryView.class.getName()).log(Level.SEVERE, null, ex);
            } catch (MalformedURLException ex) {
                Logger.getLogger(PedidoDeliveryView.class.getName()).log(Level.SEVERE, null, ex);
            }
       try {
           dibujarStreetView(resultado.x, resultado.y);
           
         
       } catch (MalformedURLException ex) {
           Logger.getLogger(RotaEntrega.class.getName()).log(Level.SEVERE, null, ex);
       } catch (UnsupportedEncodingException ex) {
           Logger.getLogger(RotaEntrega.class.getName()).log(Level.SEVERE, null, ex);
       }
    }//GEN-LAST:event_jbtImagemDestinoActionPerformed

    
    
    
    
    
    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(RotaEntrega.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(RotaEntrega.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(RotaEntrega.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(RotaEntrega.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the dialog */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                RotaEntrega dialog = new RotaEntrega(new javax.swing.JFrame(), true);
//                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
//                    @Override
//                    public void windowClosing(java.awt.event.WindowEvent e) {
//                        System.exit(0);
//                    }
//                });
//                dialog.setVisible(true);
//            }
//        });
//    }

    
    
private void calcularRuta() throws MalformedURLException, UnsupportedEncodingException{
        resultadoRuta=ObjRuta.getRoute(direccionSalida, direccionLlegada, null, true, modoRuta, Route.avoids.nothing);
        String[][] datosRuta=new String[resultadoRuta.length][3];
        //Extraemos sÃ³lo duraciÃ³n/distancia/indicaciones
        float tempoTotal = 0;
        float km = 0;
        float metro = 0;
        float hora = 0;
        float minuto = 0;
        
        
        String tempo = null;
        
        String distancia = null;
        String auxDistancia = null;
        String indicacao = null;
        String horaStr = null;
        String minutoStr = null;
        
        DefaultTableModel amodel = (DefaultTableModel) jTable1.getModel();
        amodel.setNumRows(0);
        
        
       // int i = 0;
        for( int i=0;i<datosRuta.length;i++){
            datosRuta[i][0]=resultadoRuta[i][0];
            datosRuta[i][1]=resultadoRuta[i][1];
            datosRuta[i][2]=Jsoup.parse(resultadoRuta[i][2]).text();
            
         
            tempo = datosRuta[i][0];
            distancia = datosRuta[i][1];
            indicacao = datosRuta[i][2];
            
            //Somar o tempo de duracao
                       
            amodel.addRow(new Object[]{tempo, distancia, indicacao}); 
                  
        }
        amodel.addRow(new Object[]{"0", "0", direccionLlegada});
        
        
             
      //  this.dibujarTabla(datosRuta);
        this.dibujarStreetView(Double.valueOf(resultadoRuta[0][3]), Double.valueOf(resultadoRuta[0][4]));
      
        this.dibujarMapa(ObjRuta.getPolilines().get(0));
        this.jTable1.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        this.jTable1.setRowSelectionInterval(0, 0);
        
        for (int i=0; i < jTable1.getRowCount() ; i++){
            //Achando o Tempo Total.
            tempo = jTable1.getValueAt(i, 0).toString();  
//            
            if (tempo.indexOf('h') != -1){
                System.out.println("HOra "+ tempo);
                tempo = tempo.replace("min.", "");
                tempo = tempo.replace("hora", "");
                
                //Isso pega os minutos da hora.
                 System.out.println("Hora tempo ="+tempo.substring(2, 2 + 2));
                //Aqui pega a hora. 
                tempo = tempo.substring(0, 0 + 2);
                hora = hora + (Float.parseFloat(tempo));
                ///minuto = minuto + Float.parseFloat(tempo.substring(2, 2 + 2));
                horaStr = new DecimalFormat("#,##0").format(hora);              
            }else{
                tempo = tempo.replace("min.", "");
                //System.out.println("tempo = "+ tempo);
                minuto = minuto + (Float.parseFloat(tempo)); 
                minutoStr = new DecimalFormat("#,##0").format(minuto);
            }

            
            //Achando a DistÃ¢ncia Total.
            distancia = jTable1.getValueAt(i, 1).toString();
            if(distancia.indexOf('k') != -1){                
              distancia = distancia.replace("km", "");
              distancia = distancia.replace(",", ".");              
              km = km + (Float.parseFloat(distancia));
            }else{
               distancia = distancia.replace("m", "");
               metro = metro + (Float.parseFloat(distancia));
            }           
        }
        //Calculo conversao em metros
        km = km * 1000;
        km = km + metro;
        //Calculo conversao em KM
        km = (km / 1000);
        metro = (km % 1000);
        if (horaStr == null)
            jlTempoTotal.setText("Tempo Total: "+minutoStr+" minuto(s).");
        else
           jlTempoTotal.setText("Tempo Total: "+horaStr+" Hora(s) e "+minutoStr+" minuto(s).");
        jlDistancia.setText("DistÃ¢ncia Total: "+km+" Km.");
        
        
        
    }    
    
    
// private void dibujarTabla(String[][] datosRuta){
//        String[] columnas=new String[3];
//        columnas[0]="DuraÃ§Ã£o";columnas[1]="DistÃ¢ncia";columnas[2]="IndicaÃ§Ãµes";
//        
//        DefaultTableModel tableModel= new DefaultTableModel(datosRuta, columnas);
//        
//        this.jTable1.setModel(tableModel); 
//        
//    }   
  
 
 private void dibujarMapa(String referencia) throws MalformedURLException, UnsupportedEncodingException{
        StaticMaps ObjStatic=new StaticMaps();
        Image imagenRuta=ObjStatic.getStaticMapRoute(new Dimension(500,300), //300,200
                1, StaticMaps.Format.png, StaticMaps.Maptype.roadmap, referencia);
        jLabel2.setIcon(new ImageIcon(imagenRuta));
    }
    
     private void dibujarStreetView(double latitud, double longitud) throws MalformedURLException, UnsupportedEncodingException {
         StreetView ObjStreet=new StreetView();
         String direccion=String.valueOf(latitud) + "," + String.valueOf(longitud);
         Image imagenStreet=ObjStreet.getStreetView(direccion, new Dimension(400,300),
                 fov, -1,-100);
         jLabel1.setIcon(new ImageIcon(imagenStreet));
    }
    private void sumaAnguloFOV(double value){
        fov+=value;
        if(fov>=360){
            fov=0;
        }else if(fov<0){
            fov=315;
        }
    }
 
   
    
    
 
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JButton jbtImagemDestino;
    private javax.swing.JButton jbtMapa;
    private javax.swing.JButton jbtNext;
    private javax.swing.JButton jbtPrevious;
    private javax.swing.JButton jbtSair;
    private javax.swing.JLabel jlDestino;
    private javax.swing.JLabel jlDistancia;
    private javax.swing.JLabel jlTempoTotal;
    // End of variables declaration//GEN-END:variables
}
