/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package movimentoView;


import dao.BancoDAO;
import dao.CategoriaContaDAO;
import dao.CompraCabDAO;
import dao.FornecedorDAO;
import dao.ProdutoDAO;
import dao.PagamentoCabDAO;
import dao.TipoPagamentoDAO;
import java.text.DecimalFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;

import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

//import static menuView.Menu.desktopPane;
import model.Banco;
import model.CategoriaConta;
import model.CompraCab;

import model.CompraDet;
import model.PagamentoCab;
import model.PagamentoDet;

import model.Pessoa;

import model.TipoPagamento;


/**
 *
 * @author daniel
 */
public class CompraCabView extends javax.swing.JInternalFrame {

    /**
     * Creates new form CompraCabView
     */
    public static String operacao;
    List<Pessoa> listFornecedor;   
    List<CategoriaConta> listaCategoriaConta;
    List<CompraCab> listaCompraCab;
    FornecedorDAO fornecedorDAO;
    CategoriaContaDAO catContaDAO;
    ProdutoDAO prodDao;
    CompraDetView compraDetView;
    SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
  // 
    public static float vlNota;
    private  PesquisaCompraView pesquisaCompraView;
    String vlUnit, vlTotal, qtd, desconto;
    CompraCabDAO compraCabDao;
    public CompraCabView() {
        initComponents();
//        carregaTable();
        jbtNovo.setEnabled(true);
        jbtNovo.requestFocus();
        habilita(false);
        limpar();
        
        jlCodigo.setText("0");
        
        carregaCombobox();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        rowSorterToStringConverter1 = new converter.RowSorterToStringConverter();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jPanel4 = new javax.swing.JPanel();
        jbtNovo = new javax.swing.JButton();
        jbtExcluir = new javax.swing.JButton();
        jbtCancelar = new javax.swing.JButton();
        jbtSalvar = new javax.swing.JButton();
        jbtProduto = new javax.swing.JButton();
        jbtSair = new javax.swing.JButton();
        jbtPesquisa = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jtfNumDoc = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jftfDtEmissao = new javax.swing.JFormattedTextField();
        jLabel3 = new javax.swing.JLabel();
        jcbFornecedor = new javax.swing.JComboBox();
        jLabel6 = new javax.swing.JLabel();
        jtfParcelas = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jtfTotal = new javax.swing.JTextField();
        jftfVencimento = new javax.swing.JFormattedTextField();
        try{
            javax.swing.text.MaskFormatter mascara = new javax.swing.text.MaskFormatter("##/##/####");

            jftfVencimento = new javax.swing.JFormattedTextField(mascara);
        }catch(Exception e){
        }
        jLabel8 = new javax.swing.JLabel();
        jtfDescricao = new javax.swing.JTextField();
        jtfDesconto = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jtfSubTotal = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jckbGerarConta = new javax.swing.JCheckBox();
        jLabel4 = new javax.swing.JLabel();
        jlCodigo = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jcbCategoriaConta = new javax.swing.JComboBox();
        jLabel14 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jtfFrete = new javax.swing.JTextField();

        setClosable(true);
        setMaximizable(true);
        setTitle("Cadastro de Entrada de Produtos");
        setToolTipText("");
        setFocusCycleRoot(false);
        setNextFocusableComponent(jbtNovo);

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Produtos da Compra"));

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "CÓD. PRODUTO", "DESCRIÇÃO DO PRODUTO", "QTD.", "UND.", "R$ UNITÁRIO", "DESC.%", "R$ TOTAL", "ID"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable2.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jTable2.getTableHeader().setReorderingAllowed(false);
        jTable2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable2MouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTable2);
        if (jTable2.getColumnModel().getColumnCount() > 0) {
            jTable2.getColumnModel().getColumn(0).setPreferredWidth(100);
            jTable2.getColumnModel().getColumn(1).setPreferredWidth(300);
            jTable2.getColumnModel().getColumn(2).setPreferredWidth(80);
            jTable2.getColumnModel().getColumn(3).setPreferredWidth(45);
            jTable2.getColumnModel().getColumn(4).setPreferredWidth(110);
            jTable2.getColumnModel().getColumn(5).setPreferredWidth(80);
            jTable2.getColumnModel().getColumn(6).setPreferredWidth(120);
            jTable2.getColumnModel().getColumn(7).setResizable(false);
            jTable2.getColumnModel().getColumn(7).setPreferredWidth(70);
        }

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 143, Short.MAX_VALUE)
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jbtNovo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/Add.png"))); // NOI18N
        jbtNovo.setText("Nova Compra");
        jbtNovo.setToolTipText("Adicionar nova Compra");
        jbtNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtNovoActionPerformed(evt);
            }
        });
        jbtNovo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jbtNovoKeyPressed(evt);
            }
        });

        jbtExcluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/delete.png"))); // NOI18N
        jbtExcluir.setText("Excluir");
        jbtExcluir.setToolTipText("Excluir Compra");
        jbtExcluir.setEnabled(false);
        jbtExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtExcluirActionPerformed(evt);
            }
        });
        jbtExcluir.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jbtExcluirKeyPressed(evt);
            }
        });

        jbtCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/cancel.png"))); // NOI18N
        jbtCancelar.setText("Cancelar");
        jbtCancelar.setToolTipText("Cancelar Compra");
        jbtCancelar.setEnabled(false);
        jbtCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtCancelarActionPerformed(evt);
            }
        });
        jbtCancelar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jbtCancelarKeyPressed(evt);
            }
        });

        jbtSalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/save.png"))); // NOI18N
        jbtSalvar.setText("Salvar");
        jbtSalvar.setToolTipText("Salvar Compra");
        jbtSalvar.setEnabled(false);
        jbtSalvar.setNextFocusableComponent(jbtNovo);
        jbtSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtSalvarActionPerformed(evt);
            }
        });
        jbtSalvar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jbtSalvarKeyPressed(evt);
            }
        });

        jbtProduto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/Load.png"))); // NOI18N
        jbtProduto.setText("Produtos & Serviços");
        jbtProduto.setToolTipText("Adicionar Produtos e Serviços");
        jbtProduto.setEnabled(false);
        jbtProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtProdutoActionPerformed(evt);
            }
        });
        jbtProduto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jbtProdutoKeyPressed(evt);
            }
        });

        jbtSair.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/exit_1.png"))); // NOI18N
        jbtSair.setText("Sair");
        jbtSair.setToolTipText("Fechar Formulário de Compra");
        jbtSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtSairActionPerformed(evt);
            }
        });
        jbtSair.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jbtSairKeyPressed(evt);
            }
        });

        jbtPesquisa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/Find.png"))); // NOI18N
        jbtPesquisa.setText("Pesquisa Compra");
        jbtPesquisa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtPesquisaActionPerformed(evt);
            }
        });
        jbtPesquisa.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jbtPesquisaKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addComponent(jbtNovo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jbtPesquisa)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jbtProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jbtCancelar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jbtExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jbtSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jbtSair, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jbtSair, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jbtSalvar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jbtExcluir, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jbtCancelar)
                .addComponent(jbtProduto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jbtPesquisa, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jbtNovo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Dados da Compra"));

        jLabel1.setText("NUM. DOCUMENTO");

        jtfNumDoc.setNextFocusableComponent(jcbFornecedor);
        jtfNumDoc.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtfNumDocKeyPressed(evt);
            }
        });

        jLabel2.setText("DATA EMISSÃO");

        jftfDtEmissao.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter()));
        jftfDtEmissao.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jftfDtEmissaoKeyPressed(evt);
            }
        });

        jLabel3.setText("FORNECEDOR");

        jcbFornecedor.setNextFocusableComponent(jcbCategoriaConta);
        jcbFornecedor.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jcbFornecedorKeyPressed(evt);
            }
        });

        jLabel6.setText("PARCELAS");

        jtfParcelas.setNextFocusableComponent(jtfFrete);
        jtfParcelas.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtfParcelasKeyTyped(evt);
            }
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtfParcelasKeyPressed(evt);
            }
        });

        jLabel7.setText("R$ TOTAL");

        jtfTotal.setBackground(new java.awt.Color(248, 241, 120));
        jtfTotal.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jtfTotal.setNextFocusableComponent(jckbGerarConta);
        jtfTotal.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtfTotalKeyTyped(evt);
            }
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtfTotalKeyPressed(evt);
            }
        });

        try {
            jftfVencimento.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        jftfVencimento.setNextFocusableComponent(jtfParcelas);
        jftfVencimento.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jftfVencimentoKeyPressed(evt);
            }
        });

        jLabel8.setText("VENCIMENTO");

        jtfDescricao.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtfDescricaoKeyPressed(evt);
            }
        });

        jtfDesconto.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jtfDesconto.setNextFocusableComponent(jtfTotal);
        jtfDesconto.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtfDescontoFocusLost(evt);
            }
        });
        jtfDesconto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfDescontoActionPerformed(evt);
            }
        });
        jtfDesconto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtfDescontoKeyTyped(evt);
            }
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtfDescontoKeyPressed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Ubuntu", 0, 15)); // NOI18N
        jLabel10.setText("%");

        jLabel11.setText("DESCONTO");

        jtfSubTotal.setBackground(new java.awt.Color(248, 241, 166));
        jtfSubTotal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfSubTotalActionPerformed(evt);
            }
        });

        jLabel12.setText("R$ SUBTOTAL");

        jckbGerarConta.setText("Gerar Contas à Pagar :");
        jckbGerarConta.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jckbGerarConta.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jckbGerarConta.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        jckbGerarConta.setNextFocusableComponent(jbtSalvar);
        jckbGerarConta.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        jckbGerarConta.setVerticalTextPosition(javax.swing.SwingConstants.TOP);
        jckbGerarConta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jckbGerarContaActionPerformed(evt);
            }
        });

        jLabel4.setText("CODIGO");

        jlCodigo.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jlCodigo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlCodigo.setText("jLabel5");
        jlCodigo.setEnabled(false);

        jLabel13.setText("DESCRIÇÃO");

        jcbCategoriaConta.setNextFocusableComponent(jtfDescricao);
        jcbCategoriaConta.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jcbCategoriaContaKeyPressed(evt);
            }
        });

        jLabel14.setText("CATEGORIA CONTA");

        jLabel9.setText("R$ FRETE");

        jtfFrete.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jtfFrete.setNextFocusableComponent(jtfDesconto);
        jtfFrete.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtfFreteFocusLost(evt);
            }
        });
        jtfFrete.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtfFreteKeyTyped(evt);
            }
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtfFreteKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jlCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addGap(34, 34, 34)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jtfNumDoc, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(53, 53, 53)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 358, Short.MAX_VALUE))
                            .addComponent(jcbFornecedor, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel14)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(88, 88, 88)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel9)
                                    .addComponent(jtfFrete, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jcbCategoriaConta, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(53, 53, 53)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel13)
                                    .addComponent(jLabel11)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(jtfDesconto, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel10)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel12)
                                    .addComponent(jtfSubTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jtfDescricao)))
                    .addComponent(jckbGerarConta)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel6)
                        .addComponent(jtfParcelas, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(32, 32, 32)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel2)
                        .addComponent(jftfDtEmissao, javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jftfVencimento, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 132, Short.MAX_VALUE)
                        .addComponent(jLabel8)
                        .addComponent(jLabel7))
                    .addComponent(jtfTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtfNumDoc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jcbFornecedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jlCodigo)
                    .addComponent(jftfDtEmissao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel14)
                        .addGap(4, 4, 4)
                        .addComponent(jcbCategoriaConta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel13, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel8))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jtfDescricao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jftfVencimento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel12)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel11)
                        .addComponent(jLabel6)
                        .addComponent(jLabel9))
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtfTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtfSubTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtfDesconto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10)
                    .addComponent(jtfParcelas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtfFrete, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jckbGerarConta)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbtNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtNovoActionPerformed
        operacao = "salvar";
//        vlNota = 0;
      
        
        carregaCombobox();
        
      //  jtfDescricao.setEnabled(true);
        jbtCancelar.setEnabled(true);
        jbtNovo.setEnabled(false);
        
        jtfNumDoc.setEnabled(true);
        jtfTotal.setText("0");
        Date y = new Date();
    //    SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
        jftfDtEmissao.setText(sdf.format(y));
        //jtfDesconto.setText("0.0");
        jckbGerarConta.setSelected(true);
        jckbGerarConta.setEnabled(true);
        jbtExcluir.setEnabled(false);
        jbtPesquisa.setEnabled(false);
        jtfNumDoc.requestFocus();
    }//GEN-LAST:event_jbtNovoActionPerformed

    public void carregaCombobox(){
        fornecedorDAO = new FornecedorDAO();
        catContaDAO = new CategoriaContaDAO();
      //  bancoDAO = new BancoDAO();
       // tipoPagDAO = new TipoPagamentoDAO();
        
    //    listFornecedor = new ArrayList<Fornecedor>();
        
        listFornecedor = fornecedorDAO.listaFornecedor();
        
        //Carrega Combobox Fornecedor.
        jcbFornecedor.removeAllItems();
        for (Pessoa fornecedor : listFornecedor){
            jcbFornecedor.addItem(fornecedor.getNome());
        }               
   
        listaCategoriaConta = catContaDAO.listaContas();
        jcbCategoriaConta.removeAllItems();
        for (CategoriaConta cat : listaCategoriaConta){
            jcbCategoriaConta.addItem(cat.getDescricao());
        }
        
       
    }  
    
    private void jbtExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtExcluirActionPerformed
        CompraCabDAO daoCompra = new CompraCabDAO();
        PagamentoCabDAO pagtoDAO = new PagamentoCabDAO();
        if (javax.swing.JOptionPane.showConfirmDialog(null, "Deseja Realmente Excluir esta Compra?", "ATENÇÂO ", javax.swing.JOptionPane.YES_NO_OPTION) == 0) {

           daoCompra.excluirPagamento(Long.parseLong(jlCodigo.getText()));
           JOptionPane.showMessageDialog(null, "Compra excluida com Sucesso!!!");
           jbtCancelarActionPerformed(evt);
        }
    }//GEN-LAST:event_jbtExcluirActionPerformed

    private void jbtCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtCancelarActionPerformed
        DefaultTableModel amodel = (DefaultTableModel) jTable2.getModel();
        amodel.setNumRows(0);
        habilita(false);
      //  carregaTable();
        limpar();
        vlNota = 0;
        jbtProduto.setEnabled(false);
        jbtNovo.setEnabled(true);
        jbtPesquisa.setEnabled(true);
        
        jbtSalvar.setEnabled(false);
        jbtCancelar.setEnabled(false);
        jbtExcluir.setEnabled(false);
        
    }//GEN-LAST:event_jbtCancelarActionPerformed

    private void jbtSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtSalvarActionPerformed
          PagamentoCabDAO pgtDao = new PagamentoCabDAO();
          compraCabDao = new CompraCabDAO();
        if (jtfNumDoc.getText().equals("")){
            JOptionPane.showMessageDialog(null, "O Número do Documento está Vazio, preencha pelo menos com '"+0+"' (zero)" );
            jtfNumDoc.requestFocus();
            return;
        }else
           if (jcbFornecedor.getSelectedIndex() < 0){
               JOptionPane.showMessageDialog(null, "O Fornecedor está Vazio, escolha um Fornecedor");
               jcbFornecedor.requestFocus();
               return;
           }else
              if (jftfVencimento.getText().equals("")){
                  JOptionPane.showMessageDialog(null, "O Vencimento está Vazio, escolha uma Data para o Vencimento");
                  jftfVencimento.requestFocus();
                  return;
               }else
                  if (jftfDtEmissao.getText().equals("")){
                      JOptionPane.showMessageDialog(null, "A Data de Emissão da Nota está Vazia. Digite a Data de Emissão da Nota");
                      jftfDtEmissao.requestFocus();
                      return;
                  }else
                       if (jtfParcelas.getText().equals("")){
                          JOptionPane.showMessageDialog(null, "O número de Parcelas está Vazio");
                          jtfParcelas.requestFocus();
                         return;
                       }               
              
        if (operacao.equals("salvar")){            
            compraCabDao.salvar(carregaObjetos());
            if (jckbGerarConta.isSelected())
                try {
                    pgtDao.salvar(carregaPgtCab());
                } catch (ParseException ex) {
                    JOptionPane.showMessageDialog(null, "Problemas ao Salvar Contas à Pagar");
                }
            vlNota = 0;
            JOptionPane.showMessageDialog(null, "Compra Efetuado com Sucesso.");
            jbtPesquisa.setEnabled(true);
            
        }else{            
             if (operacao.equals("alterar")){         
                compraCabDao.alterar(carregaObjetos());
                vlNota =0;
                JOptionPane.showMessageDialog(null, "Comopra Alterado com Sucesso !!!");              
              }
        }
        jbtCancelarActionPerformed(evt);
     //   vlNota = 0;
        // CategoriaProduto cat = (CategoriaProduto) jcbCategoria.getSelectedItem();
    }//GEN-LAST:event_jbtSalvarActionPerformed

    private void jbtSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtSairActionPerformed
        
        dispose();     
     
    }//GEN-LAST:event_jbtSairActionPerformed

    private void jbtProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtProdutoActionPerformed
        compraDetView = new CompraDetView();
//        desktopPane.add(compraDetView);
        compraDetView.setVisible(true);
        jbtProduto.setEnabled(false);
        jtfTotal.setEnabled(true);
        jtfSubTotal.setEnabled(true);  
        
        
    }//GEN-LAST:event_jbtProdutoActionPerformed

    private void jtfNumDocKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfNumDocKeyPressed
        if (evt.getKeyCode() == evt.VK_ENTER){
            
            jcbFornecedor.setEnabled(true);
            jcbFornecedor.requestFocus();
            
            
        }
    }//GEN-LAST:event_jtfNumDocKeyPressed

    private void jcbFornecedorKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jcbFornecedorKeyPressed
         if (evt.getKeyCode() == evt.VK_ENTER){
            
            jftfDtEmissao.setEnabled(true);
            jftfDtEmissao.requestFocus();
            
            
        }
    }//GEN-LAST:event_jcbFornecedorKeyPressed

    private void jftfVencimentoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jftfVencimentoKeyPressed
         if (evt.getKeyCode() == evt.VK_ENTER){
            if (jftfVencimento.getText().equals("  /  /    ")){
                JOptionPane.showMessageDialog(null, "A data de Vencimento não pode ficar em branco!");
                return;
            }else{
                 jbtProduto.setEnabled(true);
                 jbtProduto.requestFocus();    
            }     
        }
    }//GEN-LAST:event_jftfVencimentoKeyPressed

    private void jftfDtEmissaoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jftfDtEmissaoKeyPressed
        if (evt.getKeyCode() == evt.VK_ENTER){            
           jcbCategoriaConta.setEnabled(true);
           jcbCategoriaConta.requestFocus();
        }
    }//GEN-LAST:event_jftfDtEmissaoKeyPressed

    private void jtfParcelasKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfParcelasKeyPressed
       if (evt.getKeyCode() == evt.VK_ENTER){
          if (jtfParcelas.getText().equals(""))
              jtfParcelas.setText("1");
          
          jtfFrete.setEnabled(true);
          jtfFrete.requestFocus();                     
        }
    }//GEN-LAST:event_jtfParcelasKeyPressed

    private void jtfTotalKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfTotalKeyPressed
        float descontoTotal, vlpago, subtotal, frete;
        if (evt.getKeyCode() == evt.VK_ENTER){
           if (jtfTotal.getText().equals("")){
              //  jtfTotal.setText(new DecimalFormat("#,##0.00").format(Float.parseFloat(jtfSubTotal.getText())));
                jtfTotal.setText(jtfSubTotal.getText());
                 String total = jtfTotal.getText();
                 vlpago = Float.parseFloat(ValorStrParaFloat(total));
                 
                if (!jtfFrete.getText().equals("0,00")){
                       //Calcular Frete.
                   String freteStr = jtfFrete.getText();
                                    
                   frete = Float.parseFloat(ValorStrParaFloat(freteStr));
                   
                   jtfTotal.setText(new DecimalFormat("#,##0.00").format(vlpago + frete));
                   
                }              
                
           }else {
               
               descontoTotal = 0; vlpago = 0; subtotal = 0; 
               String total = jtfTotal.getText();
               String subtotal_str = jtfSubTotal.getText();              
               
               vlpago = Float.parseFloat(ValorStrParaFloat(total));
               
               subtotal = Float.parseFloat(ValorStrParaFloat(subtotal_str));
               descontoTotal = ((vlpago / subtotal)*100);
               
               descontoTotal = (100 - descontoTotal);
                
           
               
               
               jtfDesconto.setText(String.valueOf(new DecimalFormat("#,##0.00").format(descontoTotal)));
               jtfTotal.setText(new DecimalFormat("#,##0.00").format(vlpago));  
               
               
               if (!jtfFrete.getText().equals("0,00")){
                       //Calcular Frete.
                   String freteStr = jtfFrete.getText();
                   freteStr = freteStr.replace(".", "");
                   freteStr = freteStr.replace(",", ".");
                   
                   frete = Float.parseFloat(freteStr);
                   jtfTotal.setText(new DecimalFormat("#,##0.00").format(vlpago + frete));
                   
               }
               
               
            }
            jbtSalvar.setEnabled(true);
            jbtSalvar.requestFocus(); 
        }

    }//GEN-LAST:event_jtfTotalKeyPressed

    private void jtfDescricaoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfDescricaoKeyPressed
        if (evt.getKeyCode() == evt.VK_ENTER){
            jtfDescricao.setText(jtfDescricao.getText().toUpperCase());
            jftfVencimento.setEnabled(true);
            jftfVencimento.requestFocus();
        }
    }//GEN-LAST:event_jtfDescricaoKeyPressed

    private void jbtProdutoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jbtProdutoKeyPressed
        if (evt.getKeyCode() == evt.VK_ENTER){
            String op = System.getProperty("os.name");
            if (!"Linux".equals(op))  
               jbtProdutoActionPerformed(null);
        }
    }//GEN-LAST:event_jbtProdutoKeyPressed

    private void jtfParcelasKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfParcelasKeyTyped
        String caracteres="0987654321";
        if (!caracteres.contains(evt.getKeyChar()+"")){
           evt.consume();
        }
    }//GEN-LAST:event_jtfParcelasKeyTyped

    private void jtfDescontoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfDescontoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfDescontoActionPerformed

    private void jtfSubTotalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfSubTotalActionPerformed

        
    }//GEN-LAST:event_jtfSubTotalActionPerformed

    private void jtfDescontoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfDescontoKeyPressed
        if (evt.getKeyCode() == evt.VK_ENTER){
            if ((jtfDesconto.getText().equals("")) || (jtfDesconto.getText().equals("0"))){ 
                jtfDesconto.setText("0.0");
                jtfTotal.requestFocus();            
            }else{                               
                float porcentagem = 0, vltotal = 0, subtotal = 0, frete = 0;
                String subTotal_str, porcentagem_str, freteStr;
                porcentagem_str = jtfDesconto.getText();
                porcentagem_str = porcentagem_str.replace(",",".");                        
                porcentagem = Float.parseFloat(porcentagem_str);
                subTotal_str = jtfSubTotal.getText();                
                subtotal = Float.parseFloat(ValorStrParaFloat(subTotal_str));                       
                vltotal = (subtotal -(subtotal*porcentagem/100));                
                jtfTotal.setText("");
                jtfTotal.setText(new DecimalFormat("#,##0.00").format(vltotal));
                if (!jtfFrete.getText().equals("0,00")){
                    freteStr = jtfFrete.getText();
                    frete = Float.parseFloat(ValorStrParaFloat(freteStr));
                    jtfTotal.setText(new DecimalFormat("#,##0.00").format(vltotal+frete));
                }
                
                jbtSalvar.setEnabled(true);
                jbtSalvar.requestFocus();              
            }
            
                
        }
    }//GEN-LAST:event_jtfDescontoKeyPressed

    private void jtfDescontoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfDescontoKeyTyped
        String caracteres="0987654321.";
        if (!caracteres.contains(evt.getKeyChar()+"")){
           evt.consume();
        }
    }//GEN-LAST:event_jtfDescontoKeyTyped

    private void jckbGerarContaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jckbGerarContaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jckbGerarContaActionPerformed

    private void jTable2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable2MouseClicked
        String totalEx_str; 
        if (operacao == "alterar"){
            JOptionPane.showMessageDialog(null, "Esta Compra já foi Gravada em nosso Sistema, para você excluir este item, têm que excluir a compra inteira e lançar de novo. \n"
                    + "Você precisa também excluir a Conta à Pagar, se caso vou gerada.");
            return;
        }
        if(javax.swing.JOptionPane.showConfirmDialog(null, "Deseja Realmente Excluir este Produto da Compra?", "ATENÇÂO ", javax.swing.JOptionPane.YES_NO_OPTION) == 0) {                     
            totalEx_str = jTable2.getValueAt(jTable2.getSelectedRow(), 6).toString();
            totalEx_str = totalEx_str.replace(".", "");
            totalEx_str = totalEx_str.replace(",", ".");
            vlNota = (vlNota - Float.parseFloat(totalEx_str));
            jtfSubTotal.setText(new DecimalFormat("#,##0.00").format(vlNota));
            jtfTotal.setText(jtfSubTotal.getText());

            ((DefaultTableModel) jTable2.getModel()).removeRow(jTable2.getSelectedRow());
            jtfDesconto.requestFocus();
           // jTable1.remove(jTable1.getSelectedRow());
            
        }  
    }//GEN-LAST:event_jTable2MouseClicked

    private void jbtPesquisaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtPesquisaActionPerformed
        pesquisaCompraView = new PesquisaCompraView(new java.awt.Frame(), true);
        pesquisaCompraView.setTitle("Formulário de Pesquisa de Compra");
        pesquisaCompraView.setLocationRelativeTo(null); // centraliza a tela
        pesquisaCompraView.setVisible(true);
        //PesquisaCompraView.jtfCodProd.setEnabled(true);
    }//GEN-LAST:event_jbtPesquisaActionPerformed

    private void jcbCategoriaContaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jcbCategoriaContaKeyPressed
        if (evt.getKeyCode() == evt.VK_ENTER){
           jtfDescricao.setEnabled(true);
           jtfDescricao.requestFocus();            
        }
    }//GEN-LAST:event_jcbCategoriaContaKeyPressed

    private void jtfFreteKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfFreteKeyPressed
        if (evt.getKeyCode() == evt.VK_ENTER){
            if (jtfFrete.getText().equals(""))
               jtfFrete.setText("0,00");
            else{
                float frete = 0;
                String freteStr = jtfFrete.getText();
                freteStr = freteStr.replace(".", "");
                freteStr = freteStr.replace(",", ".");
                frete = Float.parseFloat(freteStr);
                jtfFrete.setText(new DecimalFormat("#,##0.00").format(frete));
            }    
            jtfDesconto.setEnabled(true);           
            jtfDesconto.requestFocus();            
        }
    }//GEN-LAST:event_jtfFreteKeyPressed

    private void jbtPesquisaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jbtPesquisaKeyPressed
        if (evt.getKeyCode() == evt.VK_ENTER){
            String op = System.getProperty("os.name");
            if (!"Linux".equals(op))            
                jbtPesquisaActionPerformed(null);
           
        }
    }//GEN-LAST:event_jbtPesquisaKeyPressed

    private void jbtNovoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jbtNovoKeyPressed
        if (evt.getKeyCode() == evt.VK_ENTER){
            String op = System.getProperty("os.name");
            if (!"Linux".equals(op))            
                jbtNovoActionPerformed(null);
           
        }
    }//GEN-LAST:event_jbtNovoKeyPressed

    private void jbtCancelarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jbtCancelarKeyPressed
         if (evt.getKeyCode() == evt.VK_ENTER){
            String op = System.getProperty("os.name");
            if (!"Linux".equals(op))            
                jbtCancelarActionPerformed(null);
           
        }
    }//GEN-LAST:event_jbtCancelarKeyPressed

    private void jbtExcluirKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jbtExcluirKeyPressed
         if (evt.getKeyCode() == evt.VK_ENTER){
            String op = System.getProperty("os.name");
            if (!"Linux".equals(op))            
                jbtExcluirActionPerformed(null);
           
        }
    }//GEN-LAST:event_jbtExcluirKeyPressed

    private void jbtSalvarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jbtSalvarKeyPressed
         if (evt.getKeyCode() == evt.VK_ENTER){
            String op = System.getProperty("os.name");
            if (!"Linux".equals(op))            
                jbtSalvarActionPerformed(null);
           
        }
    }//GEN-LAST:event_jbtSalvarKeyPressed

    private void jbtSairKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jbtSairKeyPressed
         if (evt.getKeyCode() == evt.VK_ENTER){
            String op = System.getProperty("os.name");
            if (!"Linux".equals(op))            
                jbtSairActionPerformed(null);
           
        }
    }//GEN-LAST:event_jbtSairKeyPressed

    private void jtfFreteKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfFreteKeyTyped

        String caracteres="0987654321,";
        if (!caracteres.contains(evt.getKeyChar()+"")){
           evt.consume();
        }
    }//GEN-LAST:event_jtfFreteKeyTyped

    private void jtfTotalKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfTotalKeyTyped

        String caracteres="0987654321,";
        if (!caracteres.contains(evt.getKeyChar()+"")){
           evt.consume();
        }
    }//GEN-LAST:event_jtfTotalKeyTyped

    private void jtfFreteFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtfFreteFocusLost
        if (jtfFrete.getText().equals(""))
            jtfFrete.setText("0,00");
    }//GEN-LAST:event_jtfFreteFocusLost

    private void jtfDescontoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtfDescontoFocusLost
        if (jtfDesconto.getText().equals(""))
            jtfDesconto.setText("0,00");
    }//GEN-LAST:event_jtfDescontoFocusLost

    public static void habilita(boolean habilita){
        jtfNumDoc.setEnabled(habilita);
        jtfDescricao.setEnabled(habilita);
        jtfParcelas.setEnabled(habilita);
       
        jtfTotal.setEnabled(habilita);       
        jcbFornecedor.setEnabled(habilita);           
        jftfDtEmissao.setEnabled(habilita);
        jftfVencimento.setEnabled(habilita); 
        jtfDesconto.setEnabled(habilita);
        jtfSubTotal.setEnabled(habilita);
        jckbGerarConta.setEnabled(habilita);
        jcbCategoriaConta.setEnabled(habilita);
        jtfFrete.setEnabled(habilita);      
       
    }
    
    private void limpar(){
        jtfNumDoc.setText("");
        jtfDescricao.setText("");
        jtfParcelas.setText("");       
        jtfTotal.setText("");
        jcbFornecedor.setSelectedIndex(-1);   
        jftfDtEmissao.setText("");
        jftfVencimento.setText("");
        jtfDesconto.setText("");
        jtfSubTotal.setText("");
        jtfFrete.setText("");
        jlCodigo.setVisible(false);
        
    }
    

    
    private String ValorStrParaFloat(String valor){
        valor = valor.replace(".", "");
        valor = valor.replace(",", ".");
        return valor;        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane2;
    public static javax.swing.JTable jTable2;
    public static javax.swing.JButton jbtCancelar;
    public static javax.swing.JButton jbtExcluir;
    public static javax.swing.JButton jbtNovo;
    private javax.swing.JButton jbtPesquisa;
    public static javax.swing.JButton jbtProduto;
    public static javax.swing.JButton jbtSair;
    public static javax.swing.JButton jbtSalvar;
    public static javax.swing.JComboBox jcbCategoriaConta;
    public static javax.swing.JComboBox jcbFornecedor;
    public static javax.swing.JCheckBox jckbGerarConta;
    public static javax.swing.JFormattedTextField jftfDtEmissao;
    public static javax.swing.JFormattedTextField jftfVencimento;
    public static javax.swing.JLabel jlCodigo;
    public static javax.swing.JTextField jtfDesconto;
    public static javax.swing.JTextField jtfDescricao;
    public static javax.swing.JTextField jtfFrete;
    public static javax.swing.JTextField jtfNumDoc;
    public static javax.swing.JTextField jtfParcelas;
    public static javax.swing.JTextField jtfSubTotal;
    public static javax.swing.JTextField jtfTotal;
    private converter.RowSorterToStringConverter rowSorterToStringConverter1;
    // End of variables declaration//GEN-END:variables

    private CompraCab carregaObjetos() {
        CompraCab compraCab = new CompraCab();
        String vltotal_str;
        
       
        if (operacao == "alterar")
           compraCab.setId(Long.parseLong(jlCodigo.getText()));
        
        
        compraCab.setNum_doc(jtfNumDoc.getText());
        
       
        Date vencimento = null;
        Date emissao = null;
        try {
            vencimento = (Date) sdf.parse(jftfVencimento.getText());
            emissao = (Date) sdf.parse(jftfDtEmissao.getText());
        } catch (ParseException ex) {
            Logger.getLogger(CompraCabView.class.getName()).log(Level.SEVERE, null, ex);
        }
        compraCab.setFornecedor(listFornecedor.get(jcbFornecedor.getSelectedIndex()));
       
        compraCab.setVencimento(vencimento);
        compraCab.setEmissao(emissao);
        compraCab.setSubtotal(vlNota);
        vltotal_str = ValorStrParaFloat(jtfTotal.getText());
        compraCab.setVltotal(Float.parseFloat(vltotal_str));
        compraCab.setQtdparcela(Integer.parseInt(jtfParcelas.getText()));
        compraCab.setDescricao(jtfDescricao.getText());
        compraCab.setStatus("ABERTO");
       // compraCab.setVencimento(vencimento);
        String desconto = jtfDesconto.getText();
        desconto = desconto.replace(",", ".");
       
        compraCab.setDesconto(Float.parseFloat(desconto));
        if (jckbGerarConta.isSelected())
           compraCab.setGerar_conta_pagar(1);
        else
           compraCab.setGerar_conta_pagar(0);
        
        float frete = 0;
        String freteStr = jtfFrete.getText();
        freteStr = freteStr.replace(".", "");
        freteStr = freteStr.replace(",", ".");
        frete = Float.parseFloat(freteStr);
        compraCab.setFrete(frete);
        
                
        //Adicionando Detalhes da Compra
        prodDao = new ProdutoDAO();
        List<CompraDet> listaCompraDet;
        listaCompraDet = new ArrayList<CompraDet>();
        String idProduto, idCompraDet;
        if (!jTable2.getSize().equals(0)) {
            for (int i = 0; i < jTable2.getRowCount(); i++) {
                CompraDet cdt = new CompraDet();
                //cdt.setCompra_cab(compraCab);                
                vlUnit = (jTable2.getValueAt(i, 4).toString().replace(".", ""));
                vlUnit = vlUnit.replace(",", ".");                
                desconto = jTable2.getValueAt(i, 5).toString().replace(",", ".");                
                vlTotal = jTable2.getValueAt(i, 6).toString().replace(".", "");
                vlTotal = vlTotal.replace(",", ".");                 
                qtd = jTable2.getValueAt(i, 2).toString().replace(".", ""); 
                
                idProduto = jTable2.getValueAt(i, 0).toString();
                cdt.setProduto(prodDao.produtoId(Long.parseLong(idProduto)));               
                cdt.setQuantidade(Float.parseFloat(qtd));
                cdt.setVl_unitario(Float.parseFloat(vlUnit));               
                cdt.setVl_total(Float.parseFloat(vlTotal));   
                idCompraDet = jTable2.getValueAt(i, 7).toString();
                if (idCompraDet.equals("0"))
                    cdt.setId(null);
                else
                    cdt.setId(Long.parseLong(idCompraDet)); 
                cdt.setCompra_cab(compraCab);
                
                listaCompraDet.add(new CompraDet(cdt.getId(), cdt.getCompra_cab(), cdt.getProduto(), cdt.getVl_unitario(), cdt.getVl_total(), cdt.getQuantidade(), Float.parseFloat(desconto)));
            }
        compraCab.setListaCompraDet(listaCompraDet);
        

        }
        
        return compraCab;
    }
    
    private PagamentoCab carregaPgtCab() throws ParseException{
        PagamentoCab pagtoCab = new PagamentoCab();
        PagamentoDet pagtoDet = new PagamentoDet();
        BancoDAO bancoDAO = new BancoDAO();
        TipoPagamentoDAO tpgtDAO = new TipoPagamentoDAO();
        Banco bc = new Banco();
        List<PagamentoDet> listPagtoDet = new ArrayList<PagamentoDet>();
        Calendar calendar = Calendar.getInstance(); 
        String vltotal_str, desconto_str; float vlParcela=0;
        
        TipoPagamento tpgt = new TipoPagamento();        
        //tpgt = tpgtDAO.tipoPagamento(6L);        
         tpgt = tpgtDAO.getPagamentoDescricaoNenhum();        
        
        bc = bancoDAO.banco(1L);        
        pagtoCab.setDescricao(jtfDescricao.getText()+" Cód. Compra: "+carregaObjetos().getId());
        pagtoCab.setEmissao(sdf.parse(jftfDtEmissao.getText()));
        pagtoCab.setNumdoc(jtfNumDoc.getText());
        pagtoCab.setQtd_parcela(Integer.parseInt(jtfParcelas.getText()));         
        vltotal_str = ValorStrParaFloat(jtfTotal.getText());
        pagtoCab.setVl_total(Float.parseFloat(vltotal_str));
        pagtoCab.setSubtotal(vlNota);
        pagtoCab.setFornecedor(listFornecedor.get(jcbFornecedor.getSelectedIndex()));
        pagtoCab.setVencimento(sdf.parse(jftfVencimento.getText()));
        pagtoCab.setStatus("ABERTO");  
        desconto_str = jtfDesconto.getText();
        desconto_str = desconto_str.replace(",", ".");
        pagtoCab.setDesconto(Float.parseFloat(desconto_str));
        pagtoCab.setJuro(0);          
        pagtoCab.setId_categoria(listaCategoriaConta.get(jcbCategoriaConta.getSelectedIndex()));
        vlParcela = (pagtoCab.getVl_total()/pagtoCab.getQtd_parcela());         
        
        if (pagtoCab.getQtd_parcela()!= 0){
            calendar.setTime(pagtoCab.getVencimento());
            for (int i = 1; i <= pagtoCab.getQtd_parcela(); i ++){
                pagtoDet.setJuro(0);
                pagtoDet.setDesconto(0);
                pagtoDet.setDt_pagamento(null);
                pagtoDet.setMulta(0);
                pagtoDet.setNum_parcela(i);
                pagtoDet.setVencimento(calendar.getTime());
                pagtoDet.setVl_parcela(vlParcela); 
                pagtoDet.setTipo_pagamento(tpgt);
                pagtoDet.setBanco(bc);    
                
                listPagtoDet.add(new PagamentoDet(pagtoDet.getTipo_pagamento(),pagtoDet.getBanco(), pagtoDet.getDesconto(),
                pagtoDet.getJuro(), pagtoDet.getMulta(), pagtoDet.getVl_parcela(), pagtoDet.getVl_pago(),
                pagtoDet.getNum_parcela(), pagtoDet.getVencimento(), pagtoDet.getDt_pagamento()));
                calendar.add(Calendar.MONTH, 1);
                pagtoDet.setVencimento(calendar.getTime());
            }
            pagtoCab.setListaPagamentoDet(listPagtoDet);
            pagtoCab.setSaldo_devedor(pagtoCab.getVl_total());          
        }
          
        return pagtoCab;
    }
}
