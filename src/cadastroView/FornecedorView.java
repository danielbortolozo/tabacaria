/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package cadastroView;

import dao.ClienteDAO;
import dao.FornecedorDAO;
import dao.PessoaContatoDAO;
import dao.PessoaEnderecoDAO;


import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.Objects;

import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;
import javax.swing.text.MaskFormatter;


import model.EstadoCivil;
import model.Fornecedor;
import model.Pessoa;
import model.PessoaContato;
import model.PessoaEndereco;
import model.PessoaFisica;
import model.PessoaJuridica;
import util.FixedLengthDocument;
import util.RemoverAcentosString;
import util.ValidaCNP;

/**
 *
 * @author root
 */
public final class FornecedorView extends javax.swing.JInternalFrame {

    /**
     * Creates new form Cliente
     */
    List<PessoaFisica> listaPessoaFisica;
    List<PessoaJuridica> listaPessoaJuridica;
    List<Pessoa> listaFornecedor;
    List<PessoaEndereco> listaEndereco; 
    List<PessoaContato> listaContato;
    public static String operacao;
    String cpf = null;
    String cnpj = null;
    //Variavél para chamar a tela de cadastro de endereco de pessoa
    private EnderecoView enderecoView;
    private ContatoView contatoView;
    private FornecedorDAO daoFornecedor;
    Pessoa pessoa ;
    PessoaFisica pf ;
    PessoaJuridica pj = new PessoaJuridica();
    PessoaEnderecoDAO daoEndereco;
    PessoaContatoDAO daoContato;
    SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
    public FornecedorView() {
        initComponents();
        habilitar(false);
        jTabbedPane1.setEnabled(true);
        jTabbedPane1.setEnabledAt(0, false);
        jTabbedPane1.setSelectedIndex(0);
        carregaTablePessoa();
        jtfPesquisa.setEnabled(true);
    
      
        //Limita numero de caracteres no jTextField.   
        jtfRG.setDocument(new FixedLengthDocument(14));
        
        
        
        jtfPesquisa.requestFocus();
     
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        rowSorterToStringConverter1 = new converter.RowSorterToStringConverter();
        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jtfPesquisa = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jLabelNome = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jtfNome = new javax.swing.JTextField();
        jtfEmail = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        jrbFisica = new javax.swing.JRadioButton();
        jrbJuridico = new javax.swing.JRadioButton();
        jftfDataCadastro = new javax.swing.JFormattedTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jtfCodigo = new javax.swing.JTextField();
        jtfSite = new javax.swing.JTextField();
        jpanelPessoaFisi = new javax.swing.JPanel();
        jpanelPessoaFisica = new javax.swing.JPanel();
        cpfLabel = new javax.swing.JLabel();
        jtfCpf = new javax.swing.JTextField();
        try{
            javax.swing.text.MaskFormatter cpf = new javax.swing.text.MaskFormatter("###.###.###-##");

            jtfCpf = new javax.swing.JFormattedTextField(cpf);
        }catch(Exception e){
            e.printStackTrace();
        }
        rgLabel = new javax.swing.JLabel();
        jtfRG = new javax.swing.JTextField();
        orgaoRgLabel = new javax.swing.JLabel();
        jtfOrgaoRg = new javax.swing.JTextField();
        cpfLabel1 = new javax.swing.JLabel();
        jcbEstadoCivil = new javax.swing.JComboBox();
        jcbSexo = new javax.swing.JComboBox();
        cpfLabel2 = new javax.swing.JLabel();
        orgaoRgLabel1 = new javax.swing.JLabel();
        jftfDt_EmissaoRG = new javax.swing.JFormattedTextField();
        try{
            javax.swing.text.MaskFormatter data = new javax.swing.text.MaskFormatter("##/##/###");

            jftfDt_EmissaoRG = new javax.swing.JFormattedTextField(data);
        }catch(Exception e){
            e.printStackTrace();
        }
        jPanel10 = new javax.swing.JPanel();
        jPanelPessoaJuridica = new javax.swing.JPanel();
        cpfLabel5 = new javax.swing.JLabel();
        jtfCNPJ = new javax.swing.JTextField();
        try{
            javax.swing.text.MaskFormatter cnpj = new javax.swing.text.MaskFormatter("##.###.###/####-##");

            jtfCNPJ = new javax.swing.JFormattedTextField(cnpj);
        }catch(Exception e){
            e.printStackTrace();
        }
        cpfLabel6 = new javax.swing.JLabel();
        jtfInscricaoMunicipal = new javax.swing.JTextField();
        cpfLabel7 = new javax.swing.JLabel();
        jtfInscricaoEstadual = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jtfRazaoSocial = new javax.swing.JTextField();
        jPanel5 = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        cpfLabel4 = new javax.swing.JLabel();
        jcbSituacao = new javax.swing.JComboBox();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableEndereco = new javax.swing.JTable();
        jbtAdicionarEndereco = new javax.swing.JButton();
        jbtExcluirEndereco = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jPanel9 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTableContato = new javax.swing.JTable();
        jbtAdicionaContato = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jbtNovo = new javax.swing.JButton();
        jbtExcluir = new javax.swing.JButton();
        jbtCancelar = new javax.swing.JButton();
        jbtSalvar = new javax.swing.JButton();
        jbtSair = new javax.swing.JButton();

        rowSorterToStringConverter1.setTable(jTable1);

        setMaximizable(true);
        setTitle("CADASTRO DE FORNECEDORES");
        setAutoscrolls(true);
        try {
            setSelected(true);
        } catch (java.beans.PropertyVetoException e1) {
            e1.printStackTrace();
        }

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Pesquisa Fornecedores"));

        jtfPesquisa.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        jtfPesquisa.setNextFocusableComponent(jbtNovo);

        org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, jTable1, org.jdesktop.beansbinding.ELProperty.create("${rowSorter}"), jtfPesquisa, org.jdesktop.beansbinding.BeanProperty.create("text"));
        binding.setConverter(rowSorterToStringConverter1);
        bindingGroup.addBinding(binding);

        jtfPesquisa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfPesquisaActionPerformed(evt);
            }
        });
        jtfPesquisa.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtfPesquisaFocusLost(evt);
            }
        });
        jtfPesquisa.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtfPesquisaKeyPressed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "CÓDIGO", "NOME", "CPF/CNPJ", "RG/IE"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Long.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setPreferredWidth(80);
            jTable1.getColumnModel().getColumn(1).setPreferredWidth(260);
            jTable1.getColumnModel().getColumn(2).setPreferredWidth(120);
            jTable1.getColumnModel().getColumn(3).setPreferredWidth(120);
        }

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jtfPesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, 543, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jtfPesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jTabbedPane1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jTabbedPane1.setToolTipText("Cliente");

        jPanel2.setDoubleBuffered(false);
        jPanel2.setEnabled(false);
        jPanel2.setFocusTraversalPolicyProvider(true);

        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder("IDENTIFICAÇÃO DO FORNECEDOR"));

        jLabelNome.setText("NOME");

        jLabel6.setText("E-MAIL");

        jLabel7.setText("SITE");

        jtfNome.setEnabled(false);
        jtfNome.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtfNomeFocusLost(evt);
            }
        });
        jtfNome.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtfNomeKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtfNomeKeyTyped(evt);
            }
        });

        jtfEmail.setEnabled(false);
        jtfEmail.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtfEmailFocusLost(evt);
            }
        });
        jtfEmail.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtfEmailKeyPressed(evt);
            }
        });

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Tipo de Fornecedor"));

        buttonGroup2.add(jrbFisica);
        jrbFisica.setText("Física");
        jrbFisica.setNextFocusableComponent(jrbJuridico);
        jrbFisica.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrbFisicaActionPerformed(evt);
            }
        });

        buttonGroup2.add(jrbJuridico);
        jrbJuridico.setText("Jurídica");
        jrbJuridico.setNextFocusableComponent(jtfNome);
        jrbJuridico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrbJuridicoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jrbFisica)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jrbJuridico)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jrbFisica)
                    .addComponent(jrbJuridico))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jftfDataCadastro.setEditable(false);
        jftfDataCadastro.setEnabled(false);
        jftfDataCadastro.setFocusable(false);

        jLabel4.setText("DATA CADASTRO");

        jLabel2.setText("CÓDIGO");

        jtfCodigo.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        jtfCodigo.setEnabled(false);

        jtfSite.setEnabled(false);
        jtfSite.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtfSiteFocusLost(evt);
            }
        });
        jtfSite.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtfSiteKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jtfSite, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jtfEmail, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jtfNome, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jtfCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel2))
                                .addGap(29, 29, 29)
                                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jftfDataCadastro, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel4))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel7Layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addGap(168, 168, 168))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelNome)
                            .addComponent(jLabel6))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jtfCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jftfDataCadastro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabelNome)))
                .addComponent(jtfNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jtfEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jtfSite, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(16, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, 619, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("FORNECEDOR", jPanel2);

        jpanelPessoaFisi.setDoubleBuffered(false);
        jpanelPessoaFisi.setEnabled(false);

        jpanelPessoaFisica.setBorder(javax.swing.BorderFactory.createTitledBorder("PESSOA FÍSICA :"));
        jpanelPessoaFisica.setDoubleBuffered(false);

        cpfLabel.setText("CPF ");

        //jtfCpf = DefinirTiposCaracteresETamanho(11, "0,1,2,3,4,5,6,7,8,9");
        jtfCpf.setEnabled(false);
        jtfCpf.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtfCpfFocusLost(evt);
            }
        });
        jtfCpf.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtfCpfKeyPressed(evt);
            }
        });

        rgLabel.setText("RG ");

        jtfRG.setEnabled(false);
        jtfRG.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtfRGFocusLost(evt);
            }
        });
        jtfRG.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtfRGKeyPressed(evt);
            }
        });

        orgaoRgLabel.setText("ORGAO RG  ");

        jtfOrgaoRg.setEnabled(false);
        jtfOrgaoRg.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtfOrgaoRgFocusLost(evt);
            }
        });
        jtfOrgaoRg.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtfOrgaoRgKeyPressed(evt);
            }
        });

        cpfLabel1.setText("ESTADO CIVIL ");

        jcbEstadoCivil.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "SOLTEIRO", "CASADO", "UNIAO ESTAVEL", "AMASIADO", "VIUVO" }));
        jcbEstadoCivil.setEnabled(false);
        jcbEstadoCivil.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jcbEstadoCivilFocusLost(evt);
            }
        });
        jcbEstadoCivil.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jcbEstadoCivilKeyPressed(evt);
            }
        });

        jcbSexo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "MASCULINO", "FEMININO" }));
        jcbSexo.setEnabled(false);
        jcbSexo.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jcbSexoFocusLost(evt);
            }
        });
        jcbSexo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jcbSexoKeyPressed(evt);
            }
        });

        cpfLabel2.setText("SEXO");

        orgaoRgLabel1.setText("EMISSÃO RG");

        jftfDt_EmissaoRG.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter()));
        jftfDt_EmissaoRG.setEnabled(false);
        jftfDt_EmissaoRG.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jftfDt_EmissaoRGKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout jpanelPessoaFisicaLayout = new javax.swing.GroupLayout(jpanelPessoaFisica);
        jpanelPessoaFisica.setLayout(jpanelPessoaFisicaLayout);
        jpanelPessoaFisicaLayout.setHorizontalGroup(
            jpanelPessoaFisicaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpanelPessoaFisicaLayout.createSequentialGroup()
                .addGroup(jpanelPessoaFisicaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jtfRG, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(rgLabel))
                .addGap(36, 36, 36)
                .addGroup(jpanelPessoaFisicaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jtfOrgaoRg, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(orgaoRgLabel))
                .addGap(40, 40, 40)
                .addGroup(jpanelPessoaFisicaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpanelPessoaFisicaLayout.createSequentialGroup()
                        .addComponent(orgaoRgLabel1)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jpanelPessoaFisicaLayout.createSequentialGroup()
                        .addGroup(jpanelPessoaFisicaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jcbSexo, 0, 161, Short.MAX_VALUE)
                            .addComponent(cpfLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jftfDt_EmissaoRG))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(jpanelPessoaFisicaLayout.createSequentialGroup()
                .addGroup(jpanelPessoaFisicaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cpfLabel)
                    .addComponent(jtfCpf, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(36, 36, 36)
                .addGroup(jpanelPessoaFisicaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cpfLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jcbEstadoCivil, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(95, 234, Short.MAX_VALUE))
        );
        jpanelPessoaFisicaLayout.setVerticalGroup(
            jpanelPessoaFisicaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpanelPessoaFisicaLayout.createSequentialGroup()
                .addGroup(jpanelPessoaFisicaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cpfLabel)
                    .addComponent(cpfLabel1)
                    .addComponent(cpfLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jpanelPessoaFisicaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtfCpf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jcbEstadoCivil, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jcbSexo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jpanelPessoaFisicaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rgLabel)
                    .addComponent(orgaoRgLabel)
                    .addComponent(orgaoRgLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jpanelPessoaFisicaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtfRG, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtfOrgaoRg, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jftfDt_EmissaoRG, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jpanelPessoaFisiLayout = new javax.swing.GroupLayout(jpanelPessoaFisi);
        jpanelPessoaFisi.setLayout(jpanelPessoaFisiLayout);
        jpanelPessoaFisiLayout.setHorizontalGroup(
            jpanelPessoaFisiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jpanelPessoaFisica, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jpanelPessoaFisiLayout.setVerticalGroup(
            jpanelPessoaFisiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpanelPessoaFisiLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jpanelPessoaFisica, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(148, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("DOCUMENTOS", jpanelPessoaFisi);

        jPanelPessoaJuridica.setBorder(javax.swing.BorderFactory.createTitledBorder("PESSOA JURÍDICA"));
        jPanelPessoaJuridica.setAlignmentX(0.0F);
        jPanelPessoaJuridica.setAlignmentY(0.0F);

        cpfLabel5.setText("CNPJ");

        jtfCNPJ.setEnabled(false);
        jtfCNPJ.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtfCNPJFocusLost(evt);
            }
        });
        jtfCNPJ.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtfCNPJKeyPressed(evt);
            }
        });

        cpfLabel6.setText("INSCRIÇÃO MUNICIPAL");

        jtfInscricaoMunicipal.setEnabled(false);
        jtfInscricaoMunicipal.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtfInscricaoMunicipalFocusLost(evt);
            }
        });
        jtfInscricaoMunicipal.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtfInscricaoMunicipalKeyPressed(evt);
            }
        });

        cpfLabel7.setText("INSCRIÇÃO ESTADUAL");

        jtfInscricaoEstadual.setEnabled(false);
        jtfInscricaoEstadual.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtfInscricaoEstadualFocusLost(evt);
            }
        });
        jtfInscricaoEstadual.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtfInscricaoEstadualKeyPressed(evt);
            }
        });

        jLabel1.setText("RAZÃO SOCIAL");

        jtfRazaoSocial.setEnabled(false);
        jtfRazaoSocial.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtfRazaoSocialFocusLost(evt);
            }
        });
        jtfRazaoSocial.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtfRazaoSocialKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout jPanelPessoaJuridicaLayout = new javax.swing.GroupLayout(jPanelPessoaJuridica);
        jPanelPessoaJuridica.setLayout(jPanelPessoaJuridicaLayout);
        jPanelPessoaJuridicaLayout.setHorizontalGroup(
            jPanelPessoaJuridicaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelPessoaJuridicaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelPessoaJuridicaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelPessoaJuridicaLayout.createSequentialGroup()
                        .addGroup(jPanelPessoaJuridicaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cpfLabel5)
                            .addComponent(jtfCNPJ, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanelPessoaJuridicaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cpfLabel6)
                            .addComponent(jtfInscricaoMunicipal, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanelPessoaJuridicaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelPessoaJuridicaLayout.createSequentialGroup()
                                .addComponent(cpfLabel7)
                                .addGap(13, 13, 13))
                            .addComponent(jtfInscricaoEstadual, javax.swing.GroupLayout.DEFAULT_SIZE, 180, Short.MAX_VALUE)))
                    .addGroup(jPanelPessoaJuridicaLayout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jtfRazaoSocial)))
        );
        jPanelPessoaJuridicaLayout.setVerticalGroup(
            jPanelPessoaJuridicaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelPessoaJuridicaLayout.createSequentialGroup()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jtfRazaoSocial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanelPessoaJuridicaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelPessoaJuridicaLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanelPessoaJuridicaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cpfLabel7)
                            .addComponent(cpfLabel6)))
                    .addGroup(jPanelPessoaJuridicaLayout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(cpfLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanelPessoaJuridicaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jtfCNPJ, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jtfInscricaoMunicipal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jtfInscricaoEstadual, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanelPessoaJuridica, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanelPessoaJuridica, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(149, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("DOCUMENTOS", jPanel10);

        jPanel5.setBorder(null);

        jPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder("SITUAÇÃO DO FORNECEDOR"));

        cpfLabel4.setText("SITUAÇÃO");

        jcbSituacao.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "ATIVO", "INATIVO" }));
        jcbSituacao.setEnabled(false);
        jcbSituacao.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jcbSituacaoFocusLost(evt);
            }
        });
        jcbSituacao.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jcbSituacaoKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cpfLabel4)
                    .addComponent(jcbSituacao, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(429, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(cpfLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jcbSituacao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(192, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("SITUAÇÃO", jPanel5);

        jTableEndereco.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "LOGRADOURO", "NUMERO", "BAIRRO", "CIDADE", "UF", "CEP", "PRINCIPAL", "CORRESPONDENCIA", "ENTREGA", "COBRANCA", "ID"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Boolean.class, java.lang.Boolean.class, java.lang.Boolean.class, java.lang.Boolean.class, java.lang.Long.class
            };
            boolean[] canEdit = new boolean [] {
                true, true, true, true, true, true, true, true, true, true, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableEndereco.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jTableEndereco.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableEnderecoMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTableEndereco);
        if (jTableEndereco.getColumnModel().getColumnCount() > 0) {
            jTableEndereco.getColumnModel().getColumn(0).setPreferredWidth(180);
            jTableEndereco.getColumnModel().getColumn(1).setPreferredWidth(80);
            jTableEndereco.getColumnModel().getColumn(2).setPreferredWidth(130);
            jTableEndereco.getColumnModel().getColumn(3).setPreferredWidth(150);
            jTableEndereco.getColumnModel().getColumn(4).setPreferredWidth(40);
            jTableEndereco.getColumnModel().getColumn(5).setPreferredWidth(70);
            jTableEndereco.getColumnModel().getColumn(6).setPreferredWidth(50);
            jTableEndereco.getColumnModel().getColumn(7).setPreferredWidth(50);
            jTableEndereco.getColumnModel().getColumn(8).setPreferredWidth(50);
            jTableEndereco.getColumnModel().getColumn(10).setPreferredWidth(10);
        }

        jbtAdicionarEndereco.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/Add.png"))); // NOI18N
        jbtAdicionarEndereco.setText("Adicionar Endereço");
        jbtAdicionarEndereco.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtAdicionarEnderecoActionPerformed(evt);
            }
        });
        jbtAdicionarEndereco.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jbtAdicionarEnderecoKeyPressed(evt);
            }
        });

        jbtExcluirEndereco.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/delete.png"))); // NOI18N
        jbtExcluirEndereco.setText("Excluir Endereço");

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, jTableEndereco, org.jdesktop.beansbinding.ELProperty.create("${selectedElement != null}"), jbtExcluirEndereco, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        jbtExcluirEndereco.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtExcluirEnderecoActionPerformed(evt);
            }
        });

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/Next.png"))); // NOI18N
        jButton2.setText("Próximo");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 619, Short.MAX_VALUE)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addComponent(jbtAdicionarEndereco)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jbtExcluirEndereco)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jbtAdicionarEndereco)
                        .addComponent(jbtExcluirEndereco)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(21, 21, 21))
        );

        jTabbedPane1.addTab("ENDEREÇOS", jPanel6);

        jTableContato.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "DESCRIÇÃO", "DDD", "NÚMERO", "ID"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Long.class
            };
            boolean[] canEdit = new boolean [] {
                true, true, true, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableContato.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jScrollPane3.setViewportView(jTableContato);
        if (jTableContato.getColumnModel().getColumnCount() > 0) {
            jTableContato.getColumnModel().getColumn(0).setResizable(false);
            jTableContato.getColumnModel().getColumn(0).setPreferredWidth(150);
            jTableContato.getColumnModel().getColumn(1).setResizable(false);
            jTableContato.getColumnModel().getColumn(1).setPreferredWidth(70);
            jTableContato.getColumnModel().getColumn(2).setResizable(false);
            jTableContato.getColumnModel().getColumn(2).setPreferredWidth(250);
            jTableContato.getColumnModel().getColumn(3).setResizable(false);
            jTableContato.getColumnModel().getColumn(3).setPreferredWidth(0);
        }

        jbtAdicionaContato.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/Add.png"))); // NOI18N
        jbtAdicionaContato.setText("Adicionar Contato");
        jbtAdicionaContato.setNextFocusableComponent(jbtSalvar);
        jbtAdicionaContato.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtAdicionaContatoActionPerformed(evt);
            }
        });

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/delete.png"))); // NOI18N
        jButton1.setText("Excluir Contato");

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, jTableContato, org.jdesktop.beansbinding.ELProperty.create("${selectedElement != null}"), jButton1, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addComponent(jbtAdicionaContato, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 493, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 126, Short.MAX_VALUE))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbtAdicionaContato, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(38, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("CONTATOS", jPanel9);

        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jbtNovo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/Add.png"))); // NOI18N
        jbtNovo.setText("Novo");
        jbtNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtNovoActionPerformed(evt);
            }
        });
        jbtNovo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jbtNovoKeyPressed(evt);
            }
        });

        jbtExcluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/delete.png"))); // NOI18N
        jbtExcluir.setText("Excluir");
        jbtExcluir.setEnabled(false);
        jbtExcluir.setFocusCycleRoot(true);
        jbtExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtExcluirActionPerformed(evt);
            }
        });
        jbtExcluir.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jbtExcluirKeyPressed(evt);
            }
        });

        jbtCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/cancel.png"))); // NOI18N
        jbtCancelar.setText("Cancelar");
        jbtCancelar.setEnabled(false);
        jbtCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtCancelarActionPerformed(evt);
            }
        });
        jbtCancelar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jbtCancelarKeyPressed(evt);
            }
        });

        jbtSalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/save.png"))); // NOI18N
        jbtSalvar.setText("Salvar");
        jbtSalvar.setEnabled(false);
        jbtSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtSalvarActionPerformed(evt);
            }
        });
        jbtSalvar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jbtSalvarKeyPressed(evt);
            }
        });

        jbtSair.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/exit_1.png"))); // NOI18N
        jbtSair.setText("Sair");
        jbtSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtSairActionPerformed(evt);
            }
        });
        jbtSair.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jbtSairKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jbtNovo, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jbtExcluir)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jbtCancelar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jbtSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jbtSair, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jbtNovo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jbtExcluir, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jbtCancelar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jbtSalvar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jbtSair, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jTabbedPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 340, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        bindingGroup.bind();

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jtfPesquisaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtfPesquisaFocusLost
        // TODO add your handling code here:
        // btnNovo.requestFocus();
        //  jbtNovo.requestFocus();
    }//GEN-LAST:event_jtfPesquisaFocusLost

    private void jbtNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtNovoActionPerformed
        // TODO add your handling code here:
        operacao = "salvar";
        jbtCancelarActionPerformed(evt);
        DefaultTableModel amodel = (DefaultTableModel) jTable1.getModel();
        amodel.setNumRows(0);
       
        jftfDataCadastro.setEnabled(true);
        jftfDataCadastro.setEditable(false);
        SimpleDateFormat sdf1 = new SimpleDateFormat("dd/MM/yyyy"); //você pode usar outras máscaras 
        Date y = new Date();
        jftfDataCadastro.setValue(y);
   //     jcbTipoCliente.setEnabled(true);
        // jTabbedPane1.setEnabled(true);
        jrbFisica.setSelected(true);
        jTabbedPane1.setEnabledAt(0, true);
        jTabbedPane1.setEnabledAt(1, false);
        jPanelPessoaJuridica.setVisible(false);
        jTabbedPane1.setSelectedIndex(0);
        jbtCancelar.setEnabled(true);
        jbtNovo.setEnabled(false);

        jtfPesquisa.setEnabled(false);
        jtfNome.setEnabled(true);
        jrbFisica.setEnabled(true);
        jrbJuridico.setEnabled(true);
       // contatoView = new ContatoView(new java.awt.Frame(), true);
        // contatoView.jtfDescricao.setEnabled(true);
        jpanelPessoaFisi.setEnabled(true);
        jtfNome.requestFocus();
        
        pf = new PessoaFisica();
        pj = new PessoaJuridica();
        //   jcbTipoCliente.requestFocus();

    }//GEN-LAST:event_jbtNovoActionPerformed

    private void jbtSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtSairActionPerformed
        // TODO add your handling code here:
        dispose();       
//        menuView.Menu.jbtFornecedor.setEnabled(true);
        menuView.Menu.jmenuFornecedor.setEnabled(true);
   
    }//GEN-LAST:event_jbtSairActionPerformed

    private void jbtCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtCancelarActionPerformed

        habilitar(false);
        jTabbedPane1.setSelectedIndex(0);
       
        jbtNovo.setEnabled(true);

        

        //Limpar jTableEndereco
        DefaultTableModel amodel = (DefaultTableModel) jTableEndereco.getModel();
        amodel.setNumRows(0);
        //Limpar jTableContato
        DefaultTableModel amodel1 = (DefaultTableModel) jTableContato.getModel();
        amodel1.setNumRows(0);
        //Limpar jTable de Pesquisa
        DefaultTableModel amodel2 = (DefaultTableModel) jTable1.getModel();
        amodel2.setNumRows(0);
        limpar();
        carregaTablePessoa();
        jbtSalvar.setEnabled(false);
        jbtCancelar.setEnabled(false);
        jtfPesquisa.setEnabled(true);
        jtfPesquisa.setText("");
        jtfPesquisa.requestFocus();
    }//GEN-LAST:event_jbtCancelarActionPerformed

    private void jtfEmailFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtfEmailFocusLost
        jtfEmail.setText(jtfEmail.getText().toLowerCase());

    }//GEN-LAST:event_jtfEmailFocusLost

    private void jtfNomeFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtfNomeFocusLost
        // TODO add your handling code here:
        jtfNome.setText(RemoverAcentosString.semAcento(jtfNome.getText().toUpperCase()));

    }//GEN-LAST:event_jtfNomeFocusLost

    private void jtfCpfFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtfCpfFocusLost
        // TODO add your handling code here:


    }//GEN-LAST:event_jtfCpfFocusLost

    private void jcbEstadoCivilFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jcbEstadoCivilFocusLost
        // TODO add your handling code here:

    }//GEN-LAST:event_jcbEstadoCivilFocusLost

    private void jtfRGFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtfRGFocusLost
        // TODO add your handling code here:

    }//GEN-LAST:event_jtfRGFocusLost

    private void jtfOrgaoRgFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtfOrgaoRgFocusLost
        // TODO add your handling code here:
        jtfOrgaoRg.setText(jtfOrgaoRg.getText().toUpperCase());

    }//GEN-LAST:event_jtfOrgaoRgFocusLost

    private void jbtSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtSalvarActionPerformed

        // TODO add your handling code here:
        salvar();

       // jbtCancelarActionPerformed(evt);

    }//GEN-LAST:event_jbtSalvarActionPerformed

    private void jtfNomeKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfNomeKeyTyped
        // TODO add your handling code here:


    }//GEN-LAST:event_jtfNomeKeyTyped

    private void jtfNomeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfNomeKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == evt.VK_ENTER) {

            if (jtfNome.getText().equals("")) {
                JOptionPane.showMessageDialog(null, "O campo nome não pode ser vazio ou nullo!!!");
                jtfNome.requestFocus();
            } else {
                jtfEmail.setEnabled(true);
                jbtSalvar.setEnabled(true);
                jtfEmail.requestFocus();
            }

        }
    }//GEN-LAST:event_jtfNomeKeyPressed

    private void jtfEmailKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfEmailKeyPressed
        // TODO add your handling code here:

        if (evt.getKeyCode() == evt.VK_ENTER) {

            if (jtfEmail.getText().equals("")) {

                jtfSite.setEnabled(true);
                jtfSite.requestFocus();
            } else {
                System.out.println("Validar email");
                jtfSite.setEnabled(true);
                jtfSite.requestFocus();
            }

        }

    }//GEN-LAST:event_jtfEmailKeyPressed

//    if (evt.getKeyCode() == evt.VK_ENTER){
//            jTabbedPane1.setEnabledAt(1, true);
//            jTabbedPane1.setSelectedIndex(1);
//               
//            if (jrbFisica.isSelected()){
//               jtfCpf.setEnabled(true);
//               jtfCpf.requestFocus();
//            }else{
//                  jtfCNPJ.setEnabled(true);
//                  jtfCNPJ.requestFocus();
//            }
//        
//         }jtfSite.setText(jtfSite.getText().toLowerCase());

    private void jtfCpfKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfCpfKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == evt.VK_ENTER) {

            cpf = jtfCpf.getText();
            cpf = cpf.replace(".", "");
            cpf = cpf.replace("-", "");
            
            if (ValidaCNP.isValidCPF(cpf) == false) {
                JOptionPane.showMessageDialog(null, "CPF inválido");
                return;
            }

            jcbEstadoCivil.setEnabled(true);
            jcbEstadoCivil.requestFocus();
            

        }
    }//GEN-LAST:event_jtfCpfKeyPressed

    private void jcbEstadoCivilKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jcbEstadoCivilKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == evt.VK_ENTER) {

            jcbSexo.setEnabled(true);
            jcbSexo.requestFocus();

        }
    }//GEN-LAST:event_jcbEstadoCivilKeyPressed

    private void jtfRGKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfRGKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == evt.VK_ENTER) {

            jtfOrgaoRg.setEnabled(true);
            jtfOrgaoRg.requestFocus();

        }
    }//GEN-LAST:event_jtfRGKeyPressed

    private void jtfOrgaoRgKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfOrgaoRgKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == evt.VK_ENTER) {

       //     jftfDataEmissaoRg.setEnabled(true);
            //     jftfDataEmissaoRg.requestFocus();
            jftfDt_EmissaoRG.setEnabled(true);
            jftfDt_EmissaoRG.requestFocus();

        }

    }//GEN-LAST:event_jtfOrgaoRgKeyPressed

    private void jcbSituacaoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jcbSituacaoFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_jcbSituacaoFocusLost

    private void jcbSituacaoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jcbSituacaoKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == evt.VK_ENTER) {
            jTabbedPane1.setEnabledAt(4, true);
            jTabbedPane1.setSelectedIndex(4);
            jbtAdicionarEndereco.setEnabled(true);
            jbtAdicionarEndereco.requestFocus();

            // jbtSalvar.requestFocus();
        }
    }//GEN-LAST:event_jcbSituacaoKeyPressed

    private void jrbJuridicoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrbJuridicoActionPerformed
        // TODO add your handling code here:

      
        jTabbedPane1.setEnabledAt(1, false);
        jpanelPessoaFisica.setVisible(false);
        jPanelPessoaJuridica.setVisible(true);
        jLabelNome.setText("NOME FANTASIA");
        jtfNome.requestFocus();
      //  jPanelPessoaJuridica.setSize(300, 300);
        // jPanelPessoaJuridica.set

    }//GEN-LAST:event_jrbJuridicoActionPerformed

    private void jtfCNPJFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtfCNPJFocusLost
        
    }//GEN-LAST:event_jtfCNPJFocusLost

    private void jtfCNPJKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfCNPJKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == evt.VK_ENTER) {

            if (jtfCNPJ.getText().equals("  .   .   /    -  ")) {
                
                //int resposta = JOptionPane.showConfirmDialog(null, "Deseja realmente excluir?", title, JOptionPane.YES_NO_OPTION);
               // if (resposta == JOptionPane.YES_OPTION) {
                   //u em Sim. Executar o código correspondente.
               // } else if (resposta == JOptionPane.NO_OPTION) {
                   //Usuário clicou em não. Executar o código correspondente.
               // }
                
                JOptionPane.showMessageDialog(null, "CNPJ não poder ser vazio ou nullo !!!");
            }else{
                  cnpj = jtfCNPJ.getText();                  
                  cnpj = cnpj.replace(".", "");
                  cnpj = cnpj.replace("/", "");
                  cnpj = cnpj.replace("-", "");
                  System.out.println("CNPJ para Validar ="+cnpj);
                  if (ValidaCNP.isValidCNPJ(cnpj)== false){
                      JOptionPane.showMessageDialog(null, "CNPJ INVÁLIDO !!!");
                      return;
                  }
                  jtfInscricaoMunicipal.setEnabled(true);
                  jtfInscricaoMunicipal.requestFocus();
            }

        }
    }//GEN-LAST:event_jtfCNPJKeyPressed

    private void jtfInscricaoMunicipalFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtfInscricaoMunicipalFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfInscricaoMunicipalFocusLost

    private void jtfInscricaoMunicipalKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfInscricaoMunicipalKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == evt.VK_ENTER) {
            jtfInscricaoEstadual.setEnabled(true);
            jtfInscricaoEstadual.requestFocus();
        }
    }//GEN-LAST:event_jtfInscricaoMunicipalKeyPressed

    private void jtfInscricaoEstadualFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtfInscricaoEstadualFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfInscricaoEstadualFocusLost

    private void jtfInscricaoEstadualKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfInscricaoEstadualKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == evt.VK_ENTER) {
            jTabbedPane1.setEnabledAt(3, true);
            jTabbedPane1.setSelectedIndex(3);
            jcbSituacao.setEnabled(true);
            jcbSituacao.requestFocus();
           
        }
    }//GEN-LAST:event_jtfInscricaoEstadualKeyPressed

    private void jrbFisicaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrbFisicaActionPerformed
        // TODO add your handling code here:
        jTabbedPane1.setEnabledAt(2, false);
        jPanelPessoaJuridica.setVisible(false);
        jpanelPessoaFisica.setVisible(true);
        jLabelNome.setText("NOME");
        if (operacao == "salvar") {
            jtfNome.requestFocus();
        }
    }//GEN-LAST:event_jrbFisicaActionPerformed

    private void jcbSexoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jcbSexoFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_jcbSexoFocusLost

    private void jcbSexoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jcbSexoKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == evt.VK_ENTER) {

            jtfRG.setEnabled(true);
            jtfRG.requestFocus();
        }
    }//GEN-LAST:event_jcbSexoKeyPressed

    private void jbtAdicionarEnderecoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtAdicionarEnderecoActionPerformed
        enderecoView = new EnderecoView(new java.awt.Frame(), true);
        enderecoView.jtfLogradouro.setEnabled(true);
        enderecoView.setFormulario("fornecedor");
        if (operacao == "alterar"){
           enderecoView.setPessoaId(Long.parseLong(jtfCodigo.getText()));
           enderecoView.setOperacao(operacao);
        }     
       
        enderecoView.setTitle("Cadastro de Endereco de Fornecedor");
        enderecoView.setLocationRelativeTo(null); // centraliza a tela 
        enderecoView.setVisible(true);     
    }//GEN-LAST:event_jbtAdicionarEnderecoActionPerformed

    private void jTableEnderecoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableEnderecoMouseClicked


    }//GEN-LAST:event_jTableEnderecoMouseClicked

    private void jbtExcluirEnderecoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtExcluirEnderecoActionPerformed
        try {
            Long id = (Long) jTableEndereco.getValueAt(jTableEndereco.getSelectedRow(), 10);
            if (id > 0) {
                PessoaEnderecoDAO daoEndereco = new PessoaEnderecoDAO();
                daoEndereco.remover(id);
                ((DefaultTableModel) jTableEndereco.getModel()).removeRow(jTableEndereco.getSelectedRow());
                JOptionPane.showMessageDialog(null, "Endereço Excluído com Sucesso !!!");
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Erro ao Excluir Endereço, Click no Botão Salvar e tente novamente.");
            //ex.printStackTrace();
        }


    }//GEN-LAST:event_jbtExcluirEnderecoActionPerformed

    private void jtfPesquisaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfPesquisaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfPesquisaActionPerformed

    private void jtfPesquisaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfPesquisaKeyPressed

        if (evt.getKeyCode() == evt.VK_ENTER) {
            jTable1.requestFocus();
        } else if (evt.getKeyCode() == evt.VK_TAB) {
            jbtNovo.requestFocus();
        }


    }//GEN-LAST:event_jtfPesquisaKeyPressed

    private void jbtAdicionaContatoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtAdicionaContatoActionPerformed
        contatoView = new ContatoView(new java.awt.Frame(), true);
      //  contatoView.setSize(404, 262);
        contatoView.setTitle("Cadastro de Contato do Fornecedor");
        contatoView.setLocationRelativeTo(null); // centraliza a tela 
        contatoView.setFormulario("fornecedor");
        if (operacao == "alterar"){
           contatoView.setPessoaId(Long.parseLong(jtfCodigo.getText()));
           contatoView.setOperacao(operacao);
        }
        contatoView.setVisible(true);
        


    }//GEN-LAST:event_jbtAdicionaContatoActionPerformed

    private void jbtAdicionarEnderecoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jbtAdicionarEnderecoKeyPressed
        // TODO add your handling code here:
//        if (evt.getKeyCode() == evt.VK_ENTER){
//            jbtAdicionarEnderecoActionPerformed(null);
//        }

        // 
    }//GEN-LAST:event_jbtAdicionarEnderecoKeyPressed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        jTabbedPane1.setEnabledAt(5, true);
        jTabbedPane1.setSelectedIndex(5);
        jbtAdicionaContato.requestFocus();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        pf = new PessoaFisica();
        pj = new PessoaJuridica();
        operacao = "alterar";
        habilitar(true);
        limpar();       
        daoEndereco = new PessoaEnderecoDAO();
        daoContato = new PessoaContatoDAO();
        listaEndereco = new ArrayList<PessoaEndereco>();
        listaEndereco = new ArrayList<PessoaEndereco>();
        
        DefaultTableModel amodel = (DefaultTableModel) jTableEndereco.getModel();
        amodel.setNumRows(0);
        DefaultTableModel amodel1 = (DefaultTableModel) jTableContato.getModel();
        amodel1.setNumRows(0);
      //Código de pessoa.
        Long id = (Long) jTable1.getValueAt(jTable1.getSelectedRow(), 0);
        jTabbedPane1.setSelectedIndex(0);
        enderecoView = new EnderecoView(new java.awt.Frame(), true);
        contatoView = new ContatoView(new java.awt.Frame(), true);
        jtfCodigo.setText(String.valueOf(id));
        jtfNome.setText(jTable1.getValueAt(jTable1.getSelectedRow(), 1).toString());
        for (Pessoa p : listaFornecedor){
            if (Objects.equals(p.getId(), id) && p.getTipo().equals("F")){
               jTabbedPane1.setEnabledAt(2, false); 
               for(PessoaFisica pf : listaPessoaFisica){
                   if (pf.getId() == id){
                       jftfDataCadastro.setText(sdf.format(pf.getForn().getDataCadastro()));
                       jrbFisica.setSelected(true);
                       jtfEmail.setText(pf.getEmail());
                       jtfSite.setText(pf.getSite());
                       jtfCpf.setText(pf.getCpf());
                       jcbEstadoCivil.setSelectedItem(pf.getEstado_civil().toString());
                       jtfRG.setText(pf.getRg());
                       jtfOrgaoRg.setText(pf.getOrgao_rg()); 
                       jcbSituacao.setSelectedItem(pf.getForn().getStatus().toString());
                       if (pf.getData_emissao() == null) {
                          jftfDt_EmissaoRG.setText("");
                       } else {
                              String dt_emissao = sdf.format(pf.getData_emissao()); // Converte data para string.
                              jftfDt_EmissaoRG.setText(dt_emissao);
                       }
                       this.pf = pf;
                       break; 
                    }                                            
               }//fim for PessoaFisica                                   
               break;
            }else// fim if Pessoa Fisica
            if (Objects.equals(p.getId(), id) && p.getTipo().equals("J")){
                jTabbedPane1.setEnabledAt(1,false);
                for(PessoaJuridica pj : listaPessoaJuridica){
                    if (Objects.equals(pj.getId(), id)){
                       jftfDataCadastro.setText(sdf.format(pj.getForn().getDataCadastro()));
                       jrbJuridico.setSelected(true);
                       jtfEmail.setText(pj.getEmail());
                       jtfSite.setText(pj.getSite());
                       jtfRazaoSocial.setText(pj.getRazao_social());
                       jtfCNPJ.setText(pj.getCnpj());
                       jtfInscricaoEstadual.setText(pj.getInscrecao_estadual());
                       jtfInscricaoMunicipal.setText(pj.getInscrecao_municipal());
                       this.pj = pj;
                       break;
                    }
                    
                }//fim for PessoaJuridica
                break;
            }//fim if PessoaJuridica
        }//fim for Pessoa.  
        
        listaEndereco = daoEndereco.getEnderecos(id);        
        for (PessoaEndereco endereco : listaEndereco) {
            amodel.addRow(new Object[]{endereco.getLogradouro(), endereco.getNumero(), endereco.getBairro(),
            endereco.getCidade(), endereco.getUf(), endereco.getCep(), endereco.getPrincipal(),
            endereco.getCorrespondencia(), endereco.getEntrega(), endereco.getCobranca(), endereco.getId()});
                
        } 
        listaContato = daoContato.getContatos(id);
        for (PessoaContato contato : listaContato) {
            amodel1.addRow(new Object[]{contato.getDescricao(), contato.getDdd(), contato.getNumero(), contato.getId()});
        }       
        
        jbtSalvar.setEnabled(true);
        jbtCancelar.setEnabled(true);
    }//GEN-LAST:event_jTable1MouseClicked

    private void jftfDt_EmissaoRGKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jftfDt_EmissaoRGKeyPressed
        // TODO add your handling code here:

        if (evt.getKeyCode() == evt.VK_ENTER) {
            jTabbedPane1.setEnabledAt(3, true);
            jTabbedPane1.setSelectedIndex(3);
            jcbSituacao.setEnabled(true);
            jcbSituacao.requestFocus();
        }
    }//GEN-LAST:event_jftfDt_EmissaoRGKeyPressed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        try {
            Long id = (Long) jTableContato.getValueAt(jTableContato.getSelectedRow(), 3);
            if (id > 0) {
                PessoaContatoDAO daoContato = new PessoaContatoDAO();
                daoContato.remover(id);
                ((DefaultTableModel) jTableContato.getModel()).removeRow(jTableContato.getSelectedRow());
                JOptionPane.showMessageDialog(null, "Contato Excluído com Sucesso !!!");
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Erro ao Excluir Contato, click no Botão Salvar e Tente novamente.");
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jtfSiteKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfSiteKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == evt.VK_ENTER) {
            if (jrbFisica.isSelected()) {
                jTabbedPane1.setEnabledAt(1, true);
                jTabbedPane1.setEnabledAt(2, false);
                jTabbedPane1.setSelectedIndex(1);
                jtfCpf.setEnabled(true);
                jtfCpf.requestFocus();
            } else {
                jTabbedPane1.setEnabledAt(2, true);
                jTabbedPane1.setEnabledAt(1, false);
                jTabbedPane1.setSelectedIndex(2);
                jtfRazaoSocial.setEnabled(true);
                jtfRazaoSocial.requestFocus();
            }

        }
    }//GEN-LAST:event_jtfSiteKeyPressed

    private void jtfSiteFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtfSiteFocusLost
        // TODO add your handling code here:
        jtfSite.setText(jtfSite.getText().toLowerCase());
    }//GEN-LAST:event_jtfSiteFocusLost

    private void jtfRazaoSocialKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfRazaoSocialKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == evt.VK_ENTER){
            if (!jtfRazaoSocial.getText().equals("")){
                jtfCNPJ.setEnabled(true);
                jtfCNPJ.requestFocus();
            }else
                JOptionPane.showMessageDialog(null, "Razão Social não pode ficar em branco ou vazio !!!!");
        }
    }//GEN-LAST:event_jtfRazaoSocialKeyPressed

    private void jtfRazaoSocialFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtfRazaoSocialFocusLost
        
        //Remover Acentos do Campo Razão Social.
       
        jtfRazaoSocial.setText(RemoverAcentosString.semAcento(jtfRazaoSocial.getText().toUpperCase()));
       
        
    }//GEN-LAST:event_jtfRazaoSocialFocusLost

    private void jbtExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtExcluirActionPerformed

        
    }//GEN-LAST:event_jbtExcluirActionPerformed

    private void jbtNovoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jbtNovoKeyPressed

         if (evt.getKeyCode() == evt.VK_ENTER){
            String op = System.getProperty("os.name");
            if (!"Linux".equals(op))            
                jbtNovoActionPerformed(null);
           
        }
    }//GEN-LAST:event_jbtNovoKeyPressed

    private void jbtExcluirKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jbtExcluirKeyPressed

         if (evt.getKeyCode() == evt.VK_ENTER){
            String op = System.getProperty("os.name");
            if (!"Linux".equals(op))            
                jbtExcluirActionPerformed(null);
           
        }
    }//GEN-LAST:event_jbtExcluirKeyPressed

    private void jbtCancelarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jbtCancelarKeyPressed

         if (evt.getKeyCode() == evt.VK_ENTER){
            String op = System.getProperty("os.name");
            if (!"Linux".equals(op))            
                jbtCancelarActionPerformed(null);
           
        }
    }//GEN-LAST:event_jbtCancelarKeyPressed

    private void jbtSalvarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jbtSalvarKeyPressed

         if (evt.getKeyCode() == evt.VK_ENTER){
            String op = System.getProperty("os.name");
            if (!"Linux".equals(op))            
                jbtSalvarActionPerformed(null);
           
        }
    }//GEN-LAST:event_jbtSalvarKeyPressed

    private void jbtSairKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jbtSairKeyPressed

         if (evt.getKeyCode() == evt.VK_ENTER){
            String op = System.getProperty("os.name");
            if (!"Linux".equals(op))            
                jbtSairActionPerformed(null);
           
        }
    }//GEN-LAST:event_jbtSairKeyPressed

      
    
    public void habilitar(boolean habilita) {
        jtfNome.setEnabled(habilita);

        jftfDataCadastro.setEditable(habilita);
        jTabbedPane1.setEnabledAt(0, habilita);
        jTabbedPane1.setEnabledAt(1, habilita);
        jTabbedPane1.setEnabledAt(2, habilita);
        jTabbedPane1.setEnabledAt(3, habilita);
        jTabbedPane1.setEnabledAt(4, habilita);
        jTabbedPane1.setEnabledAt(5, habilita);
        jrbFisica.setEnabled(habilita);
        jrbJuridico.setEnabled(habilita);

        jtfRG.setEnabled(habilita);
        jtfCpf.setEnabled(habilita);
        jtfEmail.setEnabled(habilita);
        jtfSite.setEnabled(habilita);
        jtfOrgaoRg.setEnabled(habilita);

        jcbEstadoCivil.setEnabled(habilita);
        jcbSexo.setEnabled(habilita);
//        jftfDataEmissaoRg.setEnabled(habilita);
        jtfPesquisa.setEnabled(habilita);

        jtfCodigo.setEnabled(habilita);
        jftfDataCadastro.setEnabled(habilita);

        jcbSituacao.setEnabled(habilita);

        jftfDt_EmissaoRG.setEnabled(habilita);

        jtfSite.setEnabled(habilita);
        jtfInscricaoEstadual.setEnabled(habilita);
        jtfCNPJ.setEnabled(habilita);
        jtfInscricaoMunicipal.setEnabled(habilita);
        jtfRazaoSocial.setEnabled(habilita);
    }

    public void salvar() {
        Fornecedor forn = new Fornecedor();
        
        if (jrbFisica.isSelected()) {           
            pf.setTipo("F");
            pf.setFornecedor("S");
            if (!jtfNome.getText().equals("")) {
                pf.setNome(jtfNome.getText());
            } else {
                JOptionPane.showMessageDialog(null, "O campo Nome não pode ser vazio!!!");
                jTabbedPane1.setSelectedIndex(0);
                jtfNome.requestFocus();
            }
            if (!jtfEmail.getText().equals("")) {
                pf.setEmail(jtfEmail.getText());
            } else {
                pf.setEmail("");
            }
            if (!jtfSite.getText().equals("")) {
                pf.setSite(jtfSite.getText());
            } else {
                pf.setSite("");
            }
            if (!jtfCpf.getText().equals("")) {
                pf.setCpf(jtfCpf.getText());
            } else {
                pf.setCpf("");
            }
            if (jcbSexo.getSelectedIndex() == 0) {
                pf.setSexo("M");
            } else {
                pf.setSexo("F");
            }
            if (!jtfRG.getText().equals("")) {
                pf.setRg(jtfRG.getText());
            } else {
                pf.setRg("");
            }
            if (!jtfOrgaoRg.getText().equals("")) {
                pf.setOrgao_rg(jtfOrgaoRg.getText());
            } else {
                pf.setOrgao_rg("");
            }
            switch (jcbEstadoCivil.getSelectedIndex()) {
                case 0: {
                    pf.setEstado_civil(EstadoCivil.SOLTEIRO);
                    break;
                }
                case 1: {
                    pf.setEstado_civil(EstadoCivil.CASADO);
                    break;
                }
                case 2: {
                    pf.setEstado_civil(EstadoCivil.UNIAO_ESTAVEL);
                    break;
                }
                case 3: {
                    pf.setEstado_civil(EstadoCivil.AMASIADO);
                }
                case 4: {
                    pf.setEstado_civil(EstadoCivil.VIUVO);
                }
            }
            
            if (jftfDt_EmissaoRG.getText() == null || jftfDt_EmissaoRG.getText().equals("")) {
                jftfDt_EmissaoRG.setText(null);
            } else {
       //         SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
                try {
                    pf.setData_emissao((sdf.parse(jftfDt_EmissaoRG.getText())));
                } catch (ParseException ex) {
                    JOptionPane.showMessageDialog(null, "Data Inválida ");
                }
            }
      //      SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
            try {
                forn.setDataCadastro(new Date(sdf.parse(jftfDataCadastro.getText()).getTime()));
            } catch (ParseException ex) {
                JOptionPane.showConfirmDialog(null, "Data inválida");
            }
            
            forn.setStatus(jcbSituacao.getSelectedItem().toString());
            forn.setPessoa(pf); 
            
        } else //fim if PessoaFisica            
       if (jrbJuridico.isSelected()) {
            pj.setTipo("J");
            pj.setFornecedor("S");
            if (!jtfNome.getText().equals("")) {
                pj.setNome(jtfNome.getText());
            } else {
                JOptionPane.showMessageDialog(null, "O campo Nome não pode ser vazio!!!");
                jTabbedPane1.setSelectedIndex(0);
                jtfNome.requestFocus();
            }
            if (!jtfEmail.getText().equals("")) {
                pj.setEmail(jtfEmail.getText());
            } else {
                pj.setEmail(null);
            }
            if (!jtfSite.getText().equals("")) {
                pj.setSite(jtfSite.getText());
            } else {
                pj.setSite(null);
            }
            if (!jtfRazaoSocial.getText().equals("")) {
                pj.setRazao_social(jtfRazaoSocial.getText());

            }
            if (jtfCNPJ.getText().equals("  .   .   /    -  ")) {
                JOptionPane.showMessageDialog(null, "O campo CNPJ não pode ser nullo ou vazio !!!");
                jtfCNPJ.requestFocus();                
                return;
            } else {
                cnpj = jtfCNPJ.getText();
                cnpj = cnpj.replace(".", "");
                cnpj = cnpj.replace("/", "");
                cnpj = cnpj.replace("-", "");
                if (ValidaCNP.isValidCNPJ(cnpj) == false) {
                    JOptionPane.showMessageDialog(null, "CNPJ INVÁLIDO 1!!!");
                    jtfCNPJ.requestFocus();
                    return;
                }
                pj.setCnpj(cnpj);
            }

            if (!jtfInscricaoEstadual.getText().equals("")) {
                pj.setInscrecao_estadual(jtfInscricaoEstadual.getText());
            } else {
                pj.setInscrecao_estadual(null);
            }
            if (!jtfInscricaoMunicipal.getText().equals("")) {
                pj.setInscrecao_municipal(jtfInscricaoMunicipal.getText());
            } else {
                pj.setInscrecao_municipal(null);
            }
   //         SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
            try {
                forn.setDataCadastro(new Date(sdf.parse(jftfDataCadastro.getText()).getTime()));
            } catch (ParseException ex) {
                JOptionPane.showMessageDialog(null, "Data inválida.");
            }
            forn.setStatus(jcbSituacao.getSelectedItem().toString());
            forn.setPessoa(pj); 
        }
        //Adicionando Endereco 
        List<PessoaEndereco> listaEndereco = new ArrayList<PessoaEndereco>();
        if (!jTableEndereco.getSize().equals(0)) {            
            for (int i = 0; i < jTableEndereco.getRowCount(); i++) {
                PessoaEndereco pEndereco = new PessoaEndereco();
                pEndereco.setLogradouro((String) jTableEndereco.getValueAt(i, 0));
                pEndereco.setNumero((String) jTableEndereco.getValueAt(i, 1));
                pEndereco.setBairro((String) jTableEndereco.getValueAt(i, 2));
                pEndereco.setCidade((String) jTableEndereco.getValueAt(i, 3));
                pEndereco.setUf((String) jTableEndereco.getValueAt(i, 4));
                pEndereco.setCep((String) jTableEndereco.getValueAt(i, 5));
                Boolean principal = (Boolean) (jTableEndereco.getValueAt(i, 6));
                Boolean correspondencia = (Boolean) (jTableEndereco.getValueAt(i, 7));
                Boolean entrega = (Boolean) (jTableEndereco.getValueAt(i, 8));
                Boolean cobranca = (Boolean) (jTableEndereco.getValueAt(i, 9));
                if (operacao == "alterar"){
                        pEndereco.setId((Long) jTableEndereco.getValueAt(i, 10));
                        if (pEndereco.getId() == 0L)
                            pEndereco.setId(null);                       
                    }else 
                        pEndereco.setId(null);
                
                //pEndereco.setId((Long) jTableEndereco.getValueAt(i, 10));
                listaEndereco.add(new PessoaEndereco(pEndereco.getId(), pEndereco.getLogradouro(), pEndereco.getNumero(), null, pEndereco.getBairro(), pEndereco.getCidade(),
                       pEndereco.getCep(), pEndereco.getUf(), entrega, cobranca, principal, correspondencia));
            }
            
           
        } else {
            listaEndereco = null;            
        }
        List<PessoaContato> listaContato = new ArrayList<PessoaContato>();
        if (!jTableContato.getSize().equals(0)) {
            for (int i = 0; i < jTableContato.getRowCount(); i++) {
                PessoaContato pContato = new PessoaContato();
                pContato.setDescricao((String) jTableContato.getValueAt(i, 0));
                pContato.setDdd((String) jTableContato.getValueAt(i, 1));
                pContato.setNumero((String) jTableContato.getValueAt(i, 2));               
              if (operacao == "alterar"){
                        pContato.setId((Long) jTableContato.getValueAt(i, 3));
                        if (pContato.getId() == 0L)
                            pContato.setId(null);                       
                    }else
                        pContato.setId(null);
                   
                    
                // System.out.println("Lista de Contato :" + pContato.getDescricao() + ", " + pContato.getDdd() + ", " + pContato.getNumero());
                listaContato.add(new PessoaContato(pContato.getId(), pContato.getDescricao(), pContato.getDdd(), pContato.getNumero()));
            }
            
            
        } else {
            listaContato = null;            
        }
        if (jrbFisica.isSelected()) {
            pf.setListaEndereco(listaEndereco);
            pf.setListaContato(listaContato);
            if (operacao == "alterar"){                 
                pf.setId(Long.parseLong(jtfCodigo.getText()));                                
                forn.setId(pf.getForn().getId());                
                daoFornecedor.alterarPessoaFisica(pf, forn);
                JOptionPane.showMessageDialog(null, "Fornecedor Alterado com Sucesso !!!");
            }else            
                if (operacao == "salvar") {                         
                   daoFornecedor.salvarPessoaFisica(pf, forn);
                   JOptionPane.showMessageDialog(null, "Fornecedor salvo com sucesso !!!");
                  // pf = new PessoaFisica();
                } 
        } else //Fim jrbFisica 
            if (jrbJuridico.isSelected()) {
                  pj.setListaEndereco(listaEndereco);
                  pj.setListaContato(listaContato);                  
                  if (operacao == "alterar"){ 
                      pj.setId(Long.parseLong(jtfCodigo.getText()));
                      forn.setId(pj.getForn().getId());
                      daoFornecedor.alterarPessoaJuridica(pj, forn);
                      JOptionPane.showMessageDialog(null, "Fornecedor Alterado com Sucesso !!!");
                      
                  }else            
                     if (operacao == "salvar") {                        
                        daoFornecedor.salvarPessoaJuridica(pj, forn);
                        JOptionPane.showMessageDialog(null, "Fornecedor salvo com sucesso !!!");
                    //    pj = new PessoaJuridica();
                      } 
        }

        jbtCancelarActionPerformed(null);
    }

    private void carregaTablePessoa() {
        DefaultTableModel amodel = (DefaultTableModel) jTable1.getModel();
        amodel.setNumRows(0);       
        daoFornecedor = new FornecedorDAO();
        listaFornecedor = daoFornecedor.listaFornecedor();//daoCli.getClienteFisico();
        listaPessoaFisica = daoFornecedor.getPessoaFisica();
        listaPessoaJuridica = daoFornecedor.getPessoaJuridica();
        for (Pessoa p : listaFornecedor) {            
            if (p.getTipo().equals("F")){
               for (PessoaFisica pf : listaPessoaFisica){
                   if (p.getId() == pf.getId()){
                       amodel.addRow(new Object[]{pf.getId(), pf.getNome(), pf.getCpf(), pf.getRg()});
                       break;
                   }
               }               
            }else
                if (p.getTipo().equals("J")){
                   for (PessoaJuridica pj : listaPessoaJuridica){
                       if (p.getId() == pj.getId()){
                           amodel.addRow(new Object[]{pj.getId(), pj.getNome(), pj.getCnpj(), pj.getInscrecao_estadual()}); 
                           break;
                       }
                   }
                }
        }

    }
    private void carregaTablePessoaJuridica() {

        String[] tableColumsName = {"CÓDIGO", "NOME FANTASIA", "CNPJ", "RAZÃO SOCIAL"};
        DefaultTableModel amodel = (DefaultTableModel) jTable1.getModel();
        amodel.setColumnIdentifiers(tableColumsName);
        // amodel..setPreferredWidth(95);
        //Definindo Largura da Coluna da Tabela de Pesquisa.
        jTable1.getColumnModel().getColumn(0).setPreferredWidth(25);
        jTable1.getColumnModel().getColumn(1).setPreferredWidth(200);

     //   DefaultTableModel amodel = (DefaultTableModel) jTable1.getModel();
        amodel.setNumRows(0);
        ClienteDAO daoCli = new ClienteDAO();

     //   listaClienteJuridico = null;

     //   listaClienteJuridico = daoCli.getClienteJuridica();
    //    for (PessoaJuridica cli : listaClienteJuridico) {

     //       amodel.addRow(new Object[]{cli.getId(), cli.getNome(),cli.getCnpj(), cli.getRazao_social()});

      //  }
    }

    
    
    
    public void limpar() {
        jtfCodigo.setText("");
        jtfNome.setText("");
        jftfDataCadastro.setText("");
        //      jcbTipoCliente.setSelectedIndex(-1);
        jtfEmail.setText("");
        jtfSite.setText("");
        jtfCpf.setText("");
        //  jtfPesquisaCliente.setText("");
        jtfRG.setText("");
        jtfCpf.setText("");
        jtfOrgaoRg.setText("");
        jftfDt_EmissaoRG.setText("");
//        jftfDataEmissaoRg.setText("");
        jcbEstadoCivil.setSelectedIndex(0);
        jcbSexo.setSelectedIndex(0);
        jtfInscricaoEstadual.setText("");
        jtfInscricaoMunicipal.setText("");
        jtfRazaoSocial.setText("");
        

   //     jtfEndereco.setText("");
        //     jtfBairro.setText("");
        //     jtfCidade.setText("");
        //     jcbEstado.setSelectedItem(null);
        //     jtfTelefone.setText("");
        //     jtfNascimento.setText("");
        //     jtfDesde.setText("");
        //     jtfEmpresa.setText("");
        //     jtfReferencia.setText("");
        //     jtfFoneRef.setText("");
        //     
    }

    public JTextField DefinirTiposCaracteresETamanho(int tamanho, String caracteres) {
        try {
            //defino a variável que vai guardar a quantidade de caracteres
            String quantidade = "";

		//defino um método de repetição para repetir o numero de
            //vezes  do tamanho
            for (int i = 0; i < tamanho; i++) {
                // defino asterisco para aceitar qualquer coisa e crio a máscara
                quantidade = quantidade + "*";
            }
		//  **********...   de acordo com o tamanho informado
            // defino que a mascara possui essa
            //quantidade de elementos que foi informado em tamanho e
            // foi colocada com * dentro de quantidade
            javax.swing.text.MaskFormatter nome = new javax.swing.text.MaskFormatter(quantidade);

		//defino que o parâmetro caracter recebido pelo
            //método contém os caracteres válidos 
            nome.setValidCharacters(caracteres);

            //retorno a mascara que foi criada  
            return new javax.swing.JFormattedTextField(nome);
        }// fim do try
        catch (Exception e) {
            //mensagem se acontecer erro
            JOptionPane.showMessageDialog(null, "Ocorreu um erro");
            //retorno um campo de texto comum  
            return new JTextField();
        }//fim do catch
    }
    //Não estou usando
    public MaskFormatter Mascara(String Mascara){
        MaskFormatter F_Mascara = new MaskFormatter();
        try{
            F_Mascara.setMask(Mascara); //Atribui a mascara
            F_Mascara.setPlaceholderCharacter(' '); //Caracter para preencimento 
        }
        catch (Exception excecao) {
            excecao.printStackTrace();
        } 
        return F_Mascara;
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JLabel cpfLabel;
    private javax.swing.JLabel cpfLabel1;
    private javax.swing.JLabel cpfLabel2;
    private javax.swing.JLabel cpfLabel4;
    private javax.swing.JLabel cpfLabel5;
    private javax.swing.JLabel cpfLabel6;
    private javax.swing.JLabel cpfLabel7;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabelNome;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JPanel jPanelPessoaJuridica;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable1;
    public static javax.swing.JTable jTableContato;
    public static javax.swing.JTable jTableEndereco;
    private javax.swing.JButton jbtAdicionaContato;
    private javax.swing.JButton jbtAdicionarEndereco;
    private javax.swing.JButton jbtCancelar;
    private javax.swing.JButton jbtExcluir;
    private javax.swing.JButton jbtExcluirEndereco;
    private javax.swing.JButton jbtNovo;
    private javax.swing.JButton jbtSair;
    private javax.swing.JButton jbtSalvar;
    private javax.swing.JComboBox jcbEstadoCivil;
    private javax.swing.JComboBox jcbSexo;
    private javax.swing.JComboBox jcbSituacao;
    private javax.swing.JFormattedTextField jftfDataCadastro;
    private javax.swing.JFormattedTextField jftfDt_EmissaoRG;
    private javax.swing.JPanel jpanelPessoaFisi;
    private javax.swing.JPanel jpanelPessoaFisica;
    public static javax.swing.JRadioButton jrbFisica;
    public static javax.swing.JRadioButton jrbJuridico;
    private javax.swing.JTextField jtfCNPJ;
    public static javax.swing.JTextField jtfCodigo;
    private javax.swing.JTextField jtfCpf;
    private javax.swing.JTextField jtfEmail;
    private javax.swing.JTextField jtfInscricaoEstadual;
    private javax.swing.JTextField jtfInscricaoMunicipal;
    private javax.swing.JTextField jtfNome;
    private javax.swing.JTextField jtfOrgaoRg;
    public static javax.swing.JTextField jtfPesquisa;
    private javax.swing.JTextField jtfRG;
    private javax.swing.JTextField jtfRazaoSocial;
    private javax.swing.JTextField jtfSite;
    private javax.swing.JLabel orgaoRgLabel;
    private javax.swing.JLabel orgaoRgLabel1;
    private javax.swing.JLabel rgLabel;
    private converter.RowSorterToStringConverter rowSorterToStringConverter1;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables
}
