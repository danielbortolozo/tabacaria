/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package cadastroView;



import dao.CategoriaProdutoDAO;
import dao.ComplementoDAO;
import java.math.BigDecimal;
import java.text.DecimalFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;
import java.util.Objects;
import java.util.Set;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.CategoriaProduto;
import model.Complemento;




/**
 *
 * @author del
 */
public class ComplementosView extends javax.swing.JInternalFrame {

    /**
     * Creates new form BeneficiarioView
     */
    List<CategoriaProduto> listCategoria;
    CategoriaProdutoDAO categoriaDao;
    private String operacao;
    private List<Complemento> listaComplemento;
    private final ComplementoDAO complementoDAO = new ComplementoDAO();;
    SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");

    public ComplementosView() {
        initComponents();
        carregaTable();     
        carregarCombobox();
       //Limita o campo Nome com 10 caracteres.
       // jtfNome.setDocument(new FixedLengthDocument(10));     
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        rowSorterToStringConverter1 = new converter.RowSorterToStringConverter();
        jPanel1 = new javax.swing.JPanel();
        jtfPesquisa = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        jbtNovo = new javax.swing.JButton();
        jbtExcluir = new javax.swing.JButton();
        jbtCancelar = new javax.swing.JButton();
        jbtSalvar = new javax.swing.JButton();
        jbtSair = new javax.swing.JButton();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jtfCodigo = new javax.swing.JTextField();
        jLabelNome = new javax.swing.JLabel();
        jtfNome = new javax.swing.JTextField();
        jLabelNome1 = new javax.swing.JLabel();
        jtfValor = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jcbCategoria = new javax.swing.JComboBox<>();
        jbtAddCategoria = new javax.swing.JButton();
        jbtExcluirCat = new javax.swing.JButton();

        rowSorterToStringConverter1.setTable(jTable1);

        setTitle("Cadastro de Complementos");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Pesquisa Complementos"));

        jtfPesquisa.setNextFocusableComponent(jbtNovo);

        org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, jTable1, org.jdesktop.beansbinding.ELProperty.create("${rowSorter}"), jtfPesquisa, org.jdesktop.beansbinding.BeanProperty.create("text"));
        binding.setConverter(rowSorterToStringConverter1);
        bindingGroup.addBinding(binding);

        jtfPesquisa.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtfPesquisaKeyPressed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "CÓDIGO", "DESCRIÇÃO", "R$ VALOR"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jTable1.getTableHeader().setReorderingAllowed(false);
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setPreferredWidth(80);
            jTable1.getColumnModel().getColumn(1).setPreferredWidth(280);
            jTable1.getColumnModel().getColumn(2).setPreferredWidth(120);
        }

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jtfPesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, 401, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jtfPesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jbtNovo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/Add.png"))); // NOI18N
        jbtNovo.setText("Novo");
        jbtNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtNovoActionPerformed(evt);
            }
        });

        jbtExcluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/delete.png"))); // NOI18N
        jbtExcluir.setText("Excluir");
        jbtExcluir.setEnabled(false);
        jbtExcluir.setFocusCycleRoot(true);
        jbtExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtExcluirActionPerformed(evt);
            }
        });
        jbtExcluir.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jbtExcluirKeyPressed(evt);
            }
        });

        jbtCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/cancel.png"))); // NOI18N
        jbtCancelar.setText("Cancelar");
        jbtCancelar.setEnabled(false);
        jbtCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtCancelarActionPerformed(evt);
            }
        });
        jbtCancelar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jbtCancelarKeyPressed(evt);
            }
        });

        jbtSalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/save.png"))); // NOI18N
        jbtSalvar.setText("Salvar");
        jbtSalvar.setEnabled(false);
        jbtSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtSalvarActionPerformed(evt);
            }
        });
        jbtSalvar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jbtSalvarKeyPressed(evt);
            }
        });

        jbtSair.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/exit_1.png"))); // NOI18N
        jbtSair.setText("Sair");
        jbtSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtSairActionPerformed(evt);
            }
        });
        jbtSair.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jbtSairKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jbtNovo, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jbtExcluir)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jbtCancelar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jbtSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jbtSair, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jbtCancelar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jbtExcluir)
                .addComponent(jbtSair))
            .addComponent(jbtNovo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jbtSalvar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Dados do Complemento"));

        jLabel2.setText("CÓDIGO");

        jtfCodigo.setEditable(false);
        jtfCodigo.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        jtfCodigo.setEnabled(false);

        jLabelNome.setText("DESCRIÇÃO");

        jtfNome.setEnabled(false);
        jtfNome.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtfNomeFocusLost(evt);
            }
        });
        jtfNome.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtfNomeKeyTyped(evt);
            }
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtfNomeKeyPressed(evt);
            }
        });

        jLabelNome1.setText("R$ VALOR");

        jtfValor.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jtfValor.setEnabled(false);
        jtfValor.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtfValorFocusLost(evt);
            }
        });
        jtfValor.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtfValorKeyTyped(evt);
            }
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtfValorKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabelNome)
                            .addComponent(jtfCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jtfNome)
                        .addGap(23, 23, 23))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelNome1)
                            .addComponent(jtfValor, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jtfCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabelNome)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jtfNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabelNome1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jtfValor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("DADOS COMPLEMENTO", jPanel2);

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "CÓD.", "CATEGORIAS DOS COMPLEMENTOS"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable2.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jTable2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable2MouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTable2);
        if (jTable2.getColumnModel().getColumnCount() > 0) {
            jTable2.getColumnModel().getColumn(0).setPreferredWidth(50);
            jTable2.getColumnModel().getColumn(1).setPreferredWidth(340);
        }

        jbtAddCategoria.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/Create.png"))); // NOI18N
        jbtAddCategoria.setText("Add");
        jbtAddCategoria.setEnabled(false);
        jbtAddCategoria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtAddCategoriaActionPerformed(evt);
            }
        });

        jbtExcluirCat.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/delete.png"))); // NOI18N
        jbtExcluirCat.setText("Excluir");
        jbtExcluirCat.setEnabled(false);
        jbtExcluirCat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtExcluirCatActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 396, Short.MAX_VALUE)
                    .addComponent(jcbCategoria, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jbtAddCategoria, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jbtExcluirCat, javax.swing.GroupLayout.DEFAULT_SIZE, 120, Short.MAX_VALUE)))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addGap(0, 9, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jcbCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbtAddCategoria))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbtExcluirCat)))
        );

        jTabbedPane1.addTab("CATEGORIAS", jPanel4);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jTabbedPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 271, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        bindingGroup.bind();

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jtfNomeFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtfNomeFocusLost
        // TODO add your handling code here:
        jtfNome.setText(jtfNome.getText().toUpperCase());
      
      
    }//GEN-LAST:event_jtfNomeFocusLost

    private void jtfNomeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfNomeKeyPressed
        // TODO add your handling code here:
        //if ((evt.getKeyCode() == evt.VK_ENTER) ){
       
          if (evt.getKeyCode() == evt.VK_ENTER){
            if (jtfNome.getText().equals("")) {
                JOptionPane.showMessageDialog(null, "O campo Nome não pode ser vazio ou nullo!!!");
                jtfNome.requestFocus();
            } else {
                jtfValor.setEnabled(true);
                jtfValor.requestFocus();  
             
            }

        }
    }//GEN-LAST:event_jtfNomeKeyPressed

    private void jtfNomeKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfNomeKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfNomeKeyTyped

    private void jbtNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtNovoActionPerformed
        // TODO add your handling code here:
        operacao = "salvar";
        jtfPesquisa.setText("");
        jtfPesquisa.setEnabled(false);
        //        jbtCancelarActionPerformed(evt);
        //        DefaultTableModel amodel = (DefaultTableModel) jTable1.getModel();
        //        amodel.setNumRows(0);

        jbtCancelar.setEnabled(true);
        jbtNovo.setEnabled(false);
        //
        jtfNome.setEnabled(true);
        jtfNome.requestFocus();
    }//GEN-LAST:event_jbtNovoActionPerformed

    private void jbtExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtExcluirActionPerformed
        
       
            int id = Integer.parseInt(jtfCodigo.getText());
            try {
                complementoDAO.excluir(id);
                jbtCancelarActionPerformed(evt);
                JOptionPane.showMessageDialog(null, "Complemento Excluido com Sucesso !!!");
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Problemas ao Excluir Complemento. Error:" + e.getMessage());
            }
     

    }//GEN-LAST:event_jbtExcluirActionPerformed

    private void jbtCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtCancelarActionPerformed
       
            cancelar();
        
    }//GEN-LAST:event_jbtCancelarActionPerformed

    private void cancelar() {
        habilitar(false);
        limpar();
        jbtNovo.setEnabled(true);
        jbtExcluir.setEnabled(false);
        jbtSalvar.setEnabled(false);
        jbtCancelar.setEnabled(false);
        jtfPesquisa.setEnabled(true);
        jtfPesquisa.requestFocus();
        carregaTable();
        jTabbedPane1.setSelectedIndex(0);
        jbtExcluirCat.setEnabled(false);
    }

    private void jbtSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtSalvarActionPerformed
        try {
           
               salvar();
               jbtCancelarActionPerformed(evt);
           
        } catch (ParseException ex) {
            JOptionPane.showConfirmDialog(null, "Problemas ao salvar Proprietário. Error:"+ex.getMessage());
        }
    }//GEN-LAST:event_jbtSalvarActionPerformed

    private void jbtSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtSairActionPerformed
       
           sair();
           menuView.Menu.jmenuComplemento.setEnabled(true);
       
    }//GEN-LAST:event_jbtSairActionPerformed

    private void sair() {
        // TODO add your handling code here:
        
        dispose();
       
//        menuView.Menu.jMenuCorretores.setEnabled(true);
    }

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        operacao = "alterar";
        limpar();
        int id = Integer.parseInt(jTable1.getValueAt(jTable1.getSelectedRow(), 0).toString());
        
        for (Complemento b : listaComplemento){
            if (Objects.equals(id, b.getId())){
                jtfCodigo.setText(String.valueOf(b.getId()));
                jtfNome.setText(b.getDescricao());
                
                jtfValor.setText(new DecimalFormat("#,##0.00").format(b.getValor())); 
               // jtfValor.setText(String.valueOf(b.getValor()));
                
                break;                
            }
        }
        carregarTable2(id);
        
        
        
        habilitar(true);
        
        jbtNovo.setEnabled(false);
        jbtExcluir.setEnabled(true);
        jbtCancelar.setEnabled(true);
        jbtSalvar.setEnabled(true);
        
    }//GEN-LAST:event_jTable1MouseClicked

    private void jbtSairKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jbtSairKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == evt.VK_ENTER){
          String op = System.getProperty("os.name");
          if (!"Linux".equals(op))
              jbtSairActionPerformed(null);
           
        }
        
    }//GEN-LAST:event_jbtSairKeyPressed

    private void jbtSalvarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jbtSalvarKeyPressed
       if (evt.getKeyCode() == evt.VK_ENTER){
           
           try {
             
               salvar();
               jbtCancelarActionPerformed(null);
           } catch (ParseException ex) {
               Logger.getLogger(ComplementosView.class.getName()).log(Level.SEVERE, null, ex);
           }
       }
    }//GEN-LAST:event_jbtSalvarKeyPressed

    private void jbtExcluirKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jbtExcluirKeyPressed
       if (evt.getKeyCode() == evt.VK_ENTER){
           jbtExcluirActionPerformed(null);
       }
    }//GEN-LAST:event_jbtExcluirKeyPressed

    private void jbtCancelarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jbtCancelarKeyPressed
        if (evt.getKeyCode() == evt.VK_ENTER){
            cancelar();
        }
    }//GEN-LAST:event_jbtCancelarKeyPressed

    private void jtfPesquisaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfPesquisaKeyPressed
        if (evt.getKeyCode() == evt.VK_ENTER){
            if (jtfPesquisa.getText().equals(""))
                jbtSair.requestFocus();
        }
    }//GEN-LAST:event_jtfPesquisaKeyPressed

    private void jtfValorFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtfValorFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfValorFocusLost

    private void jtfValorKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfValorKeyPressed
        if (evt.getKeyCode() == evt.VK_ENTER){
            if (jtfValor.getText().equals(""))
                jtfValor.setText("0,00");
            jbtSalvar.setEnabled(true);
            jbtSalvar.requestFocus();
        }
    }//GEN-LAST:event_jtfValorKeyPressed

    private void jtfValorKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfValorKeyTyped
        String caracteres="0987654321,";
        if (!caracteres.contains(evt.getKeyChar()+"")){
           evt.consume();
        }
    }//GEN-LAST:event_jtfValorKeyTyped

    private void jbtAddCategoriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtAddCategoriaActionPerformed
         DefaultTableModel amodel = (DefaultTableModel) jTable2.getModel();
        //amodel.setNumRows(0);
        CategoriaProduto cat = new CategoriaProduto();
        cat = listCategoria.get(jcbCategoria.getSelectedIndex());
        
        amodel.addRow(new Object[]{cat.getId(), cat.getDescricao()});
        
    }//GEN-LAST:event_jbtAddCategoriaActionPerformed

    private void jTable2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable2MouseClicked
        jbtExcluirCat.setEnabled(true);
    }//GEN-LAST:event_jTable2MouseClicked

    private void jbtExcluirCatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtExcluirCatActionPerformed
        DefaultTableModel amodel = (DefaultTableModel) jTable2.getModel();
        amodel.removeRow(jTable2.getSelectedRow());
    }//GEN-LAST:event_jbtExcluirCatActionPerformed

    public void habilitar(boolean habilita) {       
        jtfNome.setEnabled(habilita);        
        jtfCodigo.setEnabled(habilita);
        jtfValor.setEnabled(habilita);
        jtfPesquisa.setEnabled(habilita);
        jbtAddCategoria.setEnabled(habilita);
        
    }
    private void carregaTable(){
        DefaultTableModel amodel = (DefaultTableModel) jTable1.getModel();
        amodel.setNumRows(0);        
        try{
           listaComplemento = null;        
           listaComplemento = complementoDAO.getLista();        
           for (Complemento b : listaComplemento){
               amodel.addRow(new Object[]{b.getId(), b.getDescricao(), b.getValor()});            
           }
        }catch (Exception ex){
             JOptionPane.showMessageDialog(null, "Problemas ao Carregar Tabela de Complementos. Error:"+ex.getMessage());
        }
    }
    public void limpar() {
       jtfCodigo.setText("");
       jtfNome.setText("");
       jtfValor.setText("");
       
       DefaultTableModel amodel = (DefaultTableModel) jTable2.getModel();
       amodel.setNumRows(0);
       
    }
    public void salvar() throws ParseException{
        Complemento b = new Complemento();
        
        if (operacao == "alterar")
            b.setId(Integer.parseInt(jtfCodigo.getText())); 
       
        b.setDescricao(jtfNome.getText());        
        String valor = null;
        valor = jtfValor.getText();
        valor = valor.replace(".", "");
        valor = valor.replace(",", ".");
        b.setValor(new BigDecimal(valor));
                    
        if (jTable2.getModel().getRowCount() > 0){
           for(int linha=0; linha<jTable2.getRowCount();linha++){
               Long idCat = (Long) jTable2.getModel().getValueAt(linha, 0);
               for (CategoriaProduto catProd : listCategoria){
                   if (idCat == catProd.getId()){
                      b.getCategoriaProduto().add(catProd);
                      break;
                   }
               }            
            }
        }  
        
        try{
           complementoDAO.salvar(b);
           if (operacao == "alterar")
               JOptionPane.showMessageDialog(null, "Complemento Alterado com Sucesso!!!");
           else
               JOptionPane.showMessageDialog(null, "Complemento Cadastrado com Sucesso!!!");
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, "Problemas ao Salvar Complemento. Error:"+e.getMessage());
        }
        
    }
    
    
    private void carregarCombobox(){
         categoriaDao = new CategoriaProdutoDAO();        
         listCategoria = new ArrayList<CategoriaProduto>();        
         listCategoria = categoriaDao.listCategoriaProduto();        
         jcbCategoria.removeAllItems();
         for (CategoriaProduto catProd : listCategoria){
             jcbCategoria.addItem(catProd.getDescricao());
         }        
    } 
     
    private void carregarTable2(int idComplemento){
        DefaultTableModel amodel = (DefaultTableModel) jTable2.getModel();
        amodel.setNumRows(0);        
        try{           
            Complemento comp = new Complemento();
            comp = complementoDAO.complementoID(idComplemento);                        
            Iterator<CategoriaProduto> itr = comp.getCategoriaProduto().iterator();            
            while (itr.hasNext()){
                      CategoriaProduto p = itr.next();                      
                      amodel.addRow(new Object[]{p.getId(), p.getDescricao()});                      
            }           
        }catch (Exception ex){
             JOptionPane.showMessageDialog(null, "Problemas ao Carregar Tabela de Categoria de Produto. Error:"+ex.getMessage());
        }
    } 
    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabelNome;
    private javax.swing.JLabel jLabelNome1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JButton jbtAddCategoria;
    private javax.swing.JButton jbtCancelar;
    private javax.swing.JButton jbtExcluir;
    private javax.swing.JButton jbtExcluirCat;
    private javax.swing.JButton jbtNovo;
    private javax.swing.JButton jbtSair;
    private javax.swing.JButton jbtSalvar;
    private javax.swing.JComboBox<String> jcbCategoria;
    public static javax.swing.JTextField jtfCodigo;
    private javax.swing.JTextField jtfNome;
    private javax.swing.JTextField jtfPesquisa;
    private javax.swing.JTextField jtfValor;
    private converter.RowSorterToStringConverter rowSorterToStringConverter1;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables
}
