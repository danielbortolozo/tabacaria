/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package cadastroView;

import dao.CategoriaProdutoDAO;
import dao.MarcaProdutoDAO;
import dao.ProdutoDAO;
import dao.UnidadeProdutoDAO;
import java.text.DecimalFormat;
import java.util.ArrayList;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
//import menuView.MenuPrincipal;
//import menuView.Principal;
import model.CategoriaProduto;
import model.MarcaProduto;
import model.Produto;
import model.UnidadeProduto;
import util.RemoverAcentosString;

/**
 *
 * @author daniel
 */
public class ProdutoView extends javax.swing.JFrame {

    /**
     * Creates new form ProdutoView
     */
    String operacao;
    List<Produto> listaProduto;
    List<CategoriaProduto> listCategoria;
    List<MarcaProduto> listMarca;
    List<UnidadeProduto> listUnidade;
    CategoriaProdutoDAO categoriaDao;
    MarcaProdutoDAO marcaDAO;
    UnidadeProdutoDAO unidadeDAO;
    public ProdutoView() {
        initComponents();
        jcbCategoria.setSelectedIndex(-1);
        jcbMarca.setSelectedIndex(-1);
        jcbUnidade.setSelectedIndex(-1);
        jlPreco.setVisible(true);
        jlValorVenda.setVisible(false);
       
        carregaTable();
        carregarCombobox();
        jlPreco.setVisible(false);
        jPanel6.setVisible(false);
        jPanel7.setVisible(false);
       
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        rowSorterToStringConverter1 = new converter.RowSorterToStringConverter();
        jPanel1 = new javax.swing.JPanel();
        jtfPesquisa = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jtfCodigo = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jtfDescricao = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jtfCodBarras = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jcbCategoria = new javax.swing.JComboBox();
        jLabel5 = new javax.swing.JLabel();
        jcbMarca = new javax.swing.JComboBox();
        jLabel6 = new javax.swing.JLabel();
        jcbUnidade = new javax.swing.JComboBox();
        jLabel9 = new javax.swing.JLabel();
        jtfCodInterno = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jtfPrateleira = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jcbStatus = new javax.swing.JComboBox();
        jLabel20 = new javax.swing.JLabel();
        jtfPeso = new javax.swing.JTextField();
        jPanel5 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jtfEstoque = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jcbControlaEstoque = new javax.swing.JCheckBox();
        jtfEstoqueMinimo = new javax.swing.JTextField();
        jPanel6 = new javax.swing.JPanel();
        jlValorVenda = new javax.swing.JLabel();
        jlPreco = new javax.swing.JLabel();
        jtfTamanho = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        jlPreco1 = new javax.swing.JLabel();
        jlValorAtacado = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        labelValorVenda = new javax.swing.JLabel();
        jtfValorVenda = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jtfValorCompra = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jtfPorcentagem = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jtfPorcentagemAtacado = new javax.swing.JTextField();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jtfValorAtacado = new javax.swing.JTextField();
        labelValorVenda1 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jbtNovo = new javax.swing.JButton();
        jbtExcluir = new javax.swing.JButton();
        jbtCancelar = new javax.swing.JButton();
        jbtSalvar = new javax.swing.JButton();
        jbtSair = new javax.swing.JButton();

        rowSorterToStringConverter1.setTable(jTable1);

        setTitle("CADASTRO DE PRODUTOS");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Pesquisa Produto"));

        jtfPesquisa.setNextFocusableComponent(jbtNovo);

        org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, jTable1, org.jdesktop.beansbinding.ELProperty.create("${rowSorter}"), jtfPesquisa, org.jdesktop.beansbinding.BeanProperty.create("text"));
        binding.setConverter(rowSorterToStringConverter1);
        bindingGroup.addBinding(binding);

        jtfPesquisa.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtfPesquisaKeyPressed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "CÓDIGO", "DESCRIÇÃO", "MARCA", "UNIDADE", "ESTOQUE", "R$ VALOR", "CATEGORIA", "COD.BARRAS", "COD.INTERNO", "PRATELEIRA"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Long.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Float.class, java.lang.Float.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jTable1.getTableHeader().setReorderingAllowed(false);
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setPreferredWidth(100);
            jTable1.getColumnModel().getColumn(1).setPreferredWidth(280);
            jTable1.getColumnModel().getColumn(2).setPreferredWidth(150);
            jTable1.getColumnModel().getColumn(3).setPreferredWidth(70);
            jTable1.getColumnModel().getColumn(4).setPreferredWidth(70);
            jTable1.getColumnModel().getColumn(5).setPreferredWidth(120);
            jTable1.getColumnModel().getColumn(6).setPreferredWidth(0);
            jTable1.getColumnModel().getColumn(7).setPreferredWidth(0);
            jTable1.getColumnModel().getColumn(8).setPreferredWidth(0);
            jTable1.getColumnModel().getColumn(9).setPreferredWidth(0);
        }

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jtfPesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, 419, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jScrollPane2)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jtfPesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 115, Short.MAX_VALUE))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel1.setText("CÓDIGO");

        jtfCodigo.setEditable(false);
        jtfCodigo.setEnabled(false);
        jtfCodigo.setFocusable(false);

        jLabel2.setText("DESCRIÇÃO");

        jtfDescricao.setEnabled(false);
        jtfDescricao.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtfDescricaoFocusLost(evt);
            }
        });
        jtfDescricao.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtfDescricaoKeyPressed(evt);
            }
        });

        jLabel3.setText("CÓD. BARRAS");

        jtfCodBarras.setEnabled(false);
        jtfCodBarras.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtfCodBarrasKeyPressed(evt);
            }
        });

        jLabel4.setText("CATEGORIA");

        jcbCategoria.setEnabled(false);
        jcbCategoria.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jcbCategoriaKeyPressed(evt);
            }
        });

        jLabel5.setText("MARCA");

        jcbMarca.setEnabled(false);
        jcbMarca.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jcbMarcaKeyPressed(evt);
            }
        });

        jLabel6.setText("UNIDADE");

        jcbUnidade.setEnabled(false);
        jcbUnidade.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jcbUnidadeKeyPressed(evt);
            }
        });

        jLabel9.setText("CÓD. INTERNO");

        jtfCodInterno.setEnabled(false);
        jtfCodInterno.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtfCodInternoKeyPressed(evt);
            }
        });

        jLabel10.setText("PRATELEIRA");

        jtfPrateleira.setEnabled(false);
        jtfPrateleira.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtfPrateleiraFocusLost(evt);
            }
        });
        jtfPrateleira.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtfPrateleiraKeyPressed(evt);
            }
        });

        jLabel12.setText("STATUS");

        jcbStatus.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "ATIVO", "INATIVO" }));
        jcbStatus.setEnabled(false);
        jcbStatus.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jcbStatusKeyPressed(evt);
            }
        });

        jLabel20.setText("PESO");

        jtfPeso.setEnabled(false);
        jtfPeso.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtfPesoKeyPressed(evt);
            }
        });

        jPanel5.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel7.setText("ESTOQUE MÍNIMO");

        jtfEstoque.setBackground(new java.awt.Color(132, 237, 218));
        jtfEstoque.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jtfEstoque.setEnabled(false);
        jtfEstoque.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtfEstoqueKeyTyped(evt);
            }
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtfEstoqueKeyPressed(evt);
            }
        });

        jLabel8.setText("ESTOQUE");

        jcbControlaEstoque.setText("Estoque Controlado");
        jcbControlaEstoque.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbControlaEstoqueActionPerformed(evt);
            }
        });
        jcbControlaEstoque.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jcbControlaEstoqueKeyPressed(evt);
            }
        });

        jtfEstoqueMinimo.setBackground(new java.awt.Color(250, 158, 141));
        jtfEstoqueMinimo.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jtfEstoqueMinimo.setEnabled(false);
        jtfEstoqueMinimo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtfEstoqueMinimoKeyTyped(evt);
            }
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtfEstoqueMinimoKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jcbControlaEstoque)
                        .addContainerGap(164, Short.MAX_VALUE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addComponent(jtfEstoqueMinimo, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jtfEstoque, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8))
                        .addGap(20, 20, 20))))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(jcbControlaEstoque)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtfEstoqueMinimo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtfEstoque, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(15, Short.MAX_VALUE))
        );

        jPanel6.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jlValorVenda.setFont(new java.awt.Font("Ubuntu", 1, 36)); // NOI18N
        jlValorVenda.setForeground(new java.awt.Color(14, 116, 175));
        jlValorVenda.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlValorVenda.setText("PREÇO:");
        jlValorVenda.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jlPreco.setFont(new java.awt.Font("Ubuntu", 1, 18)); // NOI18N
        jlPreco.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlPreco.setText("R$ PREÇO VAREJO");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jlValorVenda, javax.swing.GroupLayout.DEFAULT_SIZE, 247, Short.MAX_VALUE)
            .addComponent(jlPreco, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addComponent(jlPreco)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jlValorVenda)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jtfTamanho.setEnabled(false);
        jtfTamanho.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtfTamanhoFocusLost(evt);
            }
        });
        jtfTamanho.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtfTamanhoKeyPressed(evt);
            }
        });

        jLabel21.setText("TAMANHO");

        jPanel7.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jlPreco1.setFont(new java.awt.Font("Ubuntu", 1, 18)); // NOI18N
        jlPreco1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlPreco1.setText("R$ PREÇO ATACADO");

        jlValorAtacado.setFont(new java.awt.Font("Ubuntu", 1, 36)); // NOI18N
        jlValorAtacado.setForeground(new java.awt.Color(14, 116, 175));
        jlValorAtacado.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlValorAtacado.setText("PREÇO:");
        jlValorAtacado.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jlPreco1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jlValorAtacado, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addComponent(jlPreco1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jlValorAtacado)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(2, 2, 2)
                        .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(40, 40, 40))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel9)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(216, 216, 216)
                                .addComponent(jLabel6)
                                .addGap(50, 50, 50)
                                .addComponent(jLabel10))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(475, 475, 475)
                                .addComponent(jtfPeso, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(jtfCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jtfDescricao, javax.swing.GroupLayout.PREFERRED_SIZE, 436, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel2))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jcbStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel12)))))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addComponent(jtfCodInterno, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jtfCodBarras, javax.swing.GroupLayout.PREFERRED_SIZE, 330, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jcbMarca, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(jPanel3Layout.createSequentialGroup()
                                                .addGap(216, 216, 216)
                                                .addComponent(jcbUnidade, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGap(18, 18, 18)
                                        .addComponent(jtfPrateleira, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jLabel5))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addGap(12, 12, 12)
                                        .addComponent(jLabel20)
                                        .addGap(81, 81, 81)
                                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jtfTamanho)
                                            .addGroup(jPanel3Layout.createSequentialGroup()
                                                .addGap(9, 9, 9)
                                                .addComponent(jLabel21)
                                                .addGap(0, 0, Short.MAX_VALUE))))
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel4)
                                            .addComponent(jcbCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, 265, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(0, 0, Short.MAX_VALUE)))))
                        .addGap(162, 162, 162))))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel12))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtfDescricao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtfCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jcbStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtfCodBarras, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtfCodInterno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jcbCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6)
                    .addComponent(jLabel10)
                    .addComponent(jLabel20)
                    .addComponent(jLabel21))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jcbMarca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jcbUnidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtfPrateleira, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtfPeso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtfTamanho, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(42, 42, 42))
        );

        jTabbedPane1.addTab("DADOS DO PRODUTO", jPanel3);

        labelValorVenda.setText("PREÇO DE VENDA VAREJO");

        jtfValorVenda.setBackground(new java.awt.Color(242, 243, 167));
        jtfValorVenda.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jtfValorVenda.setEnabled(false);
        jtfValorVenda.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtfValorVendaKeyTyped(evt);
            }
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtfValorVendaKeyPressed(evt);
            }
        });

        jLabel15.setText("PREÇO DE CUSTO");

        jLabel16.setText("R$");

        jtfValorCompra.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jtfValorCompra.setEnabled(false);
        jtfValorCompra.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtfValorCompraKeyTyped(evt);
            }
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtfValorCompraKeyPressed(evt);
            }
        });

        jLabel17.setText("R$");

        jLabel18.setText("PORC. VAREJO");

        jtfPorcentagem.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jtfPorcentagem.setEnabled(false);
        jtfPorcentagem.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtfPorcentagemKeyTyped(evt);
            }
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtfPorcentagemKeyPressed(evt);
            }
        });

        jLabel19.setText("%");

        jLabel22.setText("PORC. ATACADO");

        jtfPorcentagemAtacado.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jtfPorcentagemAtacado.setEnabled(false);
        jtfPorcentagemAtacado.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtfPorcentagemAtacadoKeyTyped(evt);
            }
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtfPorcentagemAtacadoKeyPressed(evt);
            }
        });

        jLabel23.setText("%");

        jLabel24.setText("R$");

        jtfValorAtacado.setBackground(new java.awt.Color(242, 243, 167));
        jtfValorAtacado.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jtfValorAtacado.setEnabled(false);
        jtfValorAtacado.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtfValorAtacadoKeyTyped(evt);
            }
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtfValorAtacadoKeyPressed(evt);
            }
        });

        labelValorVenda1.setText("PREÇO DE VENDA ATACADO");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel16)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jtfPorcentagem, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel19)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel17))
                            .addComponent(jLabel18))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(labelValorVenda, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jtfValorVenda, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jtfValorCompra))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jtfPorcentagemAtacado, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel23)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel24))
                            .addComponent(jLabel22))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(labelValorVenda1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jtfValorAtacado, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(494, 494, 494))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jLabel15)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtfValorCompra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel16))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelValorVenda)
                    .addComponent(jLabel18))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtfValorVenda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel17)
                    .addComponent(jtfPorcentagem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel19))
                .addGap(41, 41, 41)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel22)
                    .addComponent(labelValorVenda1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtfPorcentagemAtacado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel24)
                    .addComponent(jLabel23)
                    .addComponent(jtfValorAtacado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(67, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("PREÇO", jPanel2);

        jPanel4.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jbtNovo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/Add.png"))); // NOI18N
        jbtNovo.setText("Novo");
        jbtNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtNovoActionPerformed(evt);
            }
        });
        jbtNovo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jbtNovoKeyPressed(evt);
            }
        });

        jbtExcluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/delete.png"))); // NOI18N
        jbtExcluir.setText("Excluir");
        jbtExcluir.setEnabled(false);
        jbtExcluir.setFocusCycleRoot(true);
        jbtExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtExcluirActionPerformed(evt);
            }
        });
        jbtExcluir.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jbtExcluirKeyPressed(evt);
            }
        });

        jbtCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/cancel.png"))); // NOI18N
        jbtCancelar.setText("Cancelar");
        jbtCancelar.setEnabled(false);
        jbtCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtCancelarActionPerformed(evt);
            }
        });
        jbtCancelar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jbtCancelarKeyPressed(evt);
            }
        });

        jbtSalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/save.png"))); // NOI18N
        jbtSalvar.setText("Salvar");
        jbtSalvar.setEnabled(false);
        jbtSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtSalvarActionPerformed(evt);
            }
        });
        jbtSalvar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jbtSalvarKeyPressed(evt);
            }
        });

        jbtSair.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/exit_1.png"))); // NOI18N
        jbtSair.setText("Sair");
        jbtSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtSairActionPerformed(evt);
            }
        });
        jbtSair.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jbtSairKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jbtNovo, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jbtCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jbtExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jbtSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jbtSair, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jbtNovo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jbtCancelar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jbtExcluir, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jbtSalvar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jbtSair))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 885, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 334, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        bindingGroup.bind();

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbtNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtNovoActionPerformed
           novo();
           
    }//GEN-LAST:event_jbtNovoActionPerformed
    private void novo(){
         operacao = "salvar";
         
         carregarCombobox();
         DefaultTableModel amodel = (DefaultTableModel) jTable1.getModel();
         amodel.setNumRows(0);
         //jtfValorVenda.setEnabled(true);
         jtfValorVenda.setText(String.valueOf(0.0));
        // jtfEstoque.setEnabled(true);
         jtfEstoque.setText(String.valueOf(0));
         jcbStatus.setEnabled(true);
         jcbStatus.setSelectedIndex(0);
         
         jtfDescricao.setEnabled(true);
         jbtCancelar.setEnabled(true);
         jbtNovo.setEnabled(false);
         jtfPesquisa.setEnabled(false);
        // jlPreco.setVisible(true);
         jtfDescricao.requestFocus();

    }
    private void carregarCombobox(){
         categoriaDao = new CategoriaProdutoDAO();
         unidadeDAO = new UnidadeProdutoDAO();
         marcaDAO = new MarcaProdutoDAO();
         listCategoria = new ArrayList<CategoriaProduto>();
         listUnidade = new ArrayList<UnidadeProduto>();
         listMarca = new ArrayList<MarcaProduto>();
         
         
         listCategoria = categoriaDao.listCategoriaProduto();
         listUnidade = unidadeDAO.listUnidadeProduto();
         listMarca = marcaDAO.getMarca();
         
         jcbCategoria.removeAllItems();
         for (CategoriaProduto catProd : listCategoria){
             jcbCategoria.addItem(catProd.getDescricao());
         }
         jcbMarca.removeAllItems();
         for(MarcaProduto marcaProd : listMarca){
             jcbMarca.addItem(marcaProd.getDescricao());
         }
         jcbUnidade.removeAllItems();
         for (UnidadeProduto unidadeProd : listUnidade){
             jcbUnidade.addItem(unidadeProd.getSigla());
             
         }
         jcbCategoria.setSelectedIndex(-1);
         jcbMarca.setSelectedIndex(-1);
         jcbUnidade.setSelectedIndex(-1);
    } 
    private void jbtExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtExcluirActionPerformed
        if (javax.swing.JOptionPane.showConfirmDialog(null, "Deseja Realmente Excluir este Produto?", "ATENÇÂO ", javax.swing.JOptionPane.YES_NO_OPTION) == 0) {

            ProdutoDAO produtoDAO = new ProdutoDAO();
            try{
            produtoDAO.excluir(Long.parseLong(jtfCodigo.getText()));
            JOptionPane.showMessageDialog(null, "Produto Excluído com Sucesso !!!");                    
            jbtCancelarActionPerformed(evt);
            }catch (Exception e){
                JOptionPane.showMessageDialog(null, "Este Produto não pode ser Excluído. Problemas com chaves Estrangeiras. "+e.getMessage());
            }
        }

    }//GEN-LAST:event_jbtExcluirActionPerformed

    private void jbtCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtCancelarActionPerformed
        cancelar();
        
    }//GEN-LAST:event_jbtCancelarActionPerformed

    private void cancelar(){
        jTabbedPane1.setSelectedIndex(0); 
        habilitar(false);
        carregaTable();
        limpar();
        jbtNovo.setEnabled(true);
        jtfPesquisa.setEnabled(true);           
        jtfPesquisa.requestFocus();
    }
    private void jbtSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtSalvarActionPerformed
       
        
        if (jcbCategoria.getSelectedIndex() < 0){
            JOptionPane.showMessageDialog(null, "Selecione uma Categoria para o Produto");
            jTabbedPane1.setSelectedIndex(0); 
            jcbCategoria.requestFocus();
            return;
        }
        if (jcbMarca.getSelectedIndex() < 0){
            JOptionPane.showMessageDialog(null, "Selecione uma Marca para o Produto");
            jTabbedPane1.setSelectedIndex(0); 
            jcbMarca.requestFocus();
            return;
        }
        if (jcbUnidade.getSelectedIndex() < 0){
            JOptionPane.showMessageDialog(null, "Selecione uma Unidade para o Produto");
            jTabbedPane1.setSelectedIndex(0); 
            jcbUnidade.requestFocus();
            return;
        }
        
        salvar(); 
        
    }//GEN-LAST:event_jbtSalvarActionPerformed
    private void salvar(){
        if (jtfDescricao.getText().equals("")){
            JOptionPane.showMessageDialog(null, "Digite a Descrição do Produto!!! ");
            jtfDescricao.requestFocus();
            return;
        }
        if (jtfEstoqueMinimo.getText().equals("")){
            jtfEstoqueMinimo.setText(String.valueOf(1));
        }
        
        ProdutoDAO produtoDAO = new ProdutoDAO();
        if (operacao == "salvar"){
           try{              
              produtoDAO.salvar(carregaObjeto());
              JOptionPane.showMessageDialog(null, "Produto gravado com Sucesso !!!");
              jbtCancelarActionPerformed(null);
           }catch (Exception ex){
               JOptionPane.showMessageDialog(null, "Problemas ao Salvar Protudo :"+ex.getMessage());
               ex.printStackTrace();
           }
        }else
            if (operacao == "alterar"){
               try{ 
               produtoDAO.alterar(carregaObjeto());
               JOptionPane.showMessageDialog(null, "Produto Alterado com Sucesso !!!");
               jbtCancelarActionPerformed(null);
               }catch (Exception ex){
                   JOptionPane.showMessageDialog(null, "Problemas ao Alterar Produto :"+ex.getMessage());
                   ex.printStackTrace();
               }
            }
        
      
    }
    
    private void jbtSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtSairActionPerformed
        // TODO add your handling code here:
        dispose();
        menuView.Menu.produtoView = null;
      //  menuView.Menu.jmenuProduto.setEnabled(true);
      
        
  

    }//GEN-LAST:event_jbtSairActionPerformed

    private void jtfDescricaoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfDescricaoKeyPressed
        if (evt.getKeyCode() == evt.VK_ENTER){ 
            if (jtfDescricao.getText().equals(""))
                JOptionPane.showMessageDialog(null, "O campo Descrição não pode ser nullo ou vazio!!!");
            jtfCodInterno.setEnabled(true);
            jtfCodInterno.requestFocus();
        }
    }//GEN-LAST:event_jtfDescricaoKeyPressed

    private void jtfCodBarrasKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfCodBarrasKeyPressed
        if (evt.getKeyCode() == evt.VK_ENTER){                           
            jcbCategoria.setEnabled(true);
            jcbCategoria.requestFocus();
        }
    }//GEN-LAST:event_jtfCodBarrasKeyPressed

    private void jcbCategoriaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jcbCategoriaKeyPressed
        if (evt.getKeyCode() == evt.VK_ENTER){
            jcbMarca.setEnabled(true);
            jcbMarca.requestFocus();                   
        }
    }//GEN-LAST:event_jcbCategoriaKeyPressed

    private void jcbMarcaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jcbMarcaKeyPressed
        if (evt.getKeyCode() == evt.VK_ENTER){
            jcbUnidade.setEnabled(true);
            jcbUnidade.requestFocus();
        }
    }//GEN-LAST:event_jcbMarcaKeyPressed

    private void jcbUnidadeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jcbUnidadeKeyPressed
        if (evt.getKeyCode() == evt.VK_ENTER){
            jtfPrateleira.setEnabled(true);
            jtfPrateleira.requestFocus();
        }
    }//GEN-LAST:event_jcbUnidadeKeyPressed

    private void jtfValorVendaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfValorVendaKeyPressed

        float vlVenda = 0, porcentagem = 0, vlUnit = 0;
        if (evt.getKeyCode() == evt.VK_ENTER){
            if (jtfValorVenda.getText().equals("") || jtfValorVenda.getText().equals("0,000") || jtfValorVenda.getText().equals("0.00")){
                jtfValorVenda.setText("0,000");
            }else{                    
                 String venda = jtfValorVenda.getText();
                 venda = venda.replace(".", "");
                 venda = venda.replace(",", ".");                       
                 vlVenda = Float.parseFloat(venda);                   
                 String unit = jtfValorCompra.getText();
                 unit = unit.replace(".", "");
                 unit = unit.replace(",", ".");                                              
                 vlUnit = Float.parseFloat(unit);  
                 
                 
                 if (vlUnit == 0.0)
                     porcentagem = 100;
                 else
                     porcentagem = ((vlVenda - vlUnit)/vlUnit * 100);                     
                 jtfPorcentagem.setText(new DecimalFormat("#,##0.0").format(porcentagem));
             }
              jtfPorcentagemAtacado.setEnabled(true);
              jtfPorcentagemAtacado.requestFocus();
              
        }            
 
    }//GEN-LAST:event_jtfValorVendaKeyPressed

    private void jtfEstoqueMinimoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfEstoqueMinimoKeyPressed
        if (evt.getKeyCode() == evt.VK_ENTER){
          
            jtfEstoque.setEnabled(true);
            jtfEstoque.setText("");
            jtfEstoque.requestFocus();
        }
    }//GEN-LAST:event_jtfEstoqueMinimoKeyPressed

    private void jtfEstoqueKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfEstoqueKeyPressed
        if (evt.getKeyCode() == evt.VK_ENTER){
            if (jtfEstoque.getText().equals(""))
                jtfEstoque.setText("0");
            
            jTabbedPane1.setSelectedIndex(1);                          
            jtfValorCompra.setEnabled(true);
            jtfValorCompra.requestFocus(); 
        }
    }//GEN-LAST:event_jtfEstoqueKeyPressed

    private void jtfDescricaoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtfDescricaoFocusLost
        jtfDescricao.setText(RemoverAcentosString.semAcento(jtfDescricao.getText().toUpperCase()));
    }//GEN-LAST:event_jtfDescricaoFocusLost

    private void jtfCodInternoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfCodInternoKeyPressed
        if (evt.getKeyCode() == evt.VK_ENTER){
           jtfCodBarras.setEnabled(true);
           jtfCodBarras.requestFocus();
        }
    }//GEN-LAST:event_jtfCodInternoKeyPressed

    private void jtfPrateleiraKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfPrateleiraKeyPressed
        if (evt.getKeyCode() == evt.VK_ENTER){
           jtfPeso.setEnabled(true);
           jtfPeso.requestFocus();
        }
    }//GEN-LAST:event_jtfPrateleiraKeyPressed

    private void jtfPrateleiraFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtfPrateleiraFocusLost
        jtfPrateleira.setText(jtfPrateleira.getText().toUpperCase());
    }//GEN-LAST:event_jtfPrateleiraFocusLost

    private void jtfPesquisaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfPesquisaKeyPressed
        if (evt.getKeyCode() == evt.VK_ENTER){
            if (jtfPesquisa.getText().equals("")){
                jbtNovo.requestFocus();
            }
        }
        
    }//GEN-LAST:event_jtfPesquisaKeyPressed

    private void jbtSairKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jbtSairKeyPressed
        if (evt.getKeyCode() == evt.VK_ENTER){
            String op = System.getProperty("os.name");
            if (!"Linux".equals(op))
               dispose();

            menuView.Menu.jmenuProduto.setEnabled(true);
        }
    }//GEN-LAST:event_jbtSairKeyPressed

    private void jbtNovoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jbtNovoKeyPressed
        if (evt.getKeyCode() == evt.VK_ENTER){
           String op = System.getProperty("os.name");
           if (!"Linux".equals(op))            
               jbtNovoActionPerformed(null);
        }
    }//GEN-LAST:event_jbtNovoKeyPressed

    private void jbtSalvarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jbtSalvarKeyPressed
        if (evt.getKeyCode() == evt.VK_ENTER){
           
            String op = System.getProperty("os.name");
            if (!"Linux".equals(op))            
               jbtSalvarActionPerformed(null);

              // salvar(); 
            
        }
    }//GEN-LAST:event_jbtSalvarKeyPressed

    private void jbtCancelarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jbtCancelarKeyPressed
         if (evt.getKeyCode() == evt.VK_ENTER){
            String op = System.getProperty("os.name");
            if (!"Linux".equals(op))
               cancelar();
        }  
    }//GEN-LAST:event_jbtCancelarKeyPressed

    private void jtfEstoqueMinimoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfEstoqueMinimoKeyTyped
        String caracteres="0987654321.";
        if (!caracteres.contains(evt.getKeyChar()+"")){
           evt.consume();
        }

    }//GEN-LAST:event_jtfEstoqueMinimoKeyTyped

    private void jcbStatusKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jcbStatusKeyPressed
         if (evt.getKeyCode() == evt.VK_ENTER){             
             jtfPrateleira.setEnabled(true);
             jtfPrateleira.requestFocus();
        }
    }//GEN-LAST:event_jcbStatusKeyPressed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        Long id = (Long) jTable1.getValueAt(jTable1.getSelectedRow(), 0);       
        operacao = "alterar";
        jTabbedPane1.setSelectedIndex(0); 
        jPanel6.setVisible(true);
        jPanel7.setVisible(true);
        for (Produto prod : listaProduto){
            if (id == prod.getId()){
                
                jtfCodigo.setText(String.valueOf(prod.getId()));
                jtfDescricao.setText(prod.getDescricao());
                jtfCodBarras.setText(prod.getCodBarras());
                jtfCodInterno.setText(prod.getCod_interno());
      //          jtfCodOriginal.setText(prod.getCod_original());
                jcbCategoria.setSelectedItem(prod.getCategoria().getDescricao());
                jcbUnidade.setSelectedItem(prod.getUnidade().getSigla());
                
              //  jtfValorVenda.setText(String.valueOf(prod.getVlVenda()));
                jtfValorVenda.setText(new DecimalFormat("#,##0.000").format(prod.getVlVenda())); 
                
                
                jcbMarca.setSelectedItem(prod.getMarca().getDescricao());
                jtfPrateleira.setText(prod.getPrateleira());
                jtfEstoqueMinimo.setText(String.valueOf(prod.getEstoque_minimo()));
                jtfEstoque.setText(String.valueOf(prod.getEstoque()));
                if (prod.getStatus() == 0)
                   jcbStatus.setSelectedIndex(0);
                else
                   jcbStatus.setSelectedIndex(1);
                jlValorVenda.setVisible(true);
                jlValorVenda.setText(jtfValorVenda.getText());
                jtfPeso.setText(prod.getPeso());
                jtfPorcentagem.setText(new DecimalFormat("#,##0.0").format(prod.getPorcento_comissao()));
                jtfValorCompra.setText(new DecimalFormat("#,##0.000").format(prod.getVl_compra()));
                
                jtfValorAtacado.setText(new DecimalFormat("#,##0.000").format(prod.getVlVendaAtacado()));
                jlValorAtacado.setText(jtfValorAtacado.getText());
                
                jtfPorcentagemAtacado.setText(new DecimalFormat("#,##0.0").format(prod.getPorcentagemAtacado()));
                
                if (prod.isEstoque_controlado()){
                    jcbControlaEstoque.setSelected(true);
                    jtfEstoqueMinimo.setEnabled(true);
                    jtfEstoque.setEnabled(true);
                }else
                    jcbControlaEstoque.setSelected(false);
                jlPreco.setVisible(true);
                jtfTamanho.setText(prod.getTamanho());
                
                
                
        //        jtfUltimoValorCompra.setText(new DecimalFormat("#,##0.00").format(prod.getUltimo_vl_compra()));
        //        jtfModelo.setText(prod.getModelo());
                break;                
            }           
        }
        habilitar(true);
        jbtSalvar.setEnabled(true);
        jbtNovo.setEnabled(false);
        jbtCancelar.setEnabled(true);
        jtfPesquisa.setEnabled(false); 
        //jtfDescricao.requestFocus();
        
    }//GEN-LAST:event_jTable1MouseClicked

    private void jtfValorCompraKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfValorCompraKeyTyped
         String caracteres="0987654321,";
        if (!caracteres.contains(evt.getKeyChar()+"")){
           evt.consume();
        }
    }//GEN-LAST:event_jtfValorCompraKeyTyped

    private void jtfPorcentagemKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfPorcentagemKeyTyped
         String caracteres="0987654321,";
        if (!caracteres.contains(evt.getKeyChar()+"")){
           evt.consume();
        }
    }//GEN-LAST:event_jtfPorcentagemKeyTyped

    private void jtfValorVendaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfValorVendaKeyTyped
        String caracteres="0987654321,";
        if (!caracteres.contains(evt.getKeyChar()+"")){
           evt.consume();
        }
    }//GEN-LAST:event_jtfValorVendaKeyTyped

    private void jtfValorCompraKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfValorCompraKeyPressed
         if (evt.getKeyCode() == evt.VK_ENTER){
             if (jtfValorCompra.getText().equals("") || jtfValorCompra.getText().equals("0,000") || jtfValorCompra.getText().equals("0")){
                 jtfValorCompra.setText("0,000");
                 jtfPorcentagem.setText("0,00");
                 jtfValorVenda.setEnabled(true); 
                 jtfValorVenda.setText("");
                 jtfValorVenda.requestFocus();
             }else
                 if (!jtfValorCompra.getText().equals("")){
                     jtfPorcentagem.setEnabled(true);
                     jtfPorcentagem.requestFocus();
                 }
         }
    }//GEN-LAST:event_jtfValorCompraKeyPressed

    private void jtfPorcentagemKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfPorcentagemKeyPressed
        float vlVenda = 0, porcentagem = 0, vlUnit = 0;
        if (evt.getKeyCode() == evt.VK_ENTER){
           if (jtfPorcentagem.getText().equals("") || jtfPorcentagem.getText().equals("0,0") || jtfPorcentagem.getText().equals("0")){
               jtfPorcentagem.setText("0,0");
               jtfValorVenda.setEnabled(true);
               jtfValorVenda.setText("");
               jtfValorVenda.requestFocus();
           }else    
              if (jtfPorcentagem.getText() != ""){
                  String vlcompra = jtfValorCompra.getText();
                 // vlcompra = vlcompra.replace(".", "");
                  vlcompra = vlcompra.replace(",", ".");                 
                  jtfPorcentagem.setText(jtfPorcentagem.getText().replace(",", "."));
                  vlUnit = (Float.parseFloat(vlcompra));                  
                  porcentagem = (Float.parseFloat(jtfPorcentagem.getText()));
                  vlVenda = (vlUnit +(vlUnit*porcentagem/100));
                  jtfValorVenda.setText(String.valueOf(vlVenda));
                  jtfValorVenda.setText(new DecimalFormat("#,##0.000").format(Float.parseFloat(jtfValorVenda.getText())));
                  jtfValorVenda.setEnabled(true);
                  jtfPorcentagemAtacado.setEnabled(true);
                  jtfPorcentagemAtacado.requestFocus();          
              }                   
        }
    }//GEN-LAST:event_jtfPorcentagemKeyPressed

    private void jtfPesoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfPesoKeyPressed
        if (evt.getKeyCode() == evt.VK_ENTER){        
           jtfTamanho.setEnabled(true);
           jtfTamanho.requestFocus();
        }
    }//GEN-LAST:event_jtfPesoKeyPressed

    private void jcbControlaEstoqueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbControlaEstoqueActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jcbControlaEstoqueActionPerformed

    private void jcbControlaEstoqueKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jcbControlaEstoqueKeyPressed
        if (evt.getKeyCode() == evt.VK_ENTER){
            if (jcbControlaEstoque.isSelected()){
                jtfEstoqueMinimo.setEnabled(true);
                jtfEstoqueMinimo.requestFocus();
            }else{
                jTabbedPane1.setSelectedIndex(1);                          
                jtfValorCompra.setEnabled(true);
                jtfValorCompra.requestFocus();  
            }
                
                
        }
    }//GEN-LAST:event_jcbControlaEstoqueKeyPressed

    private void jtfTamanhoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfTamanhoKeyPressed
          if (evt.getKeyCode() == evt.VK_ENTER){        
           jcbControlaEstoque.setEnabled(true);
           jcbControlaEstoque.requestFocus();
        }
    }//GEN-LAST:event_jtfTamanhoKeyPressed

    private void jtfTamanhoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtfTamanhoFocusLost
        jtfTamanho.setText(jtfTamanho.getText().toUpperCase());
    }//GEN-LAST:event_jtfTamanhoFocusLost

    private void jtfValorAtacadoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfValorAtacadoKeyPressed
        float vlVendaAta = 0, porcentagemAta = 0, vlUnit = 0;
        if (evt.getKeyCode() == evt.VK_ENTER){
            if (jtfValorAtacado.getText().equals("") || jtfValorAtacado.getText().equals("0,00") || jtfValorAtacado.getText().equals("0.00")){
                jtfValorAtacado.setText("0,000");
            }else{                    
                 String venda = jtfValorAtacado.getText();
                 venda = venda.replace(".", "");
                 venda = venda.replace(",", ".");                       
                 vlVendaAta = Float.parseFloat(venda);                   
                 String unit = jtfValorCompra.getText();
                 unit = unit.replace(".", "");
                 unit = unit.replace(",", ".");                                              
                 vlUnit = Float.parseFloat(unit);  
                 
                 if (vlUnit == 0.0)
                     porcentagemAta = 100;
                 else
                     porcentagemAta = ((vlVendaAta - vlUnit)/vlUnit * 100);                     
                 jtfPorcentagemAtacado.setText(new DecimalFormat("#,##0.0").format(porcentagemAta));
             }
              jbtSalvar.setEnabled(true);
              jbtSalvar.requestFocus();
        }  
    }//GEN-LAST:event_jtfValorAtacadoKeyPressed

    private void jtfValorAtacadoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfValorAtacadoKeyTyped
        String caracteres="0987654321,";
        if (!caracteres.contains(evt.getKeyChar()+"")){
           evt.consume();
        }
    }//GEN-LAST:event_jtfValorAtacadoKeyTyped

    private void jtfPorcentagemAtacadoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfPorcentagemAtacadoKeyTyped
        String caracteres="0987654321,";
        if (!caracteres.contains(evt.getKeyChar()+"")){
           evt.consume();
        }
    }//GEN-LAST:event_jtfPorcentagemAtacadoKeyTyped

    private void jtfPorcentagemAtacadoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfPorcentagemAtacadoKeyPressed

        float vlVendaAta = 0, porcentagemAta = 0, vlUnit = 0;
        if (evt.getKeyCode() == evt.VK_ENTER){
           if (jtfPorcentagemAtacado.getText().equals("") || jtfPorcentagemAtacado.getText().equals("0,0") || jtfPorcentagemAtacado.getText().equals("0")){
               jtfPorcentagemAtacado.setText("0,0");
               jtfValorAtacado.setEnabled(true);
               jtfValorAtacado.setText("");
               jtfValorAtacado.requestFocus();
           }else    
              if (jtfPorcentagemAtacado.getText() != ""){
                  String vlcompra = jtfValorCompra.getText();
                 // vlcompra = vlcompra.replace(".", "");
                  vlcompra = vlcompra.replace(",", ".");                 
                  jtfPorcentagemAtacado.setText(jtfPorcentagemAtacado.getText().replace(",", "."));
                  vlUnit = (Float.parseFloat(vlcompra));                  
                  porcentagemAta = (Float.parseFloat(jtfPorcentagemAtacado.getText()));
                  vlVendaAta = (vlUnit +(vlUnit*porcentagemAta/100));
                  jtfValorAtacado.setText(String.valueOf(vlVendaAta));
                  jtfValorAtacado.setText(new DecimalFormat("#,##0.000").format(Float.parseFloat(jtfValorAtacado.getText())));
                  jtfValorAtacado.setEnabled(true);
                  jbtSalvar.setEnabled(true);
                  jbtSalvar.requestFocus();
          
              }                   
        }
    }//GEN-LAST:event_jtfPorcentagemAtacadoKeyPressed

    private void jbtExcluirKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jbtExcluirKeyPressed
         if (evt.getKeyCode() == evt.VK_ENTER){
            String op = System.getProperty("os.name");
            if (!"Linux".equals(op))
               jbtExcluirActionPerformed(null);
        }  
        
        
        
    }//GEN-LAST:event_jbtExcluirKeyPressed

    private void jtfEstoqueKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfEstoqueKeyTyped
        String caracteres="0987654321.";
        if (!caracteres.contains(evt.getKeyChar()+"")){
           evt.consume();
        }
    }//GEN-LAST:event_jtfEstoqueKeyTyped

    public Produto carregaObjeto(){
        
       Produto produto = new Produto();
       
       if (operacao == "alterar")
           produto.setId(Long.parseLong(jtfCodigo.getText()));               
       produto.setMarca(listMarca.get(jcbMarca.getSelectedIndex()));
       produto.setCategoria(listCategoria.get(jcbCategoria.getSelectedIndex()));
       produto.setUnidade(listUnidade.get(jcbUnidade.getSelectedIndex()));
       
       produto.setDescricao(jtfDescricao.getText());
       
       produto.setCodBarras(jtfCodBarras.getText());    
       produto.setEstoque_minimo(Float.parseFloat(jtfEstoqueMinimo.getText()));     
       
       produto.setEstoque(Float.parseFloat(jtfEstoque.getText()));
       String vlVenda = null;
       if (jtfValorVenda.getText().equals("")|| jtfValorVenda.getText().equals("0,00") || jtfValorVenda.getText().equals("0.00") 
               || jtfValorVenda.getText().equals("0") || jtfValorVenda.getText().equals("0.0")) 
           vlVenda = "0.000";
       else{
           vlVenda = (jtfValorVenda.getText());
           vlVenda = (vlVenda.replace(".", ""));
           vlVenda = (vlVenda.replace(",", "."));
       }
       
       String vlVendaAtacado = null;
       if (jtfValorAtacado.getText().equals("") || jtfValorAtacado.getText().equals("0,000") || jtfValorAtacado.getText().equals("0.00")
               || jtfValorAtacado.getText().equals("0") || jtfValorAtacado.getText().equals("0.0"))
           vlVendaAtacado = "0";   
       else{
           vlVendaAtacado = jtfValorAtacado.getText();
           vlVendaAtacado = (vlVendaAtacado.replace(".", ""));
           vlVendaAtacado = (vlVendaAtacado.replace(",", "."));
       }
          
//        System.out.println("Valor atacado ="+vlVendaAtacado);
       
       
       produto.setVlVenda(Float.parseFloat(vlVenda));      
       produto.setVlVendaAtacado(Float.parseFloat(vlVendaAtacado));
       produto.setPrateleira(jtfPrateleira.getText());
       produto.setCod_interno(jtfCodInterno.getText());
//       produto.setCod_original(jtfCodOriginal.getText());
       produto.setStatus(jcbStatus.getSelectedIndex());
       produto.setPeso(jtfPeso.getText());       
       String vlCompra = null;
       if (jtfValorCompra.getText().equals("") || jtfValorCompra.getText().equals("0.000")||jtfValorCompra.getText().equals("0,00")
               || jtfValorCompra.getText().equals("0") || jtfValorCompra.getText().equals("0.0")){
           vlCompra= "0.000";
       }else{
            vlCompra = jtfValorCompra.getText();
            vlCompra = vlCompra.replace(".", "");
            vlCompra = vlCompra.replace(",", ".");
       }         
       produto.setVl_compra(Float.parseFloat(vlCompra));       
       String porcentagem = null;
       if (jtfPorcentagem.getText().equals("") || jtfPorcentagem.getText().equals("0") || jtfPorcentagem.getText().equals("0,0"))
           porcentagem = "0.0";
       else{
           porcentagem = jtfPorcentagem.getText();
           porcentagem = porcentagem.replace(",", ".");
       }
       produto.setPorcento_comissao(Float.parseFloat(porcentagem)); 
       
       String porcentagemAtacado = null;
       if (jtfPorcentagemAtacado.getText().equals("") || jtfPorcentagemAtacado.getText().equals("0") || jtfPorcentagemAtacado.getText().equals("0,0"))
           porcentagemAtacado = "0.0";
       else{
           porcentagemAtacado = jtfPorcentagemAtacado.getText();
           porcentagemAtacado = porcentagemAtacado.replace(",", ".");
       }
       
       produto.setPorcentagemAtacado(Float.parseFloat(porcentagemAtacado));      
       
       if (jcbControlaEstoque.isSelected())
           produto.setEstoque_controlado(true);
       else
           produto.setEstoque_controlado(false);      

       produto.setTamanho(jtfTamanho.getText());       
       return produto;
    }
    
    private void limpar(){
        jtfCodigo.setText("");
        jtfDescricao.setText("");
        jtfCodBarras.setText("");
        jtfValorVenda.setText("");
        jtfEstoqueMinimo.setText("");
        jtfEstoque.setText("");
        jcbCategoria.setSelectedIndex(-1);
        jcbMarca.setSelectedIndex(-1);
        jcbUnidade.setSelectedIndex(-1);
        jcbStatus.setSelectedIndex(-1);
        jtfPrateleira.setText("");
        jtfCodInterno.setText("");
//        jtfCodOriginal.setText("");
        jtfPesquisa.setText("");
        jtfPeso.setText("");
        jtfPorcentagem.setText("");       
        jlValorVenda.setVisible(false);
        jtfValorCompra.setText("");
        jcbControlaEstoque.setSelected(false);
        jlPreco.setVisible(false);
        jtfTamanho.setText("");
        jtfPorcentagemAtacado.setText("");
        jtfValorAtacado.setText("");
        jPanel6.setVisible(false);
        jPanel7.setVisible(false);
//        jtfUltimoValorCompra.setText("");
//        jtfModelo.setText("");
    }

    private void habilitar(boolean habilitar){        
        jtfCodigo.setEnabled(habilitar);
        jtfDescricao.setEnabled(habilitar);
        jtfCodBarras.setEnabled(habilitar);
        jtfValorVenda.setEnabled(habilitar);
        jtfEstoque.setEnabled(habilitar);
        jtfEstoqueMinimo.setEnabled(habilitar);
        jcbCategoria.setEnabled(habilitar);
        jcbMarca.setEnabled(habilitar);
        jcbUnidade.setEnabled(habilitar);
        jbtNovo.setEnabled(habilitar);
        jbtCancelar.setEnabled(habilitar);
        jbtExcluir.setEnabled(habilitar);
        jbtSalvar.setEnabled(habilitar);
        jtfPrateleira.setEnabled(habilitar);
        jtfCodInterno.setEnabled(habilitar);
        jcbStatus.setEnabled(habilitar);
        jtfPeso.setEnabled(habilitar);
        jtfValorCompra.setEnabled(habilitar);
        jtfPorcentagem.setEnabled(habilitar);
        jcbControlaEstoque.setEnabled(habilitar);
        jtfTamanho.setEnabled(habilitar);
        jtfPorcentagemAtacado.setEnabled(habilitar);
        jtfValorAtacado.setEnabled(habilitar);
    } 
    private void carregaTable(){
        DefaultTableModel amodel = (DefaultTableModel) jTable1.getModel();
        amodel.setNumRows(0);
        ProdutoDAO proDAO = new ProdutoDAO(); 
        try{
           listaProduto = null;        
           listaProduto = proDAO.listaProduto();        
           for (Produto produto : listaProduto){
               amodel.addRow(new Object[]{produto.getId(),produto.getDescricao(), produto.getMarca().getDescricao(), produto.getUnidade().getSigla(),produto.getEstoque(), produto.getVlVenda(),  produto.getCategoria().getDescricao(), produto.getCodBarras(), produto.getCod_interno(), produto.getPrateleira()});            
           }
        }catch (Exception ex){
             JOptionPane.showMessageDialog(null, "Problemas ao Carregar Tabela de Produto"+ex.getMessage());
             ex.printStackTrace();
        }
    }

    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JButton jbtCancelar;
    private javax.swing.JButton jbtExcluir;
    private javax.swing.JButton jbtNovo;
    private javax.swing.JButton jbtSair;
    private javax.swing.JButton jbtSalvar;
    private javax.swing.JComboBox jcbCategoria;
    private javax.swing.JCheckBox jcbControlaEstoque;
    private javax.swing.JComboBox jcbMarca;
    private javax.swing.JComboBox jcbStatus;
    private javax.swing.JComboBox jcbUnidade;
    private javax.swing.JLabel jlPreco;
    private javax.swing.JLabel jlPreco1;
    private javax.swing.JLabel jlValorAtacado;
    private javax.swing.JLabel jlValorVenda;
    private javax.swing.JTextField jtfCodBarras;
    private javax.swing.JTextField jtfCodInterno;
    private javax.swing.JTextField jtfCodigo;
    private javax.swing.JTextField jtfDescricao;
    private javax.swing.JTextField jtfEstoque;
    private javax.swing.JTextField jtfEstoqueMinimo;
    private javax.swing.JTextField jtfPeso;
    private javax.swing.JTextField jtfPesquisa;
    private javax.swing.JTextField jtfPorcentagem;
    private javax.swing.JTextField jtfPorcentagemAtacado;
    private javax.swing.JTextField jtfPrateleira;
    private javax.swing.JTextField jtfTamanho;
    private javax.swing.JTextField jtfValorAtacado;
    private javax.swing.JTextField jtfValorCompra;
    private javax.swing.JTextField jtfValorVenda;
    private javax.swing.JLabel labelValorVenda;
    private javax.swing.JLabel labelValorVenda1;
    private converter.RowSorterToStringConverter rowSorterToStringConverter1;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables
}
