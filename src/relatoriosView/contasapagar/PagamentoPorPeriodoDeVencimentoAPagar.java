/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package relatoriosView.contasapagar;

import dao.EmpresaDAO;
import dao.PagamentoCabDAO;
import java.io.InputStream;
import java.text.DateFormat;
import java.text.DecimalFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.Empresa;
import model.PagamentoCab;

import model.PagamentoDet;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.data.JRBeanCollectionDataSource;
import net.sf.jasperreports.view.JasperViewer;
import relatoriosView.ImprimeRelatorio;

/**
 *
 * @author del
 */
public class PagamentoPorPeriodoDeVencimentoAPagar extends javax.swing.JInternalFrame {

    /**
     * Creates new form PagamentoPorPeriodoDeVencimento
     */
    List<PagamentoDet> listaPagamento;
    DateFormat df = new SimpleDateFormat ("dd/MM/yyyy");
    
    public PagamentoPorPeriodoDeVencimentoAPagar() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jtfDataini = new javax.swing.JFormattedTextField();
        jtfDatafim = new javax.swing.JFormattedTextField();
        jbtPesquisa = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jrbContasAPagar = new javax.swing.JRadioButton();
        jrbContasPaga = new javax.swing.JRadioButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        jbtSair = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setClosable(true);
        setMaximizable(true);
        setTitle("Contas à Pagar por Período de Vencimento");

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Período"));

        jLabel1.setText("De:");

        jLabel2.setText("à");

        try {
            jtfDataini.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        jtfDataini.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtfDatainiKeyPressed(evt);
            }
        });

        try {
            jtfDatafim.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        jtfDatafim.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtfDatafimKeyPressed(evt);
            }
        });

        jbtPesquisa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/Find.png"))); // NOI18N
        jbtPesquisa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtPesquisaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jtfDataini, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addComponent(jtfDatafim, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jbtPesquisa, javax.swing.GroupLayout.DEFAULT_SIZE, 89, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jbtPesquisa, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jtfDataini, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jtfDatafim, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Tipo da Conta "));

        buttonGroup1.add(jrbContasAPagar);
        jrbContasAPagar.setText("Contas à Pagar");
        jrbContasAPagar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jrbContasAPagarMouseClicked(evt);
            }
        });
        jrbContasAPagar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jrbContasAPagarKeyPressed(evt);
            }
        });

        buttonGroup1.add(jrbContasPaga);
        jrbContasPaga.setText("Contas Paga");
        jrbContasPaga.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jrbContasPagaMouseClicked(evt);
            }
        });
        jrbContasPaga.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jrbContasPagaKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jrbContasAPagar)
                .addGap(35, 35, 35)
                .addComponent(jrbContasPaga)
                .addContainerGap(128, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jrbContasAPagar)
                    .addComponent(jrbContasPaga))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "NUM. DOC.", "DESCRIÇÃO", "FORNECEDOR", "VENCIMENTO", "NUM. PARCELA", "PARCELAS", "R$ PARCELA", "R$ TOTAL"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jTable1.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setPreferredWidth(80);
            jTable1.getColumnModel().getColumn(1).setPreferredWidth(210);
            jTable1.getColumnModel().getColumn(2).setPreferredWidth(280);
            jTable1.getColumnModel().getColumn(3).setPreferredWidth(130);
            jTable1.getColumnModel().getColumn(4).setPreferredWidth(100);
            jTable1.getColumnModel().getColumn(5).setPreferredWidth(100);
            jTable1.getColumnModel().getColumn(6).setPreferredWidth(100);
            jTable1.getColumnModel().getColumn(7).setPreferredWidth(120);
        }

        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jbtSair.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/exit_1.png"))); // NOI18N
        jbtSair.setToolTipText("Fechar Formulário");
        jbtSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtSairActionPerformed(evt);
            }
        });

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/print-icon.png"))); // NOI18N
        jButton2.setText("Imprimir");
        jButton2.setToolTipText("Imprimir Relatório");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addComponent(jButton2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jbtSair))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jbtSair)
            .addComponent(jButton2)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1)
                .addContainerGap())
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 391, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        getAccessibleContext().setAccessibleName("Relatório de Contas à Pagar por Período de Vencimento");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jtfDatainiKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfDatainiKeyPressed
        if (evt.getKeyCode() == evt.VK_ENTER){
            String dtIni = jtfDataini.getText();

            df.setLenient (false); // aqui o pulo do gato
            try {
                df.parse(dtIni);
                jtfDatafim.setEnabled(true);
                jtfDatafim.requestFocus();
            } catch (ParseException ex) {
                JOptionPane.showMessageDialog(null, "Data Inicial inválida");
            }
        }
    }//GEN-LAST:event_jtfDatainiKeyPressed

    private void jtfDatafimKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfDatafimKeyPressed
        if (evt.getKeyCode() == evt.VK_ENTER){
            String dtFim = jtfDatafim.getText();
            df.setLenient(false);
            try{
                df.parse(dtFim);
                jbtPesquisa.requestFocus();
            }catch (ParseException ex){
                JOptionPane.showMessageDialog(null, "Data Final inválida");
            }
        }
    }//GEN-LAST:event_jtfDatafimKeyPressed

    private void jbtPesquisaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtPesquisaActionPerformed
        DefaultTableModel amodel = (DefaultTableModel) jTable1.getModel();
        amodel.setNumRows(0);
        PagamentoCabDAO pagtoDAO = new PagamentoCabDAO();
        Date dataIni = null, dataFim = null;

       
        //Validação de Data Inicial e Final.
        if (!jtfDataini.getText().equals("")){
            try {
                dataIni = df.parse(jtfDataini.getText());
            } catch (ParseException ex) {
                Logger.getLogger(PagamentoPorPeriodoDeVencimentoAPagar.class.getName()).log(Level.SEVERE, null, ex);
            }
        }else{
             JOptionPane.showMessageDialog(null, "A data inicial está vazia");
             return;
        }
        if (!jtfDatafim.getText().equals("")){
            try {
                dataFim = df.parse(jtfDatafim.getText());
            } catch (ParseException ex) {
                Logger.getLogger(PagamentoPorPeriodoDeVencimentoAPagar.class.getName()).log(Level.SEVERE, null, ex);
            }
        }else{
             JOptionPane.showMessageDialog(null, "A data final está vazia");
             return;
        }           
        if (jrbContasAPagar.isSelected()){
            try{
                listaPagamento = pagtoDAO.listaPorPeriodoDeVencimentoAPagar(dataIni, dataFim);

                if (listaPagamento.isEmpty()){
                    JOptionPane.showMessageDialog(null, "Não têm Conta à Pagar neste Período");
                    return;
                }            
                PagamentoCabRel pagtoRel = new PagamentoCabRel();
            
                for (PagamentoDet pagto : listaPagamento){            
                    pagtoRel.setNum_doc(pagto.getPagamentoCab().getNumdoc());
                    pagtoRel.setDescricao(pagto.getPagamentoCab().getDescricao());
                    pagtoRel.setFornecedor(pagto.getPagamentoCab().getFornecedor().getNome());
                    pagtoRel.setVencimento(df.format(pagto.getVencimento()));
                    pagtoRel.setParcelas(String.valueOf(pagto.getPagamentoCab().getQtd_parcela()));
                    pagtoRel.setTotal(new DecimalFormat("#,##0.00").format(pagto.getPagamentoCab().getVl_total()));
                    pagtoRel.setNumParcela(String.valueOf(pagto.getNum_parcela()));
                    pagtoRel.setVlParcela(new DecimalFormat("#,##0.00").format(pagto.getVl_parcela()));
                   
                    //Carrega JTable
                    amodel.addRow(new Object[]{pagtoRel.getNum_doc(), pagtoRel.getDescricao(), pagtoRel.getFornecedor(),
                    pagtoRel.getVencimento(),pagtoRel.getNumParcela(), pagtoRel.getParcelas(), pagtoRel.getVlParcela(), pagtoRel.getTotal()});
                }    
            }catch (Exception ex){
                JOptionPane.showMessageDialog(null, "Problemas ao Carregar Tabela de Contas à Pagar por Período de Vencimento"+ex.getMessage());
                ex.printStackTrace();
            }
        }else
            if (jrbContasPaga.isSelected()){
                //terminar
                /*  terminar */
            }
    

    }//GEN-LAST:event_jbtPesquisaActionPerformed

    private void jbtSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtSairActionPerformed

        dispose();
    }//GEN-LAST:event_jbtSairActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        try {
            imprimirRelatorioContasAPagar(listaPagamento, jtfDataini.getText(), jtfDatafim.getText());
        } catch (JRException ex) {
            JOptionPane.showMessageDialog(null, "Problemas ao Gerar Relatório de Contas à Pagar!!! Error:"+ex.getMessage());
        }

    }//GEN-LAST:event_jButton2ActionPerformed

    private void jrbContasAPagarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jrbContasAPagarKeyPressed
        if (evt.getKeyCode() == evt.VK_ENTER){
            if (jrbContasAPagar.isSelected())
                jtfDataini.requestFocus();
            else
                jrbContasPaga.requestFocus();
        }

    }//GEN-LAST:event_jrbContasAPagarKeyPressed

    private void jrbContasPagaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jrbContasPagaKeyPressed
        if (evt.getKeyCode() == evt.VK_ENTER){
            if (jrbContasPaga.isSelected())
                jtfDataini.requestFocus();
            else
                jrbContasAPagar.requestFocus();
        }

    }//GEN-LAST:event_jrbContasPagaKeyPressed

    private void jrbContasAPagarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jrbContasAPagarMouseClicked
        if (jrbContasAPagar.isSelected())
                jtfDataini.requestFocus();
            else
                jrbContasPaga.requestFocus();
    }//GEN-LAST:event_jrbContasAPagarMouseClicked

    private void jrbContasPagaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jrbContasPagaMouseClicked
        if (jrbContasPaga.isSelected())
                jtfDataini.requestFocus();
            else
                jrbContasAPagar.requestFocus();
        
    }//GEN-LAST:event_jrbContasPagaMouseClicked

    private void imprimirRelatorioContasAPagar(List<PagamentoDet> listaPagamento,String dataIni, String dataFim) throws JRException{
        List listaDados = new ArrayList();
        Map parametros = new HashMap(); 
        Empresa empresa = new Empresa();
        EmpresaDAO empDAO = new EmpresaDAO();
       // CompraCabRel compraRel = new CompraCabRel();
        PagamentoCabRel pcr = new PagamentoCabRel();
        float totalGeral = 0, totalParcial = 0;
        String numDoc = "0";
        for(PagamentoDet pgCab : listaPagamento){
            pcr.setNum_doc(pgCab.getPagamentoCab().getNumdoc());
            pcr.setDescricao(pgCab.getPagamentoCab().getDescricao());
            pcr.setFornecedor(pgCab.getPagamentoCab().getFornecedor().getNome());
            pcr.setVencimento(df.format(pgCab.getVencimento()));           
            pcr.setNumParcela(String.valueOf(pgCab.getNum_parcela()));            
            pcr.setParcelas(String.valueOf(pgCab.getPagamentoCab().getQtd_parcela()));            
            pcr.setVlParcela(new DecimalFormat("#,##0.00").format(pgCab.getVl_parcela()));
            pcr.setTotal(new DecimalFormat("#,##0.00").format(pgCab.getPagamentoCab().getVl_total()));            
           
           // if (pgCab.getPagamentoCab().getNumdoc() == null ? numDoc != null : !pgCab.getPagamentoCab().getNumdoc().equals(numDoc)){
            totalGeral = totalGeral + pgCab.getPagamentoCab().getVl_total();
          //  }
            numDoc = pgCab.getPagamentoCab().getNumdoc();
            totalParcial = totalParcial + pgCab.getVl_parcela();            
           
            listaDados.add(new PagamentoCabRel(pcr.getNum_doc(), pcr.getDescricao(), pcr.getFornecedor(), pcr.getVencimento(),
            pcr.getNumParcela(), pcr.getParcelas(), pcr.getVlParcela(), pcr.getTotal()));
        }
        String totalGeral_str = null, totalParcial_str = null;
        totalGeral_str = (new DecimalFormat("#,##0.00").format(totalGeral));
        totalParcial_str = (new DecimalFormat("#,##0.00").format(totalParcial));
        parametros.put("totalGeral", totalGeral_str);
        parametros.put("totalParcial", totalParcial_str);
        parametros.put("dataInicial", dataIni);
        parametros.put("dataFinal", dataFim);
        
        
        
   //     InputStream logo = getClass().getResourceAsStream("../img/logoPinheiro1.png");
        
      //Parametros dos Dados da Empresa.
        empresa = empDAO.getEmpresa();
        if (empresa.getLogo() == null)
            JOptionPane.showMessageDialog(null, "Imagem nao encontrada");
        
        parametros.put("logo", empresa.getLogo()); 
        parametros.put("empresa_telefone", empresa.getTelefone());
        parametros.put("empresa_endereco", empresa.getLogradouro()+" , "+empresa.getNumero()+" - "+empresa.getBairro()
        +" - "+empresa.getCidade()+" - "+empresa.getEstado());        
        parametros.put("empresa_nome", empresa.getNomeFantasia());
        parametros.put("empresa_cnpj", empresa.getCnpj());
        parametros.put("empresa_ie", empresa.getIe());
        
                
        InputStream is = getClass().getResourceAsStream("PagamentoPorPeriodoDeVencimentoAPagar.jasper");              
        if (is == null)
            JOptionPane.showMessageDialog(null, "Relatório não Encontrado");
        JRBeanCollectionDataSource relat = new JRBeanCollectionDataSource(listaDados);
        JasperPrint jp = null;
        jp = JasperFillManager.fillReport(is, parametros, relat);
        JasperViewer jv = new JasperViewer(jp, false);
        jv.setDefaultCloseOperation(JasperViewer.DISPOSE_ON_CLOSE);
        jv.setVisible(true);
        
        
        
    }
    
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JButton jbtPesquisa;
    private javax.swing.JButton jbtSair;
    private javax.swing.JRadioButton jrbContasAPagar;
    private javax.swing.JRadioButton jrbContasPaga;
    private javax.swing.JFormattedTextField jtfDatafim;
    private javax.swing.JFormattedTextField jtfDataini;
    // End of variables declaration//GEN-END:variables
}
